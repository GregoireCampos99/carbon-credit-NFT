{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_settings",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Bid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Cash",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "FeeClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PriceUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Start",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "UpdateAuctionLength",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "UpdateCuratorFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Won",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionState",
      "outputs": [
        {
          "internalType": "enum TokenVault.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "end",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_curator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_listPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_curator",
          "type": "address"
        }
      ],
      "name": "kickCurator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "livePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeReserve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reservePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserveTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_length",
          "type": "uint256"
        }
      ],
      "name": "updateAuctionLength",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_curator",
          "type": "address"
        }
      ],
      "name": "updateCurator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "updateFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_new",
          "type": "uint256"
        }
      ],
      "name": "updateUserPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userPrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultClosed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winning",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "Interfaces/IWETH.sol",
    "1": "contracts/ERC721TokenVault.sol",
    "11": "openZeppelin/token/ERC721/IERC721.sol",
    "15": "openZeppelin/upgradeable/proxy/utils/Initializable.sol",
    "16": "openZeppelin/upgradeable/token/ERC20/ERC20Upgradeable.sol",
    "17": "openZeppelin/upgradeable/token/ERC20/IERC20Upgradeable.sol",
    "18": "openZeppelin/upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
    "19": "openZeppelin/upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
    "20": "openZeppelin/upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
    "21": "openZeppelin/upgradeable/utils/ContextUpgradeable.sol",
    "22": "openZeppelin/utils/Address.sol",
    "5": "interfaces/ISettings.sol",
    "6": "openZeppelin/access/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC721TokenVault.sol",
    "exportedSymbols": {
      "Address": [
        4231
      ],
      "Context": [
        4254
      ],
      "ContextUpgradeable": [
        5744
      ],
      "ERC165": [
        3743
      ],
      "ERC20Upgradeable": [
        3360
      ],
      "ERC721": [
        2787
      ],
      "ERC721HolderUpgradeable": [
        3409
      ],
      "EnumerableMap": [
        4834
      ],
      "EnumerableSet": [
        5349
      ],
      "IERC165": [
        5774
      ],
      "IERC20MetadataUpgradeable": [
        5701
      ],
      "IERC20Upgradeable": [
        5676
      ],
      "IERC721": [
        3859
      ],
      "IERC721Enumerable": [
        3890
      ],
      "IERC721Metadata": [
        3917
      ],
      "IERC721Receiver": [
        3935
      ],
      "IERC721ReceiverUpgradeable": [
        5762
      ],
      "ISettings": [
        3686
      ],
      "IWETH": [
        1449
      ],
      "Initializable": [
        5598
      ],
      "Ownable": [
        3519
      ],
      "Settings": [
        1841
      ],
      "Strings": [
        5552
      ],
      "TokenVault": [
        1193
      ]
    },
    "id": 1194,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:1"
      },
      {
        "absolutePath": "contracts/Settings.sol",
        "file": "./Settings.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1194,
        "sourceUnit": 1842,
        "src": "56:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "Interfaces/IWETH.sol",
        "file": "../Interfaces/IWETH.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1194,
        "sourceUnit": 1450,
        "src": "81:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openZeppelin/token/ERC721/ERC721.sol",
        "file": "../openZeppelin/token/ERC721/ERC721.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1194,
        "sourceUnit": 2788,
        "src": "115:49:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openZeppelin/upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "../openZeppelin/upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1194,
        "sourceUnit": 3361,
        "src": "165:70:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openZeppelin/upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "file": "../openZeppelin/upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1194,
        "sourceUnit": 3410,
        "src": "236:84:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3360,
              "src": "345:16:1"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "345:16:1"
          },
          {
            "baseName": {
              "id": 9,
              "name": "ERC721HolderUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3409,
              "src": "363:23:1"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "363:23:1"
          }
        ],
        "canonicalName": "TokenVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1193,
        "linearizedBaseContracts": [
          1193,
          3409,
          5762,
          3360,
          5701,
          5676,
          5744,
          5598
        ],
        "name": "TokenVault",
        "nameLocation": "331:10:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 13,
            "libraryName": {
              "id": 11,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4231,
              "src": "399:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "393:26:1",
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "411:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "documentation": {
              "id": 14,
              "nodeType": "StructuredDocumentation",
              "src": "558:24:1",
              "text": "@notice weth address"
            },
            "functionSelector": "3fc8cef3",
            "id": 17,
            "mutability": "constant",
            "name": "weth",
            "nameLocation": "611:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "587:73:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 15,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "587:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "618:42:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "800:57:1",
              "text": "@notice the ERC721 token address of the vault's token"
            },
            "functionSelector": "fc0c546a",
            "id": 20,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "877:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "862:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "862:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 21,
              "nodeType": "StructuredDocumentation",
              "src": "889:52:1",
              "text": "@notice the ERC721 token ID of the vault's token"
            },
            "functionSelector": "af640d0f",
            "id": 23,
            "mutability": "mutable",
            "name": "id",
            "nameLocation": "961:2:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "946:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "946:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 24,
              "nodeType": "StructuredDocumentation",
              "src": "1109:60:1",
              "text": "@notice the unix timestamp end time of the token auction"
            },
            "functionSelector": "2a24f46c",
            "id": 26,
            "mutability": "mutable",
            "name": "auctionEnd",
            "nameLocation": "1189:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "1174:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1174:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 27,
              "nodeType": "StructuredDocumentation",
              "src": "1206:34:1",
              "text": "@notice the length of auctions"
            },
            "functionSelector": "325c25a2",
            "id": 29,
            "mutability": "mutable",
            "name": "auctionLength",
            "nameLocation": "1260:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "1245:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1245:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "1280:39:1",
              "text": "@notice reservePrice * votingTokens"
            },
            "functionSelector": "7b5581ed",
            "id": 32,
            "mutability": "mutable",
            "name": "reserveTotal",
            "nameLocation": "1339:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "1324:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1324:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 33,
              "nodeType": "StructuredDocumentation",
              "src": "1358:60:1",
              "text": "@notice the current price of the token during an auction"
            },
            "functionSelector": "6da84e6c",
            "id": 35,
            "mutability": "mutable",
            "name": "livePrice",
            "nameLocation": "1438:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "1423:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1423:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 36,
              "nodeType": "StructuredDocumentation",
              "src": "1454:54:1",
              "text": "@notice the current user winning the token auction"
            },
            "functionSelector": "853a1b90",
            "id": 38,
            "mutability": "mutable",
            "name": "winning",
            "nameLocation": "1536:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "1513:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1513:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "TokenVault.State",
            "id": 43,
            "members": [
              {
                "id": 39,
                "name": "inactive",
                "nameLocation": "1563:8:1",
                "nodeType": "EnumValue",
                "src": "1563:8:1"
              },
              {
                "id": 40,
                "name": "live",
                "nameLocation": "1573:4:1",
                "nodeType": "EnumValue",
                "src": "1573:4:1"
              },
              {
                "id": 41,
                "name": "ended",
                "nameLocation": "1579:5:1",
                "nodeType": "EnumValue",
                "src": "1579:5:1"
              },
              {
                "id": 42,
                "name": "redeemed",
                "nameLocation": "1586:8:1",
                "nodeType": "EnumValue",
                "src": "1586:8:1"
              }
            ],
            "name": "State",
            "nameLocation": "1555:5:1",
            "nodeType": "EnumDefinition",
            "src": "1550:46:1"
          },
          {
            "constant": false,
            "functionSelector": "7fb45099",
            "id": 46,
            "mutability": "mutable",
            "name": "auctionState",
            "nameLocation": "1615:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "1602:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$43",
              "typeString": "enum TokenVault.State"
            },
            "typeName": {
              "id": 45,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43,
                "src": "1602:5:1"
              },
              "referencedDeclaration": 43,
              "src": "1602:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$43",
                "typeString": "enum TokenVault.State"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 47,
              "nodeType": "StructuredDocumentation",
              "src": "1767:58:1",
              "text": "@notice the governance contract which gets paid in ETH"
            },
            "functionSelector": "e06174e4",
            "id": 49,
            "mutability": "immutable",
            "name": "settings",
            "nameLocation": "1855:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "1830:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1830:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "1870:55:1",
              "text": "@notice the address who initially deposited the NFT"
            },
            "functionSelector": "e66f53b7",
            "id": 52,
            "mutability": "mutable",
            "name": "curator",
            "nameLocation": "1945:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "1930:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1930:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 53,
              "nodeType": "StructuredDocumentation",
              "src": "1959:77:1",
              "text": "@notice the AUM fee paid to the curator yearly. 3 decimals. ie. 100 = 10%"
            },
            "functionSelector": "ddca3f43",
            "id": 55,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "2056:3:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "2041:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 54,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2041:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 56,
              "nodeType": "StructuredDocumentation",
              "src": "2066:54:1",
              "text": "@notice the last timestamp where fees were claimed"
            },
            "functionSelector": "adc1b956",
            "id": 58,
            "mutability": "mutable",
            "name": "lastClaimed",
            "nameLocation": "2140:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "2125:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 57,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2125:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 59,
              "nodeType": "StructuredDocumentation",
              "src": "2158:57:1",
              "text": "@notice a boolean to indicate if the vault has closed"
            },
            "functionSelector": "5c9920fc",
            "id": 61,
            "mutability": "mutable",
            "name": "vaultClosed",
            "nameLocation": "2232:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "2220:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 60,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2220:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 62,
              "nodeType": "StructuredDocumentation",
              "src": "2250:88:1",
              "text": "@notice the number of ownership tokens voting on the reserve price at any given time"
            },
            "functionSelector": "9a4e6d34",
            "id": 64,
            "mutability": "mutable",
            "name": "votingTokens",
            "nameLocation": "2358:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "2343:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 63,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2343:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 65,
              "nodeType": "StructuredDocumentation",
              "src": "2377:59:1",
              "text": "@notice a mapping of users to their desired token price"
            },
            "functionSelector": "c91de649",
            "id": 69,
            "mutability": "mutable",
            "name": "userPrices",
            "nameLocation": "2476:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 1193,
            "src": "2441:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 68,
              "keyType": {
                "id": 66,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2449:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2441:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 67,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2460:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 70,
              "nodeType": "StructuredDocumentation",
              "src": "2593:60:1",
              "text": "@notice An event emitted when a user updates their price"
            },
            "eventSelector": "64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c",
            "id": 76,
            "name": "PriceUpdate",
            "nameLocation": "2664:11:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2692:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "2676:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2703:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "2698:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2698:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2675:34:1"
            },
            "src": "2658:52:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 77,
              "nodeType": "StructuredDocumentation",
              "src": "2716:51:1",
              "text": "@notice An event emitted when an auction starts"
            },
            "eventSelector": "cfb9c5312b25ec7b809d61e638df25f749eae5d5c25399e1c93d1d319bfd5821",
            "id": 83,
            "name": "Start",
            "nameLocation": "2778:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2800:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "2784:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2784:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2812:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "2807:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2807:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2783:35:1"
            },
            "src": "2772:47:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 84,
              "nodeType": "StructuredDocumentation",
              "src": "2825:47:1",
              "text": "@notice An event emitted when a bid is made"
            },
            "eventSelector": "e684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d2",
            "id": 90,
            "name": "Bid",
            "nameLocation": "2883:3:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2903:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "2887:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2887:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2915:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "2910:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2886:35:1"
            },
            "src": "2877:45:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 91,
              "nodeType": "StructuredDocumentation",
              "src": "2928:51:1",
              "text": "@notice An event emitted when an auction is won"
            },
            "eventSelector": "8b01f9dd0400d6a1e84369a5fb8f6033934856ffa8ebadd707dca302ab551695",
            "id": 97,
            "name": "Won",
            "nameLocation": "2990:3:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "3010:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "2994:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2994:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "3022:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "3017:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2993:35:1"
            },
            "src": "2984:45:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 98,
              "nodeType": "StructuredDocumentation",
              "src": "3035:72:1",
              "text": "@notice An event emitted when someone redeems all tokens for the NFT"
            },
            "eventSelector": "d1b5ea7fe0f1c2fa09d49c2aa9b2200664ba57a734f1d95481d95b7f99af991c",
            "id": 102,
            "name": "Redeem",
            "nameLocation": "3118:6:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "redeemer",
                  "nameLocation": "3141:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "3125:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3125:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3124:26:1"
            },
            "src": "3112:39:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 103,
              "nodeType": "StructuredDocumentation",
              "src": "3157:98:1",
              "text": "@notice An event emitted when someone cashes in ERC20 tokens for ETH from an ERC721 token sale"
            },
            "eventSelector": "730831a1e4aa2d187ddd8e03d7beeac760a3927da5f112d645e0f8df7494b367",
            "id": 109,
            "name": "Cash",
            "nameLocation": "3266:4:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3287:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3271:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3271:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "3302:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3294:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3294:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3270:39:1"
            },
            "src": "3260:50:1"
          },
          {
            "anonymous": false,
            "eventSelector": "4ab86ae701798277aa378943b9dfd155d3b19703cd57be298908fadd32f7bf46",
            "id": 113,
            "name": "UpdateAuctionLength",
            "nameLocation": "3322:19:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "length",
                  "nameLocation": "3350:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "3342:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3342:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3341:16:1"
            },
            "src": "3316:42:1"
          },
          {
            "anonymous": false,
            "eventSelector": "2d1dae59a9e9ec0bc2ab19d45b7d10c8c55304fa08b40a7998e9f67f03223d04",
            "id": 117,
            "name": "UpdateCuratorFee",
            "nameLocation": "3370:16:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "3395:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "3387:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3387:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3386:13:1"
            },
            "src": "3364:36:1"
          },
          {
            "anonymous": false,
            "eventSelector": "62b10e3ff3d45b5ff546e740b893897facb1680285f989a64ae932d62c5388e1",
            "id": 121,
            "name": "FeeClaimed",
            "nameLocation": "3412:10:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "3431:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "3423:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3423:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3422:13:1"
            },
            "src": "3406:30:1"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "3473:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 126,
                      "name": "settings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "3483:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 127,
                      "name": "_settings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "3494:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3483:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:20:1"
                }
              ]
            },
            "id": 131,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_settings",
                  "nameLocation": "3462:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3454:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3453:19:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3473:0:1"
            },
            "scope": 1193,
            "src": "3442:68:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "3699:429:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 153,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "3764:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 154,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 147,
                        "src": "3771:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 152,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2837,
                      "src": "3751:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3751:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3751:28:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 157,
                      "name": "__ERC721Holder_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3378,
                      "src": "3789:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3789:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "3789:21:1"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "3853:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 161,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "3861:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3853:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "3853:14:1"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "3877:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 165,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "3882:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3877:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "3877:8:1"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 168,
                      "name": "auctionLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3895:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3911:6:1",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_259200_by_1",
                        "typeString": "int_const 259200"
                      },
                      "value": "3"
                    },
                    "src": "3895:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "3895:22:1"
                },
                {
                  "expression": {
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 172,
                      "name": "curator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "3927:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 173,
                      "name": "_curator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 133,
                      "src": "3937:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3927:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "3927:18:1"
                },
                {
                  "expression": {
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 176,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "3955:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 177,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "3961:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3955:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "3955:10:1"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 180,
                      "name": "lastClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "3975:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 181,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3989:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3989:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3975:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "3975:29:1"
                },
                {
                  "expression": {
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 185,
                      "name": "auctionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "4014:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$43",
                        "typeString": "enum TokenVault.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 186,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "4029:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                          "typeString": "type(enum TokenVault.State)"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "4029:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$43",
                        "typeString": "enum TokenVault.State"
                      }
                    },
                    "src": "4014:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$43",
                      "typeString": "enum TokenVault.State"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "4014:29:1"
                },
                {
                  "expression": {
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 190,
                        "name": "userPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "4053:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 192,
                      "indexExpression": {
                        "id": 191,
                        "name": "_curator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "4064:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4053:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 193,
                      "name": "_listPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "4076:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4053:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "4053:33:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 197,
                        "name": "_curator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "4103:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 198,
                        "name": "_supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "4113:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 196,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3216,
                      "src": "4097:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4097:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "4097:24:1"
                }
              ]
            },
            "functionSelector": "626fb2f0",
            "id": 202,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 150,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 149,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5597,
                  "src": "3687:11:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3687:11:1"
              }
            ],
            "name": "initialize",
            "nameLocation": "3525:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_curator",
                  "nameLocation": "3544:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3536:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3536:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3562:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3554:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3554:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "3578:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3570:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3570:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_supply",
                  "nameLocation": "3591:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3583:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3583:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "_listPrice",
                  "nameLocation": "3608:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3600:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "3628:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3620:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3620:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3648:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3634:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3634:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3669:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "3655:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3655:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3535:142:1"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3699:0:1"
            },
            "scope": 1193,
            "src": "3516:612:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "4311:75:1",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 208,
                        "name": "votingTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "4328:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4344:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4328:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 212,
                        "name": "reserveTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "4352:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 213,
                        "name": "votingTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "4367:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4352:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4328:51:1",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4348:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 207,
                  "id": 216,
                  "nodeType": "Return",
                  "src": "4321:58:1"
                }
              ]
            },
            "documentation": {
              "id": 203,
              "nodeType": "StructuredDocumentation",
              "src": "4134:119:1",
              "text": "--------------------------------\n -------- VIEW FUNCTIONS --------\n --------------------------------"
            },
            "functionSelector": "db2e1eed",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reservePrice",
            "nameLocation": "4267:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4279:2:1"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "4302:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4302:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4301:9:1"
            },
            "scope": 1193,
            "src": "4258:128:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "4662:110:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 225,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4680:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4680:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 228,
                                  "name": "settings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49,
                                  "src": "4702:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 227,
                                "name": "Ownable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3519,
                                "src": "4694:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Ownable_$3519_$",
                                  "typeString": "type(contract Ownable)"
                                }
                              },
                              "id": 229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4694:17:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Ownable_$3519",
                                "typeString": "contract Ownable"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3454,
                            "src": "4694:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4694:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4680:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6b69636b3a6e6f7420676f76",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4721:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f1efc05e2bc4f6f310d58cb4d8a3a847896ef87371cc113bb7a889828218119",
                          "typeString": "literal_string \"kick:not gov\""
                        },
                        "value": "kick:not gov"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f1efc05e2bc4f6f310d58cb4d8a3a847896ef87371cc113bb7a889828218119",
                          "typeString": "literal_string \"kick:not gov\""
                        }
                      ],
                      "id": 224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4672:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4672:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "4672:64:1"
                },
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 236,
                      "name": "curator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4747:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 237,
                      "name": "_curator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "4757:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4747:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "4747:18:1"
                }
              ]
            },
            "documentation": {
              "id": 219,
              "nodeType": "StructuredDocumentation",
              "src": "4513:96:1",
              "text": "@notice allow governance to boot a bad actor curator\n @param _curator the new curator"
            },
            "functionSelector": "2a44f120",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "kickCurator",
            "nameLocation": "4623:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_curator",
                  "nameLocation": "4643:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "4635:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4635:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4634:18:1"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4662:0:1"
            },
            "scope": 1193,
            "src": "4614:158:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "4887:459:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 248,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4905:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4905:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 251,
                                  "name": "settings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49,
                                  "src": "4927:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 250,
                                "name": "Ownable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3519,
                                "src": "4919:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Ownable_$3519_$",
                                  "typeString": "type(contract Ownable)"
                                }
                              },
                              "id": 252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4919:17:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Ownable_$3519",
                                "typeString": "contract Ownable"
                              }
                            },
                            "id": 253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3454,
                            "src": "4919:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4919:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4905:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72656d6f76653a6e6f7420676f76",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4946:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc0eb33ff7c0f64daf0784f452c7c136df3886ad6099340ef267fb1fdaf8974e",
                          "typeString": "literal_string \"remove:not gov\""
                        },
                        "value": "remove:not gov"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc0eb33ff7c0f64daf0784f452c7c136df3886ad6099340ef267fb1fdaf8974e",
                          "typeString": "literal_string \"remove:not gov\""
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4897:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4897:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "4897:66:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$43",
                          "typeString": "enum TokenVault.State"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 260,
                          "name": "auctionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "4981:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 261,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "4997:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                              "typeString": "type(enum TokenVault.State)"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "inactive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "4997:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "src": "4981:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174653a61756374696f6e206c6976652063616e6e6f7420757064617465207072696365",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5013:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddc27ae0d1dc8a569055caa0bff25855e095ad41bb1fb4bca6d246c7b5c18bfb",
                          "typeString": "literal_string \"update:auction live cannot update price\""
                        },
                        "value": "update:auction live cannot update price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddc27ae0d1dc8a569055caa0bff25855e095ad41bb1fb4bca6d246c7b5c18bfb",
                          "typeString": "literal_string \"update:auction live cannot update price\""
                        }
                      ],
                      "id": 259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4973:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4973:82:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "4973:82:1"
                },
                {
                  "assignments": [
                    268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 268,
                      "mutability": "mutable",
                      "name": "old",
                      "nameLocation": "5074:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 307,
                      "src": "5066:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 267,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5066:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 272,
                  "initialValue": {
                    "baseExpression": {
                      "id": 269,
                      "name": "userPrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "5080:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 271,
                    "indexExpression": {
                      "id": 270,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "5091:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5080:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5066:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "30",
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5115:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 275,
                          "name": "old",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "5120:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5115:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174653a6e6f7420616e20757064617465",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5125:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f27a344d218673a27e460ef422440e2f76a428e9c0778c50f6d0020a23e4f8a8",
                          "typeString": "literal_string \"update:not an update\""
                        },
                        "value": "update:not an update"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f27a344d218673a27e460ef422440e2f76a428e9c0778c50f6d0020a23e4f8a8",
                          "typeString": "literal_string \"update:not an update\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5107:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5107:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "5107:41:1"
                },
                {
                  "assignments": [
                    281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 281,
                      "mutability": "mutable",
                      "name": "weight",
                      "nameLocation": "5166:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 307,
                      "src": "5158:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 280,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5158:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 285,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 283,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "5185:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 282,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2909,
                      "src": "5175:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5175:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5158:33:1"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 286,
                      "name": "votingTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "5202:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 287,
                      "name": "weight",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "5218:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5202:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "5202:22:1"
                },
                {
                  "expression": {
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 290,
                      "name": "reserveTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "5234:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 291,
                        "name": "weight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "5250:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 292,
                        "name": "old",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "5259:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5250:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5234:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "5234:28:1"
                },
                {
                  "expression": {
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 296,
                        "name": "userPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "5281:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 298,
                      "indexExpression": {
                        "id": 297,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "5292:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5281:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5301:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5281:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "5281:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 303,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "5330:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5337:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 302,
                      "name": "PriceUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "5318:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5318:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 306,
                  "nodeType": "EmitStatement",
                  "src": "5313:26:1"
                }
              ]
            },
            "documentation": {
              "id": 242,
              "nodeType": "StructuredDocumentation",
              "src": "4778:57:1",
              "text": "@notice allow governance to remove bad reserve prices"
            },
            "functionSelector": "80436fe0",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeReserve",
            "nameLocation": "4849:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4871:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "4863:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4863:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4862:15:1"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4887:0:1"
            },
            "scope": 1193,
            "src": "4840:506:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "5635:98:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 315,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5653:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5653:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 317,
                          "name": "curator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "5667:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5653:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174653a6e6f742063757261746f72",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5676:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a0d429f4323cd35d85edae8d652b9f1fd1a0c5003aa4eefff52d71df3df6dfc",
                          "typeString": "literal_string \"update:not curator\""
                        },
                        "value": "update:not curator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a0d429f4323cd35d85edae8d652b9f1fd1a0c5003aa4eefff52d71df3df6dfc",
                          "typeString": "literal_string \"update:not curator\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5645:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5645:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "5645:52:1"
                },
                {
                  "expression": {
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 322,
                      "name": "curator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "5708:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 323,
                      "name": "_curator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "5718:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5708:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "5708:18:1"
                }
              ]
            },
            "documentation": {
              "id": 309,
              "nodeType": "StructuredDocumentation",
              "src": "5485:95:1",
              "text": "@notice allow curator to update the curator address\n @param _curator the new curator"
            },
            "functionSelector": "0c6a62dd",
            "id": 327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCurator",
            "nameLocation": "5594:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "_curator",
                  "nameLocation": "5616:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "5608:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5608:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5607:18:1"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5635:0:1"
            },
            "scope": 1193,
            "src": "5585:148:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 368,
              "nodeType": "Block",
              "src": "5895:300:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 334,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5913:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5913:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 336,
                          "name": "curator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "5927:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5913:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174653a6e6f742063757261746f72",
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5936:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a0d429f4323cd35d85edae8d652b9f1fd1a0c5003aa4eefff52d71df3df6dfc",
                          "typeString": "literal_string \"update:not curator\""
                        },
                        "value": "update:not curator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a0d429f4323cd35d85edae8d652b9f1fd1a0c5003aa4eefff52d71df3df6dfc",
                          "typeString": "literal_string \"update:not curator\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5905:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5905:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "5905:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 342,
                            "name": "_length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "5975:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 344,
                                    "name": "settings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49,
                                    "src": "5996:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 343,
                                  "name": "ISettings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3686,
                                  "src": "5986:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                                    "typeString": "type(contract ISettings)"
                                  }
                                },
                                "id": 345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5986:19:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISettings_$3686",
                                  "typeString": "contract ISettings"
                                }
                              },
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "minAuctionLength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3650,
                              "src": "5986:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                "typeString": "function () external returns (uint256)"
                              }
                            },
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5986:38:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5975:49:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 349,
                            "name": "_length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 330,
                            "src": "6028:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 351,
                                    "name": "settings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49,
                                    "src": "6049:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 350,
                                  "name": "ISettings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3686,
                                  "src": "6039:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                                    "typeString": "type(contract ISettings)"
                                  }
                                },
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6039:19:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISettings_$3686",
                                  "typeString": "contract ISettings"
                                }
                              },
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "maxAuctionLength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3645,
                              "src": "6039:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                "typeString": "function () external returns (uint256)"
                              }
                            },
                            "id": 354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6039:38:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6028:49:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5975:102:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174653a696e76616c69642061756374696f6e206c656e677468",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6079:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86b23ffd27732a77abae2fcd890d453e20c041720a7c8b2ab98cba7041032ca6",
                          "typeString": "literal_string \"update:invalid auction length\""
                        },
                        "value": "update:invalid auction length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86b23ffd27732a77abae2fcd890d453e20c041720a7c8b2ab98cba7041032ca6",
                          "typeString": "literal_string \"update:invalid auction length\""
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5967:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5967:144:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "5967:144:1"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 360,
                      "name": "auctionLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "6122:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 361,
                      "name": "_length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 330,
                      "src": "6138:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6122:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "6122:23:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 365,
                        "name": "_length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 330,
                        "src": "6180:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 364,
                      "name": "UpdateAuctionLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "6160:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6160:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "EmitStatement",
                  "src": "6155:33:1"
                }
              ]
            },
            "documentation": {
              "id": 328,
              "nodeType": "StructuredDocumentation",
              "src": "5739:96:1",
              "text": "@notice allow curator to update the auction length\n @param _length the new base price"
            },
            "functionSelector": "2bf33bd9",
            "id": 369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAuctionLength",
            "nameLocation": "5849:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "_length",
                  "nameLocation": "5877:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 369,
                  "src": "5869:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5869:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5868:17:1"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5895:0:1"
            },
            "scope": 1193,
            "src": "5840:355:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "6329:302:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 376,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6347:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6347:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 378,
                          "name": "curator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "6361:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6347:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174653a6e6f742063757261746f72",
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6370:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a0d429f4323cd35d85edae8d652b9f1fd1a0c5003aa4eefff52d71df3df6dfc",
                          "typeString": "literal_string \"update:not curator\""
                        },
                        "value": "update:not curator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a0d429f4323cd35d85edae8d652b9f1fd1a0c5003aa4eefff52d71df3df6dfc",
                          "typeString": "literal_string \"update:not curator\""
                        }
                      ],
                      "id": 375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6339:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6339:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "6339:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 384,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 372,
                          "src": "6409:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 385,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "6416:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6409:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174653a63616e2774207261697365",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6421:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28ae330a892ba115d99c52abff42f433602c115ac586e3ae22784739bcf78124",
                          "typeString": "literal_string \"update:can't raise\""
                        },
                        "value": "update:can't raise"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28ae330a892ba115d99c52abff42f433602c115ac586e3ae22784739bcf78124",
                          "typeString": "literal_string \"update:can't raise\""
                        }
                      ],
                      "id": 383,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6401:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6401:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "6401:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 391,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 372,
                          "src": "6460:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 393,
                                  "name": "settings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49,
                                  "src": "6478:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 392,
                                "name": "ISettings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3686,
                                "src": "6468:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                                  "typeString": "type(contract ISettings)"
                                }
                              },
                              "id": 394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6468:19:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISettings_$3686",
                                "typeString": "contract ISettings"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxCuratorFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3655,
                            "src": "6468:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6468:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6460:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174653a63616e6e6f7420696e6372656173652066656520746869732068696768",
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6505:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a557940d276e6e67316eb206ecd3f1bc975cdf0d332e075d5925cb3c7ed306ae",
                          "typeString": "literal_string \"update:cannot increase fee this high\""
                        },
                        "value": "update:cannot increase fee this high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a557940d276e6e67316eb206ecd3f1bc975cdf0d332e075d5925cb3c7ed306ae",
                          "typeString": "literal_string \"update:cannot increase fee this high\""
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6452:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6452:92:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "6452:92:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 401,
                      "name": "_claimFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "6555:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6555:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "6555:12:1"
                },
                {
                  "expression": {
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 404,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "6578:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 405,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "6584:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6578:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "6578:10:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 409,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "6620:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 408,
                      "name": "UpdateCuratorFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "6603:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6603:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "EmitStatement",
                  "src": "6598:26:1"
                }
              ]
            },
            "documentation": {
              "id": 370,
              "nodeType": "StructuredDocumentation",
              "src": "6201:81:1",
              "text": "@notice allow the curator to change their fee\n @param _fee the new fee"
            },
            "functionSelector": "9012c4a8",
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateFee",
            "nameLocation": "6296:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "6314:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "6306:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6306:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6305:14:1"
            },
            "returnParameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6329:0:1"
            },
            "scope": 1193,
            "src": "6287:344:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "6746:29:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 417,
                      "name": "_claimFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "6756:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6756:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "6756:12:1"
                }
              ]
            },
            "documentation": {
              "id": 414,
              "nodeType": "StructuredDocumentation",
              "src": "6637:74:1",
              "text": "@notice external function to claim fees for the curator and governance"
            },
            "functionSelector": "d294f093",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimFees",
            "nameLocation": "6725:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6734:2:1"
            },
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6746:0:1"
            },
            "scope": 1193,
            "src": "6716:59:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 537,
              "nodeType": "Block",
              "src": "6868:1197:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$43",
                          "typeString": "enum TokenVault.State"
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 426,
                          "name": "auctionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "6886:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 427,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "6902:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                              "typeString": "type(enum TokenVault.State)"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ended",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "6902:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "src": "6886:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636c61696d3a63616e6e6f7420636c61696d2061667465722061756374696f6e20656e6473",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6915:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4fde190dfc45777b7da60f53dd76e5235388b005a928780593ef4a53b3d0807",
                          "typeString": "literal_string \"claim:cannot claim after auction ends\""
                        },
                        "value": "claim:cannot claim after auction ends"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4fde190dfc45777b7da60f53dd76e5235388b005a928780593ef4a53b3d0807",
                          "typeString": "literal_string \"claim:cannot claim after auction ends\""
                        }
                      ],
                      "id": 425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6878:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6878:77:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "6878:77:1"
                },
                {
                  "assignments": [
                    434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 434,
                      "mutability": "mutable",
                      "name": "currentAnnualFee",
                      "nameLocation": "7039:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 537,
                      "src": "7031:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 433,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7031:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 441,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 435,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "7058:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 436,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2895,
                          "src": "7064:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7064:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7058:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7080:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "7058:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7031:53:1"
                },
                {
                  "assignments": [
                    443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 443,
                      "mutability": "mutable",
                      "name": "feePerSecond",
                      "nameLocation": "7147:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 537,
                      "src": "7139:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 442,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7139:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 444,
                      "name": "currentAnnualFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "7162:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3331353336303030",
                      "id": 445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7181:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_31536000_by_1",
                        "typeString": "int_const 31536000"
                      },
                      "value": "31536000"
                    },
                    "src": "7162:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7139:50:1"
                },
                {
                  "assignments": [
                    449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 449,
                      "mutability": "mutable",
                      "name": "sinceLastClaim",
                      "nameLocation": "7266:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 537,
                      "src": "7258:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 448,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7258:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 454,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 450,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7283:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7283:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 452,
                      "name": "lastClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "7301:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7283:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7258:54:1"
                },
                {
                  "assignments": [
                    456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 456,
                      "mutability": "mutable",
                      "name": "curatorMint",
                      "nameLocation": "7374:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 537,
                      "src": "7366:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 455,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7366:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 460,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 457,
                      "name": "sinceLastClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "7388:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 458,
                      "name": "feePerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "7405:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7388:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7366:51:1"
                },
                {
                  "assignments": [
                    462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 462,
                      "mutability": "mutable",
                      "name": "govAddress",
                      "nameLocation": "7483:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 537,
                      "src": "7475:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 461,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7475:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 468,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 464,
                            "name": "settings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "7506:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 463,
                          "name": "ISettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3686,
                          "src": "7496:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                            "typeString": "type(contract ISettings)"
                          }
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7496:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISettings_$3686",
                          "typeString": "contract ISettings"
                        }
                      },
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "feeReceiver",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3685,
                      "src": "7496:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_payable_$",
                        "typeString": "function () external returns (address payable)"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7496:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7475:54:1"
                },
                {
                  "assignments": [
                    470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 470,
                      "mutability": "mutable",
                      "name": "govFee",
                      "nameLocation": "7547:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 537,
                      "src": "7539:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 469,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7539:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 476,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 472,
                            "name": "settings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "7566:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 471,
                          "name": "ISettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3686,
                          "src": "7556:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                            "typeString": "type(contract ISettings)"
                          }
                        },
                        "id": 473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7556:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISettings_$3686",
                          "typeString": "contract ISettings"
                        }
                      },
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "governanceFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3660,
                      "src": "7556:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7556:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7539:52:1"
                },
                {
                  "expression": {
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 477,
                      "name": "currentAnnualFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "7601:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 478,
                          "name": "govFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "7620:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 479,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2895,
                            "src": "7629:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7629:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7620:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31303030",
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7645:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      "src": "7620:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7601:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "7601:48:1"
                },
                {
                  "expression": {
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 486,
                      "name": "feePerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "7660:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 487,
                        "name": "currentAnnualFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "7675:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "3331353336303030",
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7694:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31536000_by_1",
                          "typeString": "int_const 31536000"
                        },
                        "value": "31536000"
                      },
                      "src": "7675:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7660:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 491,
                  "nodeType": "ExpressionStatement",
                  "src": "7660:42:1"
                },
                {
                  "assignments": [
                    493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 493,
                      "mutability": "mutable",
                      "name": "govMint",
                      "nameLocation": "7720:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 537,
                      "src": "7712:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7712:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 497,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 494,
                      "name": "sinceLastClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 449,
                      "src": "7730:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 495,
                      "name": "feePerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "7747:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7730:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7712:47:1"
                },
                {
                  "expression": {
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 498,
                      "name": "lastClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "7770:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 499,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7784:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7784:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7770:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "7770:29:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 503,
                      "name": "curator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "7814:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7833:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7825:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7825:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7825:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7814:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 519,
                  "nodeType": "IfStatement",
                  "src": "7810:121:1",
                  "trueBody": {
                    "id": 518,
                    "nodeType": "Block",
                    "src": "7837:94:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 510,
                              "name": "curator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "7857:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 511,
                              "name": "curatorMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 456,
                              "src": "7866:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 509,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3216,
                            "src": "7851:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7851:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 513,
                        "nodeType": "ExpressionStatement",
                        "src": "7851:27:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 515,
                              "name": "curatorMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 456,
                              "src": "7908:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 514,
                            "name": "FeeClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "7897:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7897:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 517,
                        "nodeType": "EmitStatement",
                        "src": "7892:28:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 520,
                      "name": "govAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 462,
                      "src": "7944:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7966:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7958:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7958:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7958:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7944:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 536,
                  "nodeType": "IfStatement",
                  "src": "7940:119:1",
                  "trueBody": {
                    "id": 535,
                    "nodeType": "Block",
                    "src": "7970:89:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 527,
                              "name": "govAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 462,
                              "src": "7990:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 528,
                              "name": "govMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 493,
                              "src": "8002:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 526,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3216,
                            "src": "7984:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7984:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 530,
                        "nodeType": "ExpressionStatement",
                        "src": "7984:26:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 532,
                              "name": "govMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 493,
                              "src": "8040:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 531,
                            "name": "FeeClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "8029:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8029:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 534,
                        "nodeType": "EmitStatement",
                        "src": "8024:24:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 422,
              "nodeType": "StructuredDocumentation",
              "src": "6781:51:1",
              "text": "@dev interal fuction to calculate and mint fees"
            },
            "id": 538,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claimFees",
            "nameLocation": "6846:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6856:2:1"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6868:0:1"
            },
            "scope": 1193,
            "src": "6837:1228:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 758,
              "nodeType": "Block",
              "src": "8366:1949:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$43",
                          "typeString": "enum TokenVault.State"
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 545,
                          "name": "auctionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "8384:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 546,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "8400:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                              "typeString": "type(enum TokenVault.State)"
                            }
                          },
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "inactive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "8400:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "src": "8384:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174653a61756374696f6e206c6976652063616e6e6f7420757064617465207072696365",
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8416:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddc27ae0d1dc8a569055caa0bff25855e095ad41bb1fb4bca6d246c7b5c18bfb",
                          "typeString": "literal_string \"update:auction live cannot update price\""
                        },
                        "value": "update:auction live cannot update price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddc27ae0d1dc8a569055caa0bff25855e095ad41bb1fb4bca6d246c7b5c18bfb",
                          "typeString": "literal_string \"update:auction live cannot update price\""
                        }
                      ],
                      "id": 544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8376:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8376:82:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "8376:82:1"
                },
                {
                  "assignments": [
                    553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 553,
                      "mutability": "mutable",
                      "name": "old",
                      "nameLocation": "8476:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 758,
                      "src": "8468:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 552,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8468:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 558,
                  "initialValue": {
                    "baseExpression": {
                      "id": 554,
                      "name": "userPrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "8482:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 557,
                    "indexExpression": {
                      "expression": {
                        "id": 555,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8493:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8493:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8482:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8468:36:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 560,
                          "name": "_new",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "8522:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 561,
                          "name": "old",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 553,
                          "src": "8530:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8522:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7570646174653a6e6f7420616e20757064617465",
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8535:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f27a344d218673a27e460ef422440e2f76a428e9c0778c50f6d0020a23e4f8a8",
                          "typeString": "literal_string \"update:not an update\""
                        },
                        "value": "update:not an update"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f27a344d218673a27e460ef422440e2f76a428e9c0778c50f6d0020a23e4f8a8",
                          "typeString": "literal_string \"update:not an update\""
                        }
                      ],
                      "id": 559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8514:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8514:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "8514:44:1"
                },
                {
                  "assignments": [
                    567
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 567,
                      "mutability": "mutable",
                      "name": "weight",
                      "nameLocation": "8576:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 758,
                      "src": "8568:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 566,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8568:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 572,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 569,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8595:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8595:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 568,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2909,
                      "src": "8585:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8585:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8568:38:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 573,
                      "name": "votingTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "8621:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8637:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8621:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 587,
                          "name": "weight",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 567,
                          "src": "8786:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 588,
                          "name": "votingTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "8796:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8786:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 590,
                          "name": "old",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 553,
                          "src": "8812:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8819:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8812:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8786:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 601,
                          "name": "old",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 553,
                          "src": "8936:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8943:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8936:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 659,
                            "name": "_new",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "9523:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9531:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9523:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 740,
                          "nodeType": "Block",
                          "src": "9678:546:1",
                          "statements": [
                            {
                              "assignments": [
                                674
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 674,
                                  "mutability": "mutable",
                                  "name": "averageReserve",
                                  "nameLocation": "9700:14:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 740,
                                  "src": "9692:22:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 673,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9692:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 687,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 680,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 675,
                                        "name": "reserveTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 32,
                                        "src": "9718:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 678,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 676,
                                              "name": "old",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 553,
                                              "src": "9734:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 677,
                                              "name": "weight",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 567,
                                              "src": "9740:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "9734:12:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 679,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9733:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9718:29:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 681,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9717:31:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 684,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 682,
                                        "name": "votingTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 64,
                                        "src": "9752:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 683,
                                        "name": "weight",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 567,
                                        "src": "9767:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9752:21:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 685,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9751:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9717:57:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9692:82:1"
                            },
                            {
                              "assignments": [
                                689
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 689,
                                  "mutability": "mutable",
                                  "name": "reservePriceMin",
                                  "nameLocation": "9797:15:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 740,
                                  "src": "9789:23:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 688,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9789:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 699,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 696,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 690,
                                    "name": "averageReserve",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 674,
                                    "src": "9815:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 692,
                                            "name": "settings",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49,
                                            "src": "9842:8:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 691,
                                          "name": "ISettings",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3686,
                                          "src": "9832:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                                            "typeString": "type(contract ISettings)"
                                          }
                                        },
                                        "id": 693,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "9832:19:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISettings_$3686",
                                          "typeString": "contract ISettings"
                                        }
                                      },
                                      "id": 694,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "minReserveFactor",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3680,
                                      "src": "9832:36:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                        "typeString": "function () external returns (uint256)"
                                      }
                                    },
                                    "id": 695,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9832:38:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9815:55:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 697,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9873:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "9815:62:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9789:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 701,
                                      "name": "_new",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 541,
                                      "src": "9899:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 702,
                                      "name": "reservePriceMin",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 689,
                                      "src": "9907:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9899:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "7570646174653a7265736572766520707269636520746f6f206c6f77",
                                    "id": 704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9924:30:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_0fcbf81ce20cefb22415d1f425f8398bfc6404e0569cbd8bee6a889bc77aa433",
                                      "typeString": "literal_string \"update:reserve price too low\""
                                    },
                                    "value": "update:reserve price too low"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_0fcbf81ce20cefb22415d1f425f8398bfc6404e0569cbd8bee6a889bc77aa433",
                                      "typeString": "literal_string \"update:reserve price too low\""
                                    }
                                  ],
                                  "id": 700,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "9891:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9891:64:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 706,
                              "nodeType": "ExpressionStatement",
                              "src": "9891:64:1"
                            },
                            {
                              "assignments": [
                                708
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 708,
                                  "mutability": "mutable",
                                  "name": "reservePriceMax",
                                  "nameLocation": "9977:15:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 740,
                                  "src": "9969:23:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 707,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9969:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 718,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 709,
                                    "name": "averageReserve",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 674,
                                    "src": "9995:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 711,
                                            "name": "settings",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49,
                                            "src": "10022:8:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 710,
                                          "name": "ISettings",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3686,
                                          "src": "10012:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                                            "typeString": "type(contract ISettings)"
                                          }
                                        },
                                        "id": 712,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10012:19:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISettings_$3686",
                                          "typeString": "contract ISettings"
                                        }
                                      },
                                      "id": 713,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "maxReserveFactor",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3675,
                                      "src": "10012:36:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                        "typeString": "function () external returns (uint256)"
                                      }
                                    },
                                    "id": 714,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10012:38:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9995:55:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10053:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "9995:62:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9969:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 720,
                                      "name": "_new",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 541,
                                      "src": "10079:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "id": 721,
                                      "name": "reservePriceMax",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 708,
                                      "src": "10087:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10079:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "7570646174653a7265736572766520707269636520746f6f2068696768",
                                    "id": 723,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10104:31:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_dc45b38cee730416fd9eb1bce40ea1e2a192dd5ea75bbb7f95b913089aeefc90",
                                      "typeString": "literal_string \"update:reserve price too high\""
                                    },
                                    "value": "update:reserve price too high"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_dc45b38cee730416fd9eb1bce40ea1e2a192dd5ea75bbb7f95b913089aeefc90",
                                      "typeString": "literal_string \"update:reserve price too high\""
                                    }
                                  ],
                                  "id": 719,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "10071:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10071:65:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 725,
                              "nodeType": "ExpressionStatement",
                              "src": "10071:65:1"
                            },
                            {
                              "expression": {
                                "id": 738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 726,
                                  "name": "reserveTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "10151:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 737,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 732,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 727,
                                      "name": "reserveTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 32,
                                      "src": "10166:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 730,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 728,
                                            "name": "weight",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 567,
                                            "src": "10182:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 729,
                                            "name": "_new",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 541,
                                            "src": "10191:4:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "10182:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 731,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "10181:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10166:30:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 735,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 733,
                                          "name": "weight",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 567,
                                          "src": "10200:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 734,
                                          "name": "old",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 553,
                                          "src": "10209:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10200:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 736,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "10199:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10166:47:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10151:62:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 739,
                              "nodeType": "ExpressionStatement",
                              "src": "10151:62:1"
                            }
                          ]
                        },
                        "id": 741,
                        "nodeType": "IfStatement",
                        "src": "9519:705:1",
                        "trueBody": {
                          "id": 672,
                          "nodeType": "Block",
                          "src": "9534:89:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 662,
                                  "name": "votingTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "9548:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 663,
                                  "name": "weight",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 567,
                                  "src": "9564:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9548:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 665,
                              "nodeType": "ExpressionStatement",
                              "src": "9548:22:1"
                            },
                            {
                              "expression": {
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 666,
                                  "name": "reserveTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "9584:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 667,
                                    "name": "weight",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 567,
                                    "src": "9600:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 668,
                                    "name": "old",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 553,
                                    "src": "9609:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9600:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9584:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 671,
                              "nodeType": "ExpressionStatement",
                              "src": "9584:28:1"
                            }
                          ]
                        }
                      },
                      "id": 742,
                      "nodeType": "IfStatement",
                      "src": "8932:1292:1",
                      "trueBody": {
                        "id": 658,
                        "nodeType": "Block",
                        "src": "8946:519:1",
                        "statements": [
                          {
                            "assignments": [
                              605
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 605,
                                "mutability": "mutable",
                                "name": "averageReserve",
                                "nameLocation": "8968:14:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 658,
                                "src": "8960:22:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 604,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8960:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 609,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 606,
                                "name": "reserveTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "8985:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 607,
                                "name": "votingTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "9000:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8985:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8960:52:1"
                          },
                          {
                            "assignments": [
                              611
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 611,
                                "mutability": "mutable",
                                "name": "reservePriceMin",
                                "nameLocation": "9035:15:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 658,
                                "src": "9027:23:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 610,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9027:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 621,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 612,
                                  "name": "averageReserve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 605,
                                  "src": "9053:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 614,
                                          "name": "settings",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 49,
                                          "src": "9080:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 613,
                                        "name": "ISettings",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3686,
                                        "src": "9070:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                                          "typeString": "type(contract ISettings)"
                                        }
                                      },
                                      "id": 615,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9070:19:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISettings_$3686",
                                        "typeString": "contract ISettings"
                                      }
                                    },
                                    "id": 616,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "minReserveFactor",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3680,
                                    "src": "9070:36:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                      "typeString": "function () external returns (uint256)"
                                    }
                                  },
                                  "id": 617,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9070:38:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9053:55:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9111:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "src": "9053:62:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9027:88:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 625,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 623,
                                    "name": "_new",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 541,
                                    "src": "9137:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "id": 624,
                                    "name": "reservePriceMin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 611,
                                    "src": "9145:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9137:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "7570646174653a7265736572766520707269636520746f6f206c6f77",
                                  "id": 626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9162:30:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_0fcbf81ce20cefb22415d1f425f8398bfc6404e0569cbd8bee6a889bc77aa433",
                                    "typeString": "literal_string \"update:reserve price too low\""
                                  },
                                  "value": "update:reserve price too low"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_0fcbf81ce20cefb22415d1f425f8398bfc6404e0569cbd8bee6a889bc77aa433",
                                    "typeString": "literal_string \"update:reserve price too low\""
                                  }
                                ],
                                "id": 622,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "9129:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9129:64:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 628,
                            "nodeType": "ExpressionStatement",
                            "src": "9129:64:1"
                          },
                          {
                            "assignments": [
                              630
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 630,
                                "mutability": "mutable",
                                "name": "reservePriceMax",
                                "nameLocation": "9215:15:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 658,
                                "src": "9207:23:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 629,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9207:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 640,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 631,
                                  "name": "averageReserve",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 605,
                                  "src": "9233:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 633,
                                          "name": "settings",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 49,
                                          "src": "9260:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 632,
                                        "name": "ISettings",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3686,
                                        "src": "9250:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                                          "typeString": "type(contract ISettings)"
                                        }
                                      },
                                      "id": 634,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9250:19:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ISettings_$3686",
                                        "typeString": "contract ISettings"
                                      }
                                    },
                                    "id": 635,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "maxReserveFactor",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3675,
                                    "src": "9250:36:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                      "typeString": "function () external returns (uint256)"
                                    }
                                  },
                                  "id": 636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9250:38:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9233:55:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "31303030",
                                "id": 638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9291:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "src": "9233:62:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9207:88:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 642,
                                    "name": "_new",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 541,
                                    "src": "9317:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 643,
                                    "name": "reservePriceMax",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 630,
                                    "src": "9325:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9317:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "7570646174653a7265736572766520707269636520746f6f2068696768",
                                  "id": 645,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9342:31:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_dc45b38cee730416fd9eb1bce40ea1e2a192dd5ea75bbb7f95b913089aeefc90",
                                    "typeString": "literal_string \"update:reserve price too high\""
                                  },
                                  "value": "update:reserve price too high"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_dc45b38cee730416fd9eb1bce40ea1e2a192dd5ea75bbb7f95b913089aeefc90",
                                    "typeString": "literal_string \"update:reserve price too high\""
                                  }
                                ],
                                "id": 641,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "9309:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9309:65:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 647,
                            "nodeType": "ExpressionStatement",
                            "src": "9309:65:1"
                          },
                          {
                            "expression": {
                              "id": 650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 648,
                                "name": "votingTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64,
                                "src": "9389:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 649,
                                "name": "weight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 567,
                                "src": "9405:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9389:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 651,
                            "nodeType": "ExpressionStatement",
                            "src": "9389:22:1"
                          },
                          {
                            "expression": {
                              "id": 656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 652,
                                "name": "reserveTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "9425:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 653,
                                  "name": "weight",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 567,
                                  "src": "9441:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 654,
                                  "name": "_new",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 541,
                                  "src": "9450:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9441:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9425:29:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 657,
                            "nodeType": "ExpressionStatement",
                            "src": "9425:29:1"
                          }
                        ]
                      }
                    },
                    "id": 743,
                    "nodeType": "IfStatement",
                    "src": "8782:1442:1",
                    "trueBody": {
                      "id": 600,
                      "nodeType": "Block",
                      "src": "8822:53:1",
                      "statements": [
                        {
                          "expression": {
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 594,
                              "name": "reserveTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "8836:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 595,
                                "name": "weight",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 567,
                                "src": "8851:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 596,
                                "name": "_new",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 541,
                                "src": "8860:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8851:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8836:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 599,
                          "nodeType": "ExpressionStatement",
                          "src": "8836:28:1"
                        }
                      ]
                    }
                  },
                  "id": 744,
                  "nodeType": "IfStatement",
                  "src": "8617:1607:1",
                  "trueBody": {
                    "id": 586,
                    "nodeType": "Block",
                    "src": "8640:88:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 576,
                            "name": "votingTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "8654:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 577,
                            "name": "weight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "8669:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8654:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 579,
                        "nodeType": "ExpressionStatement",
                        "src": "8654:21:1"
                      },
                      {
                        "expression": {
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 580,
                            "name": "reserveTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "8689:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 581,
                              "name": "weight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 567,
                              "src": "8704:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 582,
                              "name": "_new",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "8713:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8704:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8689:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 585,
                        "nodeType": "ExpressionStatement",
                        "src": "8689:28:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 745,
                        "name": "userPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "10234:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 748,
                      "indexExpression": {
                        "expression": {
                          "id": 746,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10245:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10245:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10234:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 749,
                      "name": "_new",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "10259:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10234:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "10234:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 753,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10291:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10291:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 755,
                        "name": "_new",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "10303:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 752,
                      "name": "PriceUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "10279:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10279:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "EmitStatement",
                  "src": "10274:34:1"
                }
              ]
            },
            "documentation": {
              "id": 539,
              "nodeType": "StructuredDocumentation",
              "src": "8195:118:1",
              "text": "@notice a function for an end user to update their desired sale price\n @param _new the desired price in ETH"
            },
            "functionSelector": "6a775714",
            "id": 759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateUserPrice",
            "nameLocation": "8327:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "mutability": "mutable",
                  "name": "_new",
                  "nameLocation": "8351:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 759,
                  "src": "8343:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8343:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8342:14:1"
            },
            "returnParameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8366:0:1"
            },
            "scope": 1193,
            "src": "8318:1997:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3344
            ],
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "10653:954:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$43",
                      "typeString": "enum TokenVault.State"
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 770,
                      "name": "auctionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "10667:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$43",
                        "typeString": "enum TokenVault.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 771,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "10683:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                          "typeString": "type(enum TokenVault.State)"
                        }
                      },
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "10683:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$43",
                        "typeString": "enum TokenVault.State"
                      }
                    },
                    "src": "10667:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 837,
                  "nodeType": "IfStatement",
                  "src": "10663:938:1",
                  "trueBody": {
                    "id": 836,
                    "nodeType": "Block",
                    "src": "10699:902:1",
                    "statements": [
                      {
                        "assignments": [
                          775
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 775,
                            "mutability": "mutable",
                            "name": "fromPrice",
                            "nameLocation": "10721:9:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 836,
                            "src": "10713:17:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 774,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10713:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 779,
                        "initialValue": {
                          "baseExpression": {
                            "id": 776,
                            "name": "userPrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "10733:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 778,
                          "indexExpression": {
                            "id": 777,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "10744:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10733:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10713:37:1"
                      },
                      {
                        "assignments": [
                          781
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 781,
                            "mutability": "mutable",
                            "name": "toPrice",
                            "nameLocation": "10772:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 836,
                            "src": "10764:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 780,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10764:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 785,
                        "initialValue": {
                          "baseExpression": {
                            "id": 782,
                            "name": "userPrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "10782:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 784,
                          "indexExpression": {
                            "id": 783,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 764,
                            "src": "10793:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10782:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10764:33:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 786,
                            "name": "toPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 781,
                            "src": "10887:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 787,
                            "name": "fromPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "10898:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10887:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 835,
                        "nodeType": "IfStatement",
                        "src": "10883:708:1",
                        "trueBody": {
                          "id": 834,
                          "nodeType": "Block",
                          "src": "10909:682:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 789,
                                  "name": "toPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 781,
                                  "src": "10976:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10987:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "10976:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 805,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 803,
                                    "name": "fromPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 775,
                                    "src": "11263:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11276:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "11263:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 831,
                                  "nodeType": "Block",
                                  "src": "11463:114:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 829,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 817,
                                          "name": "reserveTotal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 32,
                                          "src": "11485:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 828,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 823,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 818,
                                              "name": "reserveTotal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 32,
                                              "src": "11500:12:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 821,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 819,
                                                    "name": "_amount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 766,
                                                    "src": "11516:7:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "id": 820,
                                                    "name": "toPrice",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 781,
                                                    "src": "11526:7:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "src": "11516:17:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 822,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "11515:19:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11500:34:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 826,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 824,
                                                  "name": "_amount",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 766,
                                                  "src": "11538:7:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                  "id": 825,
                                                  "name": "fromPrice",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 775,
                                                  "src": "11548:9:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "11538:19:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 827,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "11537:21:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11500:58:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11485:73:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 830,
                                      "nodeType": "ExpressionStatement",
                                      "src": "11485:73:1"
                                    }
                                  ]
                                },
                                "id": 832,
                                "nodeType": "IfStatement",
                                "src": "11259:318:1",
                                "trueBody": {
                                  "id": 816,
                                  "nodeType": "Block",
                                  "src": "11279:119:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 808,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 806,
                                          "name": "votingTokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 64,
                                          "src": "11301:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                          "id": 807,
                                          "name": "_amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 766,
                                          "src": "11317:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11301:23:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 809,
                                      "nodeType": "ExpressionStatement",
                                      "src": "11301:23:1"
                                    },
                                    {
                                      "expression": {
                                        "id": 814,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 810,
                                          "name": "reserveTotal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 32,
                                          "src": "11346:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 813,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 811,
                                            "name": "_amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 766,
                                            "src": "11362:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 812,
                                            "name": "toPrice",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 781,
                                            "src": "11372:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11362:17:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11346:33:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 815,
                                      "nodeType": "ExpressionStatement",
                                      "src": "11346:33:1"
                                    }
                                  ]
                                }
                              },
                              "id": 833,
                              "nodeType": "IfStatement",
                              "src": "10972:605:1",
                              "trueBody": {
                                "id": 802,
                                "nodeType": "Block",
                                "src": "10990:202:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 792,
                                        "name": "votingTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 64,
                                        "src": "11093:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 793,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 766,
                                        "src": "11109:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11093:23:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 795,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11093:23:1"
                                  },
                                  {
                                    "expression": {
                                      "id": 800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 796,
                                        "name": "reserveTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 32,
                                        "src": "11138:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 799,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 797,
                                          "name": "_amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 766,
                                          "src": "11154:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 798,
                                          "name": "fromPrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 775,
                                          "src": "11164:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11154:19:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11138:35:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 801,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11138:35:1"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 760,
              "nodeType": "StructuredDocumentation",
              "src": "10321:226:1",
              "text": "@notice an internal function used to update sender and receivers price on token transfer\n @param _from the ERC20 token sender\n @param _to the ERC20 token receiver\n @param _amount the ERC20 token amount"
            },
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "10561:20:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 768,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10644:8:1"
            },
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 762,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "10590:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "10582:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10582:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10605:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "10597:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10597:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10618:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "10610:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10610:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10581:45:1"
            },
            "returnParameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10653:0:1"
            },
            "scope": 1193,
            "src": "10552:1055:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 908,
              "nodeType": "Block",
              "src": "11714:487:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$43",
                          "typeString": "enum TokenVault.State"
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 844,
                          "name": "auctionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "11732:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 845,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "11748:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                              "typeString": "type(enum TokenVault.State)"
                            }
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "inactive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "11748:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "src": "11732:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73746172743a6e6f2061756374696f6e20737461727473",
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11764:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0df7b53f1759bd5693232bb49a1e3f60c550a51d6ea889e54704d02b1baf7f90",
                          "typeString": "literal_string \"start:no auction starts\""
                        },
                        "value": "start:no auction starts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0df7b53f1759bd5693232bb49a1e3f60c550a51d6ea889e54704d02b1baf7f90",
                          "typeString": "literal_string \"start:no auction starts\""
                        }
                      ],
                      "id": 843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11724:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11724:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "11724:66:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 852,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11808:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "11808:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 854,
                            "name": "reservePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "11821:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11821:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11808:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73746172743a746f6f206c6f7720626964",
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11837:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4385d7d5742152dc6f38dc2f908bdac38fc8affd25086967eb623972f9461368",
                          "typeString": "literal_string \"start:too low bid\""
                        },
                        "value": "start:too low bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4385d7d5742152dc6f38dc2f908bdac38fc8affd25086967eb623972f9461368",
                          "typeString": "literal_string \"start:too low bid\""
                        }
                      ],
                      "id": 851,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11800:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11800:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "11800:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 861,
                            "name": "votingTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "11875:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11890:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "11875:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 865,
                                    "name": "settings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49,
                                    "src": "11908:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 864,
                                  "name": "ISettings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3686,
                                  "src": "11898:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                                    "typeString": "type(contract ISettings)"
                                  }
                                },
                                "id": 866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11898:19:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISettings_$3686",
                                  "typeString": "contract ISettings"
                                }
                              },
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "minVotePercentage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3670,
                              "src": "11898:37:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                "typeString": "function () external returns (uint256)"
                              }
                            },
                            "id": 868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11898:39:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 869,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2895,
                              "src": "11940:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11940:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11898:55:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11875:78:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73746172743a6e6f7420656e6f75676820766f74657273",
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11955:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f763e58dc2e1468e0099d14e2035132a4d94e4d857e13b45920a4269e16f1fa",
                          "typeString": "literal_string \"start:not enough voters\""
                        },
                        "value": "start:not enough voters"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f763e58dc2e1468e0099d14e2035132a4d94e4d857e13b45920a4269e16f1fa",
                          "typeString": "literal_string \"start:not enough voters\""
                        }
                      ],
                      "id": 860,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11867:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11867:114:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "11867:114:1"
                },
                {
                  "expression": {
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 876,
                      "name": "auctionEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "12000:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 877,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12013:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12013:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 879,
                        "name": "auctionLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "12031:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12013:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12000:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "12000:44:1"
                },
                {
                  "expression": {
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 883,
                      "name": "auctionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "12054:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$43",
                        "typeString": "enum TokenVault.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 884,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "12069:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                          "typeString": "type(enum TokenVault.State)"
                        }
                      },
                      "id": 885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "live",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "12069:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$43",
                        "typeString": "enum TokenVault.State"
                      }
                    },
                    "src": "12054:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$43",
                      "typeString": "enum TokenVault.State"
                    }
                  },
                  "id": 887,
                  "nodeType": "ExpressionStatement",
                  "src": "12054:25:1"
                },
                {
                  "expression": {
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 888,
                      "name": "livePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "12090:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 889,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "12102:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "12102:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12090:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "12090:21:1"
                },
                {
                  "expression": {
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 893,
                      "name": "winning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "12121:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 896,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12139:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12139:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12131:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 894,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12131:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12131:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12121:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "12121:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 902,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12172:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12172:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 904,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12184:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "12184:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 901,
                      "name": "Start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "12166:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12166:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 907,
                  "nodeType": "EmitStatement",
                  "src": "12161:33:1"
                }
              ]
            },
            "documentation": {
              "id": 840,
              "nodeType": "StructuredDocumentation",
              "src": "11613:62:1",
              "text": "@notice kick off an auction. Must send reservePrice in ETH"
            },
            "functionSelector": "be9a6555",
            "id": 909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "start",
            "nameLocation": "11689:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11694:2:1"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11714:0:1"
            },
            "scope": 1193,
            "src": "11680:521:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 988,
              "nodeType": "Block",
              "src": "12345:632:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$43",
                          "typeString": "enum TokenVault.State"
                        },
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 914,
                          "name": "auctionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "12363:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 915,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "12379:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                              "typeString": "type(enum TokenVault.State)"
                            }
                          },
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "live",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "12379:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "src": "12363:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6269643a61756374696f6e206973206e6f74206c697665",
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12391:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25d78d1d4349236d1b8374d9b8f4559e1dbb7cbf87e94c30b3cdaff2322e48f6",
                          "typeString": "literal_string \"bid:auction is not live\""
                        },
                        "value": "bid:auction is not live"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25d78d1d4349236d1b8374d9b8f4559e1dbb7cbf87e94c30b3cdaff2322e48f6",
                          "typeString": "literal_string \"bid:auction is not live\""
                        }
                      ],
                      "id": 913,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12355:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12355:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "12355:62:1"
                },
                {
                  "assignments": [
                    922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 922,
                      "mutability": "mutable",
                      "name": "increase",
                      "nameLocation": "12435:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 988,
                      "src": "12427:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 921,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12427:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 930,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 924,
                              "name": "settings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "12456:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 923,
                            "name": "ISettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3686,
                            "src": "12446:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISettings_$3686_$",
                              "typeString": "type(contract ISettings)"
                            }
                          },
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12446:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISettings_$3686",
                            "typeString": "contract ISettings"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minBidIncrease",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3665,
                        "src": "12446:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12446:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12485:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "12446:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12427:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 932,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12507:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "12507:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12519:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "12507:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 936,
                            "name": "livePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "12527:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 937,
                            "name": "increase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 922,
                            "src": "12539:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12527:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12507:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6269643a746f6f206c6f7720626964",
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12549:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6df09328a4ab2069c61ab728b04c9f15285828c268508f84d98800f43be2d1f",
                          "typeString": "literal_string \"bid:too low bid\""
                        },
                        "value": "bid:too low bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6df09328a4ab2069c61ab728b04c9f15285828c268508f84d98800f43be2d1f",
                          "typeString": "literal_string \"bid:too low bid\""
                        }
                      ],
                      "id": 931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12499:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12499:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 942,
                  "nodeType": "ExpressionStatement",
                  "src": "12499:68:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 944,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12585:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12585:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 946,
                          "name": "auctionEnd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "12603:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12585:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6269643a61756374696f6e20656e646564",
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12615:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98269c2fa2505ce5fc7d51998225e1a94908e23d77b07efe759e7e162fea5d37",
                          "typeString": "literal_string \"bid:auction ended\""
                        },
                        "value": "bid:auction ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98269c2fa2505ce5fc7d51998225e1a94908e23d77b07efe759e7e162fea5d37",
                          "typeString": "literal_string \"bid:auction ended\""
                        }
                      ],
                      "id": 943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12577:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12577:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 950,
                  "nodeType": "ExpressionStatement",
                  "src": "12577:58:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 951,
                        "name": "auctionEnd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "12720:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 952,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12733:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12733:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12720:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3135",
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12752:10:1",
                      "subdenomination": "minutes",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_900_by_1",
                        "typeString": "int_const 900"
                      },
                      "value": "15"
                    },
                    "src": "12720:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 962,
                  "nodeType": "IfStatement",
                  "src": "12716:97:1",
                  "trueBody": {
                    "id": 961,
                    "nodeType": "Block",
                    "src": "12764:49:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 957,
                            "name": "auctionEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "12778:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "3135",
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12792:10:1",
                            "subdenomination": "minutes",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_900_by_1",
                              "typeString": "int_const 900"
                            },
                            "value": "15"
                          },
                          "src": "12778:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 960,
                        "nodeType": "ExpressionStatement",
                        "src": "12778:24:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 964,
                        "name": "winning",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "12838:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 965,
                        "name": "livePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "12847:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 963,
                      "name": "_sendETHOrWETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "12823:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12823:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "12823:34:1"
                },
                {
                  "expression": {
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 968,
                      "name": "livePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "12868:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 969,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "12880:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "12880:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12868:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 972,
                  "nodeType": "ExpressionStatement",
                  "src": "12868:21:1"
                },
                {
                  "expression": {
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 973,
                      "name": "winning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "12899:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 976,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12917:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12917:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12909:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12909:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12909:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12899:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "12899:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 982,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12948:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12948:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 984,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12960:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "12960:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 981,
                      "name": "Bid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "12944:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12944:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 987,
                  "nodeType": "EmitStatement",
                  "src": "12939:31:1"
                }
              ]
            },
            "documentation": {
              "id": 910,
              "nodeType": "StructuredDocumentation",
              "src": "12207:101:1",
              "text": "@notice an external function to bid on purchasing the vaults NFT. The msg.value is the bid amount"
            },
            "functionSelector": "1998aeef",
            "id": 989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bid",
            "nameLocation": "12322:3:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12325:2:1"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12345:0:1"
            },
            "scope": 1193,
            "src": "12313:664:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1034,
              "nodeType": "Block",
              "src": "13090:354:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$43",
                          "typeString": "enum TokenVault.State"
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 994,
                          "name": "auctionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "13108:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 995,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "13124:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                              "typeString": "type(enum TokenVault.State)"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "live",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "13124:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "src": "13108:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656e643a7661756c742068617320616c726561647920636c6f736564",
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13136:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d19ec394369ef20c00e5db7e0de53701726db7a501b6a155e403a479cbc1e4ea",
                          "typeString": "literal_string \"end:vault has already closed\""
                        },
                        "value": "end:vault has already closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d19ec394369ef20c00e5db7e0de53701726db7a501b6a155e403a479cbc1e4ea",
                          "typeString": "literal_string \"end:vault has already closed\""
                        }
                      ],
                      "id": 993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13100:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13100:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "13100:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1002,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13185:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13185:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1004,
                          "name": "auctionEnd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "13204:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13185:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656e643a61756374696f6e206c697665",
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13216:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559f86e61c51a3f26ea6ec505df4fe89f603af13d05ab84a3376d6a68a13634d",
                          "typeString": "literal_string \"end:auction live\""
                        },
                        "value": "end:auction live"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559f86e61c51a3f26ea6ec505df4fe89f603af13d05ab84a3376d6a68a13634d",
                          "typeString": "literal_string \"end:auction live\""
                        }
                      ],
                      "id": 1001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13177:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13177:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "13177:58:1"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1009,
                      "name": "_claimFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "13246:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13246:12:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "13246:12:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1018,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13342:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenVault_$1193",
                              "typeString": "contract TokenVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenVault_$1193",
                              "typeString": "contract TokenVault"
                            }
                          ],
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13334:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1016,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13334:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13334:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1020,
                        "name": "winning",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "13349:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1021,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "13358:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1013,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "13314:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1012,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3859,
                          "src": "13306:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$3859_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 1014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13306:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$3859",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 1015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3812,
                      "src": "13306:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13306:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "13306:55:1"
                },
                {
                  "expression": {
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1024,
                      "name": "auctionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "13372:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$43",
                        "typeString": "enum TokenVault.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1025,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "13387:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                          "typeString": "type(enum TokenVault.State)"
                        }
                      },
                      "id": 1026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ended",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "13387:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$43",
                        "typeString": "enum TokenVault.State"
                      }
                    },
                    "src": "13372:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$43",
                      "typeString": "enum TokenVault.State"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "13372:26:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1030,
                        "name": "winning",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "13418:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1031,
                        "name": "livePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "13427:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1029,
                      "name": "Won",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "13414:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13414:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1033,
                  "nodeType": "EmitStatement",
                  "src": "13409:28:1"
                }
              ]
            },
            "documentation": {
              "id": 990,
              "nodeType": "StructuredDocumentation",
              "src": "12983:78:1",
              "text": "@notice an external function to end an auction after the timer has run out"
            },
            "functionSelector": "efbe1c1c",
            "id": 1035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "end",
            "nameLocation": "13075:3:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13078:2:1"
            },
            "returnParameters": {
              "id": 992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13090:0:1"
            },
            "scope": 1193,
            "src": "13066:378:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1077,
              "nodeType": "Block",
              "src": "13567:319:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$43",
                          "typeString": "enum TokenVault.State"
                        },
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1040,
                          "name": "auctionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "13585:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1041,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "13601:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                              "typeString": "type(enum TokenVault.State)"
                            }
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "inactive",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "13601:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "src": "13585:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "72656465656d3a6e6f2072656465656d696e67",
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13617:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2eb182857ed3c58b61bcd568cac5a735f2142289141a65cb104c7946d497934f",
                          "typeString": "literal_string \"redeem:no redeeming\""
                        },
                        "value": "redeem:no redeeming"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2eb182857ed3c58b61bcd568cac5a735f2142289141a65cb104c7946d497934f",
                          "typeString": "literal_string \"redeem:no redeeming\""
                        }
                      ],
                      "id": 1039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13577:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13577:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "13577:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1048,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13655:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13655:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1050,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2895,
                          "src": "13667:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13667:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1047,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3288,
                      "src": "13649:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13649:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1053,
                  "nodeType": "ExpressionStatement",
                  "src": "13649:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1060,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13775:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenVault_$1193",
                              "typeString": "contract TokenVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenVault_$1193",
                              "typeString": "contract TokenVault"
                            }
                          ],
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13767:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1058,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13767:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13767:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1062,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13782:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13782:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1064,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "13794:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1055,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "13747:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1054,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3859,
                          "src": "13739:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$3859_$",
                            "typeString": "type(contract IERC721)"
                          }
                        },
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13739:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$3859",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3812,
                      "src": "13739:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13739:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "13739:58:1"
                },
                {
                  "expression": {
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1067,
                      "name": "auctionState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "13816:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$43",
                        "typeString": "enum TokenVault.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1068,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "13831:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                          "typeString": "type(enum TokenVault.State)"
                        }
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "redeemed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "13831:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$43",
                        "typeString": "enum TokenVault.State"
                      }
                    },
                    "src": "13816:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$43",
                      "typeString": "enum TokenVault.State"
                    }
                  },
                  "id": 1071,
                  "nodeType": "ExpressionStatement",
                  "src": "13816:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1073,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13868:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13868:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1072,
                      "name": "Redeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "13861:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13861:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1076,
                  "nodeType": "EmitStatement",
                  "src": "13856:23:1"
                }
              ]
            },
            "documentation": {
              "id": 1036,
              "nodeType": "StructuredDocumentation",
              "src": "13450:85:1",
              "text": "@notice an external function to burn all ERC20 tokens to receive the ERC721 token"
            },
            "functionSelector": "be040fb0",
            "id": 1078,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "13549:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13555:2:1"
            },
            "returnParameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13567:0:1"
            },
            "scope": 1193,
            "src": "13540:346:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1138,
              "nodeType": "Block",
              "src": "14017:376:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$43",
                          "typeString": "enum TokenVault.State"
                        },
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1083,
                          "name": "auctionState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "14035:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1084,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "14051:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$43_$",
                              "typeString": "type(enum TokenVault.State)"
                            }
                          },
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ended",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "14051:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$43",
                            "typeString": "enum TokenVault.State"
                          }
                        },
                        "src": "14035:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636173683a7661756c74206e6f7420636c6f73656420796574",
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14064:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd206a81fe3bdeee47dedb23120f29491952c324fb0a2c18ffa5dd8970335d32",
                          "typeString": "literal_string \"cash:vault not closed yet\""
                        },
                        "value": "cash:vault not closed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd206a81fe3bdeee47dedb23120f29491952c324fb0a2c18ffa5dd8970335d32",
                          "typeString": "literal_string \"cash:vault not closed yet\""
                        }
                      ],
                      "id": 1082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14027:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14027:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "14027:65:1"
                },
                {
                  "assignments": [
                    1091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1091,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "14110:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1138,
                      "src": "14102:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14102:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1096,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1093,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14126:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14126:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1092,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2909,
                      "src": "14116:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14116:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14102:35:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1098,
                          "name": "bal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1091,
                          "src": "14155:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14161:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14155:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636173683a6e6f20746f6b656e7320746f2063617368206f7574",
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14164:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2732c0c4108fa3a0866b64b163761a3198db0b12fb4dec6ae8c6148bb189c2a6",
                          "typeString": "literal_string \"cash:no tokens to cash out\""
                        },
                        "value": "cash:no tokens to cash out"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2732c0c4108fa3a0866b64b163761a3198db0b12fb4dec6ae8c6148bb189c2a6",
                          "typeString": "literal_string \"cash:no tokens to cash out\""
                        }
                      ],
                      "id": 1097,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14147:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14147:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "14147:46:1"
                },
                {
                  "assignments": [
                    1105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1105,
                      "mutability": "mutable",
                      "name": "share",
                      "nameLocation": "14211:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1138,
                      "src": "14203:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14203:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1116,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1106,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "14219:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1109,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "14233:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenVault_$1193",
                                "typeString": "contract TokenVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_TokenVault_$1193",
                                "typeString": "contract TokenVault"
                              }
                            ],
                            "id": 1108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14225:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1107,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14225:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14225:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "14225:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14219:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1113,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "14249:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14249:13:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14219:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14203:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14278:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14278:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1120,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "14290:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1117,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3288,
                      "src": "14272:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14272:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "14272:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1126,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "14328:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "14328:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14320:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14320:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14320:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1129,
                        "name": "share",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "14341:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1123,
                      "name": "_sendETHOrWETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "14305:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14305:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "14305:42:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14368:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14368:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1135,
                        "name": "share",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "14380:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1132,
                      "name": "Cash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "14363:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14363:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1137,
                  "nodeType": "EmitStatement",
                  "src": "14358:28:1"
                }
              ]
            },
            "documentation": {
              "id": 1079,
              "nodeType": "StructuredDocumentation",
              "src": "13892:95:1",
              "text": "@notice an external function to burn ERC20 tokens to receive ETH from ERC721 token purchase"
            },
            "functionSelector": "961be391",
            "id": 1139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cash",
            "nameLocation": "14001:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14005:2:1"
            },
            "returnParameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14017:0:1"
            },
            "scope": 1193,
            "src": "13992:401:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1169,
              "nodeType": "Block",
              "src": "14540:481:1",
              "statements": [
                {
                  "condition": {
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "14609:31:1",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 1147,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "14630:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1148,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "14634:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1146,
                        "name": "_attemptETHTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "14610:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14610:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1168,
                  "nodeType": "IfStatement",
                  "src": "14605:410:1",
                  "trueBody": {
                    "id": 1167,
                    "nodeType": "Block",
                    "src": "14642:373:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1152,
                                    "name": "weth",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17,
                                    "src": "14869:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1151,
                                  "name": "IWETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1449,
                                  "src": "14863:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IWETH_$1449_$",
                                    "typeString": "type(contract IWETH)"
                                  }
                                },
                                "id": 1153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14863:11:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IWETH_$1449",
                                  "typeString": "contract IWETH"
                                }
                              },
                              "id": 1154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "deposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1407,
                              "src": "14863:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 1156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1155,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1143,
                                "src": "14890:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "14863:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14863:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1158,
                        "nodeType": "ExpressionStatement",
                        "src": "14863:35:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1163,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1141,
                              "src": "14933:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1164,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1143,
                              "src": "14937:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1160,
                                  "name": "weth",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17,
                                  "src": "14918:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1159,
                                "name": "IWETH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1449,
                                "src": "14912:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IWETH_$1449_$",
                                  "typeString": "type(contract IWETH)"
                                }
                              },
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14912:11:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWETH_$1449",
                                "typeString": "contract IWETH"
                              }
                            },
                            "id": 1162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1430,
                            "src": "14912:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14912:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1166,
                        "nodeType": "ExpressionStatement",
                        "src": "14912:31:1"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendETHOrWETH",
            "nameLocation": "14489:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14512:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1170,
                  "src": "14504:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14504:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1143,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14524:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1170,
                  "src": "14516:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14516:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14503:27:1"
            },
            "returnParameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14540:0:1"
            },
            "scope": 1193,
            "src": "14480:541:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1191,
              "nodeType": "Block",
              "src": "15440:312:1",
              "statements": [
                {
                  "assignments": [
                    1180,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1180,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "15671:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "15666:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1179,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "15666:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1188,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15718:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1181,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "15684:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "15684:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1183,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "15699:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "3330303030",
                          "id": 1184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15711:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30000_by_1",
                            "typeString": "int_const 30000"
                          },
                          "value": "30000"
                        }
                      ],
                      "src": "15684:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15684:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15665:56:1"
                },
                {
                  "expression": {
                    "id": 1189,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1180,
                    "src": "15738:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1178,
                  "id": 1190,
                  "nodeType": "Return",
                  "src": "15731:14:1"
                }
              ]
            },
            "id": 1192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_attemptETHTransfer",
            "nameLocation": "15349:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1172,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15377:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1192,
                  "src": "15369:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15369:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "15389:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1192,
                  "src": "15381:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15381:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15368:27:1"
            },
            "returnParameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1177,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1192,
                  "src": "15430:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15430:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15429:6:1"
            },
            "scope": 1193,
            "src": "15340:412:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1194,
        "src": "322:15433:1",
        "usedErrors": []
      }
    ],
    "src": "31:15724:1"
  },
  "bytecode": "60a06040523480156200001157600080fd5b506040516200333038038062003330833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b608051613241620000ef6000396000818161071e0152818161090301528181610b7901528181610c7401528181610d020152818161104301528181611132015281816112db015281816113ca01528181611537015281816117b401528181611c9b0152818161266701526126ef01526132416000f3fe6080604052600436106102515760003560e01c806380436fe011610139578063be040fb0116100b6578063dd62ed3e1161007a578063dd62ed3e146106b0578063ddca3f43146106f6578063e06174e41461070c578063e66f53b714610740578063efbe1c1c14610760578063fc0c546a1461077557600080fd5b8063be040fb01461063c578063be9a655514610651578063c91de64914610659578063d294f09314610686578063db2e1eed1461069b57600080fd5b80639a4e6d34116100fd5780639a4e6d34146105ba578063a457c2d7146105d0578063a9059cbb146105f0578063adc1b95614610610578063af640d0f1461062657600080fd5b806380436fe014610530578063853a1b90146105505780639012c4a81461057057806395d89b4114610590578063961be391146105a557600080fd5b8063313ce567116101d2578063626fb2f011610196578063626fb2f0146104605780636a775714146104805780636da84e6c146104a057806370a08231146104b65780637b5581ed146104ec5780637fb450991461050257600080fd5b8063313ce567146103b4578063325c25a2146103d057806339509351146103e65780633fc8cef3146104065780635c9920fc1461044657600080fd5b80631998aeef116102195780631998aeef1461033657806323b872dd1461033e5780632a24f46c1461035e5780632a44f120146103745780632bf33bd91461039457600080fd5b806306fdde0314610256578063095ea7b3146102815780630c6a62dd146102b1578063150b7a02146102d357806318160ddd14610317575b600080fd5b34801561026257600080fd5b5061026b610795565b6040516102789190612ccb565b60405180910390f35b34801561028d57600080fd5b506102a161029c366004612d35565b610827565b6040519015158152602001610278565b3480156102bd57600080fd5b506102d16102cc366004612d61565b61083d565b005b3480156102df57600080fd5b506102fe6102ee366004612e11565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610278565b34801561032357600080fd5b506035545b604051908152602001610278565b6102d1610892565b34801561034a57600080fd5b506102a1610359366004612e91565b610acd565b34801561036a57600080fd5b5061032860995481565b34801561038057600080fd5b506102d161038f366004612d61565b610b77565b3480156103a057600080fd5b506102d16103af366004612ed2565b610c48565b3480156103c057600080fd5b5060405160128152602001610278565b3480156103dc57600080fd5b50610328609a5481565b3480156103f257600080fd5b506102a1610401366004612d35565b610e10565b34801561041257600080fd5b5061042e73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6040516001600160a01b039091168152602001610278565b34801561045257600080fd5b5060a1546102a19060ff1681565b34801561046c57600080fd5b506102d161047b366004612f0b565b610e4c565b34801561048c57600080fd5b506102d161049b366004612ed2565b610f3d565b3480156104ac57600080fd5b50610328609c5481565b3480156104c257600080fd5b506103286104d1366004612d61565b6001600160a01b031660009081526033602052604090205490565b3480156104f857600080fd5b50610328609b5481565b34801561050e57600080fd5b50609d5461052390600160a01b900460ff1681565b6040516102789190612fd1565b34801561053c57600080fd5b506102d161054b366004612d61565b611535565b34801561055c57600080fd5b50609d5461042e906001600160a01b031681565b34801561057c57600080fd5b506102d161058b366004612ed2565b611742565b34801561059c57600080fd5b5061026b6118ce565b3480156105b157600080fd5b506102d16118dd565b3480156105c657600080fd5b5061032860a25481565b3480156105dc57600080fd5b506102a16105eb366004612d35565b611a15565b3480156105fc57600080fd5b506102a161060b366004612d35565b611aae565b34801561061c57600080fd5b5061032860a05481565b34801561063257600080fd5b5061032860985481565b34801561064857600080fd5b506102d1611abb565b6102d1611bde565b34801561066557600080fd5b50610328610674366004612d61565b60a36020526000908152604090205481565b34801561069257600080fd5b506102d1611ded565b3480156106a757600080fd5b50610328611df7565b3480156106bc57600080fd5b506103286106cb366004612ff9565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b34801561070257600080fd5b50610328609f5481565b34801561071857600080fd5b5061042e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561074c57600080fd5b50609e5461042e906001600160a01b031681565b34801561076c57600080fd5b506102d1611e1e565b34801561078157600080fd5b5060975461042e906001600160a01b031681565b6060603680546107a490613032565b80601f01602080910402602001604051908101604052809291908181526020018280546107d090613032565b801561081d5780601f106107f25761010080835404028352916020019161081d565b820191906000526020600020905b81548152906001019060200180831161080057829003601f168201915b5050505050905090565b6000610834338484611f9e565b50600192915050565b609e546001600160a01b031633146108705760405162461bcd60e51b81526004016108679061306c565b60405180910390fd5b609e80546001600160a01b0319166001600160a01b0392909216919091179055565b6001609d54600160a01b900460ff1660038111156108b2576108b2612fbb565b146108ff5760405162461bcd60e51b815260206004820152601760248201527f6269643a61756374696f6e206973206e6f74206c6976650000000000000000006044820152606401610867565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637c513c0f6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610961573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109859190613098565b610991906103e86130c7565b905080609c546109a191906130df565b6109ad346103e86130df565b10156109ed5760405162461bcd60e51b815260206004820152600f60248201526e189a590e9d1bdbc81b1bddc8189a59608a1b6044820152606401610867565b6099544210610a325760405162461bcd60e51b8152602060048201526011602482015270189a590e985d58dd1a5bdb88195b991959607a1b6044820152606401610867565b61038442609954610a4391906130fe565b11610a625761038460996000828254610a5c91906130c7565b90915550505b609d54609c54610a7b916001600160a01b0316906120c2565b34609c819055609d80546001600160a01b03191633908117909155604051918252907fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d29060200160405180910390a250565b6000610ada8484846121c4565b6001600160a01b038416600090815260346020908152604080832033845290915290205482811015610b5f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610867565b610b6c8533858403611f9e565b506001949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf99190613115565b6001600160a01b0316336001600160a01b0316146108705760405162461bcd60e51b815260206004820152600c60248201526b35b4b1b59d3737ba1033b7bb60a11b6044820152606401610867565b609e546001600160a01b03163314610c725760405162461bcd60e51b81526004016108679061306c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0b335e36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf69190613098565b8110158015610d8857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630e519ef96040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d849190613098565b8111155b610dd45760405162461bcd60e51b815260206004820152601d60248201527f7570646174653a696e76616c69642061756374696f6e206c656e6774680000006044820152606401610867565b609a8190556040518181527f4ab86ae701798277aa378943b9dfd155d3b19703cd57be298908fadd32f7bf46906020015b60405180910390a150565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091610834918590610e479086906130c7565b611f9e565b600054610100900460ff1680610e65575060005460ff16155b610e815760405162461bcd60e51b815260040161086790613132565b600054610100900460ff16158015610ea3576000805461ffff19166101011790555b610ead83836123a9565b610eb5612428565b609780546001600160a01b038a81166001600160a01b03199283161790925560988990556203f480609a55609e8054928c169290911682179055609f8590554260a055609d805460ff60a01b19169055600090815260a360205260409020859055610f20898761249c565b8015610f32576000805461ff00191690555b505050505050505050565b6000609d54600160a01b900460ff166003811115610f5d57610f5d612fbb565b14610f7a5760405162461bcd60e51b815260040161086790613180565b33600090815260a36020526040902054808203610fd05760405162461bcd60e51b81526020600482015260146024820152737570646174653a6e6f7420616e2075706461746560601b6044820152606401610867565b3360009081526033602052604081205460a2549091036110015760a2819055610ff983826130df565b609b556114e4565b60a2548114801561101157508115155b1561102057610ff983826130df565b8160000361125b57600060a254609b5461103a91906131c7565b905060006103e87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166309990a966040518163ffffffff1660e01b81526004016020604051808303816000875af11580156110a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c59190613098565b6110cf90846130df565b6110d991906131c7565b90508085101561112b5760405162461bcd60e51b815260206004820152601c60248201527f7570646174653a7265736572766520707269636520746f6f206c6f77000000006044820152606401610867565b60006103e87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635410bfc96040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b49190613098565b6111be90856130df565b6111c891906131c7565b90508086111561121a5760405162461bcd60e51b815260206004820152601d60248201527f7570646174653a7265736572766520707269636520746f6f20686967680000006044820152606401610867565b8360a2600082825461122c91906130c7565b9091555061123c905086856130df565b609b600082825461124d91906130c7565b909155506114e49350505050565b826000036112a1578060a2600082825461127591906130fe565b90915550611285905082826130df565b609b600082825461129691906130fe565b909155506114e49050565b60008160a2546112b191906130fe565b6112bb83856130df565b609b546112c891906130fe565b6112d291906131c7565b905060006103e87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166309990a966040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611339573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135d9190613098565b61136790846130df565b61137191906131c7565b9050808510156113c35760405162461bcd60e51b815260206004820152601c60248201527f7570646174653a7265736572766520707269636520746f6f206c6f77000000006044820152606401610867565b60006103e87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635410bfc96040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144c9190613098565b61145690856130df565b61146091906131c7565b9050808611156114b25760405162461bcd60e51b815260206004820152601d60248201527f7570646174653a7265736572766520707269636520746f6f20686967680000006044820152606401610867565b6114bc85856130df565b6114c687866130df565b609b546114d391906130c7565b6114dd91906130fe565b609b555050505b33600081815260a3602052604090819020859055517f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c906115289086815260200190565b60405180910390a2505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b79190613115565b6001600160a01b0316336001600160a01b0316146116085760405162461bcd60e51b815260206004820152600e60248201526d3932b6b7bb329d3737ba1033b7bb60911b6044820152606401610867565b6000609d54600160a01b900460ff16600381111561162857611628612fbb565b146116455760405162461bcd60e51b815260040161086790613180565b6001600160a01b038116600090815260a36020526040812054908190036116a55760405162461bcd60e51b81526020600482015260146024820152737570646174653a6e6f7420616e2075706461746560601b6044820152606401610867565b6001600160a01b03821660009081526033602052604081205490508060a260008282546116d291906130fe565b909155506116e2905082826130df565b609b60008282546116f391906130fe565b90915550506001600160a01b038316600081815260a360209081526040808320839055519182527f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c9101611528565b609e546001600160a01b0316331461176c5760405162461bcd60e51b81526004016108679061306c565b609f5481106117b25760405162461bcd60e51b81526020600482015260126024820152717570646174653a63616e277420726169736560701b6044820152606401610867565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638a364bc16040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118369190613098565b8111156118915760405162461bcd60e51b8152602060048201526024808201527f7570646174653a63616e6e6f7420696e637265617365206665652074686973206044820152630d0d2ced60e31b6064820152608401610867565b61189961258f565b609f8190556040518181527f2d1dae59a9e9ec0bc2ab19d45b7d10c8c55304fa08b40a7998e9f67f03223d0490602001610e05565b6060603780546107a490613032565b6002609d54600160a01b900460ff1660038111156118fd576118fd612fbb565b1461194a5760405162461bcd60e51b815260206004820152601960248201527f636173683a7661756c74206e6f7420636c6f73656420796574000000000000006044820152606401610867565b33600090815260336020526040902054806119a75760405162461bcd60e51b815260206004820152601a60248201527f636173683a6e6f20746f6b656e7320746f2063617368206f75740000000000006044820152606401610867565b60006119b260355490565b6119bc47846130df565b6119c691906131c7565b90506119d23383612869565b6119dc33826120c2565b60405181815233907f730831a1e4aa2d187ddd8e03d7beeac760a3927da5f112d645e0f8df7494b3679060200160405180910390a25050565b3360009081526034602090815260408083206001600160a01b038616845290915281205482811015611a975760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610867565b611aa43385858403611f9e565b5060019392505050565b60006108343384846121c4565b6000609d54600160a01b900460ff166003811115611adb57611adb612fbb565b14611b1e5760405162461bcd60e51b815260206004820152601360248201527272656465656d3a6e6f2072656465656d696e6760681b6044820152606401610867565b611b3033611b2b60355490565b612869565b6097546098546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015611b8657600080fd5b505af1158015611b9a573d6000803e3d6000fd5b5050609d805460ff60a01b1916600360a01b179055505060405133907fd1b5ea7fe0f1c2fa09d49c2aa9b2200664ba57a734f1d95481d95b7f99af991c90600090a2565b6000609d54600160a01b900460ff166003811115611bfe57611bfe612fbb565b14611c4b5760405162461bcd60e51b815260206004820152601760248201527f73746172743a6e6f2061756374696f6e207374617274730000000000000000006044820152606401610867565b611c53611df7565b341015611c965760405162461bcd60e51b81526020600482015260116024820152701cdd185c9d0e9d1bdbc81b1bddc8189a59607a1b6044820152606401610867565b6035547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332977c736040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1d9190613098565b611d2791906130df565b60a254611d36906103e86130df565b1015611d845760405162461bcd60e51b815260206004820152601760248201527f73746172743a6e6f7420656e6f75676820766f746572730000000000000000006044820152606401610867565b609a54611d9190426130c7565b609955609d805434609c8190556001600160a81b031990911633908117600160a01b179092556040519081527fcfb9c5312b25ec7b809d61e638df25f749eae5d5c25399e1c93d1d319bfd5821906020015b60405180910390a2565b611df561258f565b565b600060a254600014611e185760a254609b54611e1391906131c7565b905090565b50600090565b6001609d54600160a01b900460ff166003811115611e3e57611e3e612fbb565b14611e8b5760405162461bcd60e51b815260206004820152601c60248201527f656e643a7661756c742068617320616c726561647920636c6f736564000000006044820152606401610867565b609954421015611ed05760405162461bcd60e51b815260206004820152601060248201526f656e643a61756374696f6e206c69766560801b6044820152606401610867565b611ed861258f565b609754609d546098546040516323b872dd60e01b81523060048201526001600160a01b03928316602482015260448101919091529116906323b872dd90606401600060405180830381600087803b158015611f3257600080fd5b505af1158015611f46573d6000803e3d6000fd5b5050609d8054600160a11b60ff60a01b19821617909155609c546040519081526001600160a01b0390911692507f8b01f9dd0400d6a1e84369a5fb8f6033934856ffa8ebadd707dca302ab5516959150602001611de3565b6001600160a01b0383166120005760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610867565b6001600160a01b0382166120615760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610867565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6120cc82826129ca565b6121c05773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561211f57600080fd5b505af1158015612133573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b03861660048201526024810185905273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2935063a9059cbb925060440190506020604051808303816000875af115801561219a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121be91906131e9565b505b5050565b6001600160a01b0383166122285760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610867565b6001600160a01b03821661228a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610867565b612295838383612a2d565b6001600160a01b0383166000908152603360205260409020548181101561230d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610867565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906123449084906130c7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161239091815260200190565b60405180910390a36123a38484846121be565b50505050565b600054610100900460ff16806123c2575060005460ff16155b6123de5760405162461bcd60e51b815260040161086790613132565b600054610100900460ff16158015612400576000805461ffff19166101011790555b612408612b33565b6124128383612b9d565b80156121be576000805461ff0019169055505050565b600054610100900460ff1680612441575060005460ff16155b61245d5760405162461bcd60e51b815260040161086790613132565b600054610100900460ff1615801561247f576000805461ffff19166101011790555b612487612b33565b8015612499576000805461ff00191690555b50565b6001600160a01b0382166124f25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610867565b6124fe60008383612a2d565b806035600082825461251091906130c7565b90915550506001600160a01b0382166000908152603360205260408120805483929061253d9084906130c7565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36121c0600083836121be565b6002609d54600160a01b900460ff1660038111156125af576125af612fbb565b0361260a5760405162461bcd60e51b815260206004820152602560248201527f636c61696d3a63616e6e6f7420636c61696d2061667465722061756374696f6e60448201526420656e647360d81b6064820152608401610867565b60006103e861261860355490565b609f5461262591906130df565b61262f91906131c7565b905060006126416301e13380836131c7565b9050600060a0544261265391906130fe565b9050600061266183836130df565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b3f006746040518163ffffffff1660e01b81526004016020604051808303816000875af11580156126c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126e99190613115565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630ea90a126040518163ffffffff1660e01b81526004016020604051808303816000875af115801561274d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127719190613098565b90506103e861277f60355490565b61278990836130df565b61279391906131c7565b95506127a36301e13380876131c7565b945060006127b186866130df565b4260a055609e549091506001600160a01b03161561281357609e546127df906001600160a01b03168561249c565b6040518481527f62b10e3ff3d45b5ff546e740b893897facb1680285f989a64ae932d62c5388e19060200160405180910390a15b6001600160a01b038316156128605761282c838261249c565b6040518181527f62b10e3ff3d45b5ff546e740b893897facb1680285f989a64ae932d62c5388e19060200160405180910390a15b50505050505050565b6001600160a01b0382166128c95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610867565b6128d582600083612a2d565b6001600160a01b038216600090815260336020526040902054818110156129495760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610867565b6001600160a01b03831660009081526033602052604081208383039055603580548492906129789084906130fe565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36121be836000846121be565b600080836001600160a01b03168361753090604051600060405180830381858888f193505050503d8060008114612a1d576040519150601f19603f3d011682016040523d82523d6000602084013e612a22565b606091505b509095945050505050565b6000609d54600160a01b900460ff166003811115612a4d57612a4d612fbb565b036121be576001600160a01b03808416600090815260a36020526040808220549285168252902054808214612b2c5780600003612ac2578260a26000828254612a9691906130fe565b90915550612aa6905082846130df565b609b6000828254612ab791906130fe565b90915550612b2c9050565b81600003612afd578260a26000828254612adc91906130c7565b90915550612aec905081846130df565b609b6000828254612ab791906130c7565b612b0782846130df565b612b1182856130df565b609b54612b1e91906130c7565b612b2891906130fe565b609b555b5050505050565b600054610100900460ff1680612b4c575060005460ff16155b612b685760405162461bcd60e51b815260040161086790613132565b600054610100900460ff16158015612487576000805461ffff19166101011790558015612499576000805461ff001916905550565b600054610100900460ff1680612bb6575060005460ff16155b612bd25760405162461bcd60e51b815260040161086790613132565b600054610100900460ff16158015612bf4576000805461ffff19166101011790555b8251612c07906036906020860190612c32565b508151612c1b906037906020850190612c32565b5080156121be576000805461ff0019169055505050565b828054612c3e90613032565b90600052602060002090601f016020900481019282612c605760008555612ca6565b82601f10612c7957805160ff1916838001178555612ca6565b82800160010185558215612ca6579182015b82811115612ca6578251825591602001919060010190612c8b565b50612cb2929150612cb6565b5090565b5b80821115612cb25760008155600101612cb7565b600060208083528351808285015260005b81811015612cf857858101830151858201604001528201612cdc565b81811115612d0a576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461249957600080fd5b60008060408385031215612d4857600080fd5b8235612d5381612d20565b946020939093013593505050565b600060208284031215612d7357600080fd5b8135612d7e81612d20565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612db657612db6612d85565b604051601f8501601f19908116603f01168101908282118183101715612dde57612dde612d85565b81604052809350858152868686011115612df757600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215612e2757600080fd5b8435612e3281612d20565b93506020850135612e4281612d20565b925060408501359150606085013567ffffffffffffffff811115612e6557600080fd5b8501601f81018713612e7657600080fd5b612e8587823560208401612d9b565b91505092959194509250565b600080600060608486031215612ea657600080fd5b8335612eb181612d20565b92506020840135612ec181612d20565b929592945050506040919091013590565b600060208284031215612ee457600080fd5b5035919050565b600082601f830112612efc57600080fd5b612d7e83833560208501612d9b565b600080600080600080600080610100898b031215612f2857600080fd5b8835612f3381612d20565b97506020890135612f4381612d20565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff80821115612f7c57600080fd5b612f888c838d01612eeb565b935060e08b0135915080821115612f9e57600080fd5b50612fab8b828c01612eeb565b9150509295985092959890939650565b634e487b7160e01b600052602160045260246000fd5b6020810160048310612ff357634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561300c57600080fd5b823561301781612d20565b9150602083013561302781612d20565b809150509250929050565b600181811c9082168061304657607f821691505b60208210810361306657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601290820152713ab83230ba329d3737ba1031bab930ba37b960711b604082015260600190565b6000602082840312156130aa57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156130da576130da6130b1565b500190565b60008160001904831182151516156130f9576130f96130b1565b500290565b600082821015613110576131106130b1565b500390565b60006020828403121561312757600080fd5b8151612d7e81612d20565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526027908201527f7570646174653a61756374696f6e206c6976652063616e6e6f742075706461746040820152666520707269636560c81b606082015260800190565b6000826131e457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156131fb57600080fd5b81518015158114612d7e57600080fdfea2646970667358221220d79fdcfbec5366b8da582aadc2b988fd40c33dbce44e048f7fb657089b398ebf64736f6c634300080d0033",
  "bytecodeSha1": "c273464390101ac8d547c9d26ff16207c3769d67",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "TokenVault",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "TokenVault._beforeTokenTransfer": {
          "183": [
            10667,
            10697,
            false
          ],
          "184": [
            10887,
            10907,
            false
          ],
          "185": [
            10976,
            10988,
            false
          ],
          "186": [
            11263,
            11277,
            false
          ]
        },
        "TokenVault._claimFees": {
          "180": [
            6886,
            6913,
            true
          ],
          "181": [
            7814,
            7835,
            false
          ],
          "182": [
            7944,
            7968,
            false
          ]
        },
        "TokenVault._sendETHOrWETH": {
          "179": [
            14610,
            14640,
            false
          ]
        },
        "TokenVault.bid": {
          "145": [
            12363,
            12389,
            true
          ],
          "146": [
            12507,
            12547,
            true
          ],
          "147": [
            12585,
            12613,
            true
          ],
          "148": [
            12720,
            12762,
            false
          ]
        },
        "TokenVault.cash": {
          "170": [
            14035,
            14062,
            true
          ],
          "171": [
            14155,
            14162,
            true
          ]
        },
        "TokenVault.end": {
          "177": [
            13108,
            13134,
            true
          ],
          "178": [
            13185,
            13214,
            true
          ]
        },
        "TokenVault.kickCurator": {
          "149": [
            4680,
            4719,
            true
          ]
        },
        "TokenVault.redeem": {
          "172": [
            13585,
            13615,
            true
          ]
        },
        "TokenVault.removeReserve": {
          "164": [
            4905,
            4944,
            true
          ],
          "165": [
            4981,
            5011,
            true
          ],
          "166": [
            5115,
            5123,
            true
          ]
        },
        "TokenVault.reservePrice": {
          "176": [
            4328,
            4345,
            true
          ]
        },
        "TokenVault.start": {
          "173": [
            11732,
            11762,
            true
          ],
          "174": [
            11808,
            11835,
            true
          ],
          "175": [
            11875,
            11953,
            true
          ]
        },
        "TokenVault.updateAuctionLength": {
          "150": [
            5913,
            5934,
            true
          ],
          "151": [
            5975,
            6024,
            false
          ],
          "152": [
            6028,
            6077,
            true
          ]
        },
        "TokenVault.updateCurator": {
          "144": [
            5653,
            5674,
            true
          ]
        },
        "TokenVault.updateFee": {
          "167": [
            6347,
            6368,
            true
          ],
          "168": [
            6409,
            6419,
            true
          ],
          "169": [
            6460,
            6503,
            true
          ]
        },
        "TokenVault.updateUserPrice": {
          "153": [
            8384,
            8414,
            true
          ],
          "154": [
            8522,
            8533,
            true
          ],
          "155": [
            8621,
            8638,
            false
          ],
          "156": [
            8786,
            8808,
            false
          ],
          "157": [
            8812,
            8820,
            false
          ],
          "158": [
            8936,
            8944,
            false
          ],
          "159": [
            9137,
            9160,
            true
          ],
          "160": [
            9317,
            9340,
            true
          ],
          "161": [
            9523,
            9532,
            false
          ],
          "162": [
            9899,
            9922,
            true
          ],
          "163": [
            10079,
            10102,
            true
          ]
        }
      },
      "11": {},
      "15": {
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "197": [
            1409,
            1422,
            true
          ],
          "198": [
            1427,
            1439,
            true
          ]
        }
      },
      "16": {
        "ERC20Upgradeable._approve": {
          "189": [
            10446,
            10465,
            true
          ],
          "190": [
            10524,
            10545,
            true
          ]
        },
        "ERC20Upgradeable._burn": {
          "195": [
            9399,
            9420,
            true
          ],
          "196": [
            9590,
            9614,
            true
          ]
        },
        "ERC20Upgradeable._mint": {
          "194": [
            8690,
            8711,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "191": [
            7753,
            7773,
            true
          ],
          "192": [
            7833,
            7856,
            true
          ],
          "193": [
            8024,
            8047,
            true
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "188": [
            6927,
            6962,
            true
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "187": [
            5444,
            5470,
            true
          ]
        }
      },
      "17": {},
      "18": {},
      "19": {},
      "20": {},
      "21": {},
      "22": {},
      "5": {},
      "6": {}
    },
    "statements": {
      "0": {},
      "1": {
        "TokenVault._beforeTokenTransfer": {
          "137": [
            11093,
            11116
          ],
          "138": [
            11138,
            11173
          ],
          "139": [
            11301,
            11324
          ],
          "140": [
            11346,
            11379
          ],
          "141": [
            11485,
            11558
          ]
        },
        "TokenVault._claimFees": {
          "122": [
            6878,
            6955
          ],
          "123": [
            7601,
            7649
          ],
          "124": [
            7660,
            7702
          ],
          "125": [
            7770,
            7799
          ],
          "126": [
            7851,
            7878
          ],
          "127": [
            7892,
            7920
          ],
          "128": [
            7984,
            8010
          ],
          "129": [
            8024,
            8048
          ]
        },
        "TokenVault._sendETHOrWETH": {
          "103": [
            14863,
            14898
          ],
          "104": [
            14912,
            14943
          ]
        },
        "TokenVault.bid": {
          "10": [
            12355,
            12417
          ],
          "11": [
            12499,
            12567
          ],
          "12": [
            12577,
            12635
          ],
          "13": [
            12778,
            12802
          ],
          "14": [
            12823,
            12857
          ],
          "15": [
            12868,
            12889
          ],
          "16": [
            12899,
            12928
          ],
          "17": [
            12939,
            12970
          ]
        },
        "TokenVault.cash": {
          "69": [
            14027,
            14092
          ],
          "70": [
            14147,
            14193
          ],
          "71": [
            14272,
            14294
          ],
          "72": [
            14305,
            14347
          ],
          "73": [
            14358,
            14386
          ]
        },
        "TokenVault.claimFees": {
          "91": [
            6756,
            6768
          ]
        },
        "TokenVault.end": {
          "93": [
            13100,
            13167
          ],
          "94": [
            13177,
            13235
          ],
          "95": [
            13246,
            13258
          ],
          "96": [
            13306,
            13361
          ],
          "97": [
            13372,
            13398
          ],
          "98": [
            13409,
            13437
          ]
        },
        "TokenVault.initialize": {
          "28": [
            3751,
            3779
          ],
          "29": [
            3789,
            3810
          ],
          "30": [
            3853,
            3867
          ],
          "31": [
            3877,
            3885
          ],
          "32": [
            3895,
            3917
          ],
          "33": [
            3927,
            3945
          ],
          "34": [
            3955,
            3965
          ],
          "35": [
            3975,
            4004
          ],
          "36": [
            4014,
            4043
          ],
          "37": [
            4053,
            4086
          ],
          "38": [
            4097,
            4121
          ]
        },
        "TokenVault.kickCurator": {
          "22": [
            4672,
            4736
          ]
        },
        "TokenVault.redeem": {
          "78": [
            13577,
            13639
          ],
          "79": [
            13649,
            13681
          ],
          "80": [
            13739,
            13797
          ],
          "81": [
            13816,
            13845
          ],
          "82": [
            13856,
            13879
          ]
        },
        "TokenVault.removeReserve": {
          "55": [
            4897,
            4963
          ],
          "56": [
            4973,
            5055
          ],
          "57": [
            5107,
            5148
          ],
          "58": [
            5202,
            5224
          ],
          "59": [
            5234,
            5262
          ],
          "60": [
            5281,
            5302
          ],
          "61": [
            5313,
            5339
          ]
        },
        "TokenVault.reservePrice": {
          "92": [
            4321,
            4379
          ]
        },
        "TokenVault.start": {
          "83": [
            11724,
            11790
          ],
          "84": [
            11800,
            11857
          ],
          "85": [
            11867,
            11981
          ],
          "86": [
            12000,
            12044
          ],
          "87": [
            12054,
            12079
          ],
          "88": [
            12090,
            12111
          ],
          "89": [
            12121,
            12150
          ],
          "90": [
            12161,
            12194
          ]
        },
        "TokenVault.updateAuctionLength": {
          "23": [
            5905,
            5957
          ],
          "24": [
            5967,
            6111
          ],
          "25": [
            6122,
            6145
          ],
          "26": [
            6155,
            6188
          ]
        },
        "TokenVault.updateCurator": {
          "8": [
            5645,
            5697
          ],
          "9": [
            5708,
            5726
          ]
        },
        "TokenVault.updateFee": {
          "62": [
            6339,
            6391
          ],
          "63": [
            6401,
            6442
          ],
          "64": [
            6452,
            6544
          ],
          "65": [
            6555,
            6567
          ],
          "66": [
            6578,
            6588
          ],
          "67": [
            6598,
            6624
          ]
        },
        "TokenVault.updateUserPrice": {
          "39": [
            8376,
            8458
          ],
          "40": [
            8514,
            8558
          ],
          "41": [
            8654,
            8675
          ],
          "42": [
            8689,
            8717
          ],
          "43": [
            8836,
            8864
          ],
          "44": [
            9129,
            9193
          ],
          "45": [
            9309,
            9374
          ],
          "46": [
            9389,
            9411
          ],
          "47": [
            9425,
            9454
          ],
          "48": [
            9548,
            9570
          ],
          "49": [
            9584,
            9612
          ],
          "50": [
            9891,
            9955
          ],
          "51": [
            10071,
            10136
          ],
          "52": [
            10151,
            10213
          ],
          "53": [
            10234,
            10263
          ],
          "54": [
            10274,
            10308
          ]
        }
      },
      "11": {},
      "15": {},
      "16": {
        "ERC20Upgradeable.__ERC20_init": {
          "113": [
            2131,
            2157
          ],
          "114": [
            2167,
            2205
          ]
        },
        "ERC20Upgradeable.__ERC20_init_unchained": {
          "142": [
            2325,
            2338
          ],
          "143": [
            2348,
            2365
          ]
        },
        "ERC20Upgradeable._approve": {
          "99": [
            10438,
            10506
          ],
          "100": [
            10516,
            10584
          ],
          "101": [
            10595,
            10631
          ],
          "102": [
            10641,
            10678
          ]
        },
        "ERC20Upgradeable._burn": {
          "130": [
            9391,
            9458
          ],
          "131": [
            9469,
            9518
          ],
          "132": [
            9582,
            9653
          ],
          "133": [
            9687,
            9731
          ],
          "134": [
            9751,
            9773
          ],
          "135": [
            9784,
            9826
          ],
          "136": [
            9837,
            9885
          ]
        },
        "ERC20Upgradeable._mint": {
          "116": [
            8682,
            8747
          ],
          "117": [
            8758,
            8807
          ],
          "118": [
            8818,
            8840
          ],
          "119": [
            8850,
            8878
          ],
          "120": [
            8888,
            8930
          ],
          "121": [
            8941,
            8989
          ]
        },
        "ERC20Upgradeable._transfer": {
          "105": [
            7745,
            7815
          ],
          "106": [
            7825,
            7896
          ],
          "107": [
            7907,
            7954
          ],
          "108": [
            8016,
            8090
          ],
          "109": [
            8124,
            8166
          ],
          "110": [
            8186,
            8216
          ],
          "111": [
            8227,
            8267
          ],
          "112": [
            8278,
            8324
          ]
        },
        "ERC20Upgradeable.allowance": {
          "3": [
            4355,
            4389
          ]
        },
        "ERC20Upgradeable.approve": {
          "5": [
            4633,
            4672
          ],
          "7": [
            4682,
            4693
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "2": [
            3782,
            3807
          ]
        },
        "ERC20Upgradeable.decimals": {
          "1": [
            3449,
            3458
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "74": [
            6919,
            7004
          ],
          "75": [
            7038,
            7105
          ],
          "76": [
            7126,
            7137
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "27": [
            6144,
            6224
          ]
        },
        "ERC20Upgradeable.name": {
          "4": [
            2516,
            2528
          ]
        },
        "ERC20Upgradeable.symbol": {
          "68": [
            2729,
            2743
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "0": [
            3605,
            3624
          ]
        },
        "ERC20Upgradeable.transfer": {
          "77": [
            4119,
            4161
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "18": [
            5319,
            5355
          ],
          "19": [
            5436,
            5515
          ],
          "20": [
            5549,
            5606
          ],
          "21": [
            5627,
            5638
          ]
        }
      },
      "17": {},
      "18": {},
      "19": {},
      "20": {
        "ERC721HolderUpgradeable.__ERC721Holder_init": {
          "115": [
            534,
            565
          ]
        }
      },
      "21": {
        "ContextUpgradeable._msgSender": {
          "6": [
            894,
            911
          ]
        }
      },
      "22": {},
      "5": {},
      "6": {}
    }
  },
  "dependencies": [
    "Address",
    "ContextUpgradeable",
    "ERC20Upgradeable",
    "ERC721HolderUpgradeable",
    "IERC20MetadataUpgradeable",
    "IERC20Upgradeable",
    "IERC721",
    "IERC721ReceiverUpgradeable",
    "ISettings",
    "IWETH",
    "Initializable",
    "Ownable"
  ],
  "deployedBytecode": "6080604052600436106102515760003560e01c806380436fe011610139578063be040fb0116100b6578063dd62ed3e1161007a578063dd62ed3e146106b0578063ddca3f43146106f6578063e06174e41461070c578063e66f53b714610740578063efbe1c1c14610760578063fc0c546a1461077557600080fd5b8063be040fb01461063c578063be9a655514610651578063c91de64914610659578063d294f09314610686578063db2e1eed1461069b57600080fd5b80639a4e6d34116100fd5780639a4e6d34146105ba578063a457c2d7146105d0578063a9059cbb146105f0578063adc1b95614610610578063af640d0f1461062657600080fd5b806380436fe014610530578063853a1b90146105505780639012c4a81461057057806395d89b4114610590578063961be391146105a557600080fd5b8063313ce567116101d2578063626fb2f011610196578063626fb2f0146104605780636a775714146104805780636da84e6c146104a057806370a08231146104b65780637b5581ed146104ec5780637fb450991461050257600080fd5b8063313ce567146103b4578063325c25a2146103d057806339509351146103e65780633fc8cef3146104065780635c9920fc1461044657600080fd5b80631998aeef116102195780631998aeef1461033657806323b872dd1461033e5780632a24f46c1461035e5780632a44f120146103745780632bf33bd91461039457600080fd5b806306fdde0314610256578063095ea7b3146102815780630c6a62dd146102b1578063150b7a02146102d357806318160ddd14610317575b600080fd5b34801561026257600080fd5b5061026b610795565b6040516102789190612ccb565b60405180910390f35b34801561028d57600080fd5b506102a161029c366004612d35565b610827565b6040519015158152602001610278565b3480156102bd57600080fd5b506102d16102cc366004612d61565b61083d565b005b3480156102df57600080fd5b506102fe6102ee366004612e11565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610278565b34801561032357600080fd5b506035545b604051908152602001610278565b6102d1610892565b34801561034a57600080fd5b506102a1610359366004612e91565b610acd565b34801561036a57600080fd5b5061032860995481565b34801561038057600080fd5b506102d161038f366004612d61565b610b77565b3480156103a057600080fd5b506102d16103af366004612ed2565b610c48565b3480156103c057600080fd5b5060405160128152602001610278565b3480156103dc57600080fd5b50610328609a5481565b3480156103f257600080fd5b506102a1610401366004612d35565b610e10565b34801561041257600080fd5b5061042e73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6040516001600160a01b039091168152602001610278565b34801561045257600080fd5b5060a1546102a19060ff1681565b34801561046c57600080fd5b506102d161047b366004612f0b565b610e4c565b34801561048c57600080fd5b506102d161049b366004612ed2565b610f3d565b3480156104ac57600080fd5b50610328609c5481565b3480156104c257600080fd5b506103286104d1366004612d61565b6001600160a01b031660009081526033602052604090205490565b3480156104f857600080fd5b50610328609b5481565b34801561050e57600080fd5b50609d5461052390600160a01b900460ff1681565b6040516102789190612fd1565b34801561053c57600080fd5b506102d161054b366004612d61565b611535565b34801561055c57600080fd5b50609d5461042e906001600160a01b031681565b34801561057c57600080fd5b506102d161058b366004612ed2565b611742565b34801561059c57600080fd5b5061026b6118ce565b3480156105b157600080fd5b506102d16118dd565b3480156105c657600080fd5b5061032860a25481565b3480156105dc57600080fd5b506102a16105eb366004612d35565b611a15565b3480156105fc57600080fd5b506102a161060b366004612d35565b611aae565b34801561061c57600080fd5b5061032860a05481565b34801561063257600080fd5b5061032860985481565b34801561064857600080fd5b506102d1611abb565b6102d1611bde565b34801561066557600080fd5b50610328610674366004612d61565b60a36020526000908152604090205481565b34801561069257600080fd5b506102d1611ded565b3480156106a757600080fd5b50610328611df7565b3480156106bc57600080fd5b506103286106cb366004612ff9565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b34801561070257600080fd5b50610328609f5481565b34801561071857600080fd5b5061042e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561074c57600080fd5b50609e5461042e906001600160a01b031681565b34801561076c57600080fd5b506102d1611e1e565b34801561078157600080fd5b5060975461042e906001600160a01b031681565b6060603680546107a490613032565b80601f01602080910402602001604051908101604052809291908181526020018280546107d090613032565b801561081d5780601f106107f25761010080835404028352916020019161081d565b820191906000526020600020905b81548152906001019060200180831161080057829003601f168201915b5050505050905090565b6000610834338484611f9e565b50600192915050565b609e546001600160a01b031633146108705760405162461bcd60e51b81526004016108679061306c565b60405180910390fd5b609e80546001600160a01b0319166001600160a01b0392909216919091179055565b6001609d54600160a01b900460ff1660038111156108b2576108b2612fbb565b146108ff5760405162461bcd60e51b815260206004820152601760248201527f6269643a61756374696f6e206973206e6f74206c6976650000000000000000006044820152606401610867565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637c513c0f6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610961573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109859190613098565b610991906103e86130c7565b905080609c546109a191906130df565b6109ad346103e86130df565b10156109ed5760405162461bcd60e51b815260206004820152600f60248201526e189a590e9d1bdbc81b1bddc8189a59608a1b6044820152606401610867565b6099544210610a325760405162461bcd60e51b8152602060048201526011602482015270189a590e985d58dd1a5bdb88195b991959607a1b6044820152606401610867565b61038442609954610a4391906130fe565b11610a625761038460996000828254610a5c91906130c7565b90915550505b609d54609c54610a7b916001600160a01b0316906120c2565b34609c819055609d80546001600160a01b03191633908117909155604051918252907fe684a55f31b79eca403df938249029212a5925ec6be8012e099b45bc1019e5d29060200160405180910390a250565b6000610ada8484846121c4565b6001600160a01b038416600090815260346020908152604080832033845290915290205482811015610b5f5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610867565b610b6c8533858403611f9e565b506001949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf99190613115565b6001600160a01b0316336001600160a01b0316146108705760405162461bcd60e51b815260206004820152600c60248201526b35b4b1b59d3737ba1033b7bb60a11b6044820152606401610867565b609e546001600160a01b03163314610c725760405162461bcd60e51b81526004016108679061306c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0b335e36040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf69190613098565b8110158015610d8857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630e519ef96040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d849190613098565b8111155b610dd45760405162461bcd60e51b815260206004820152601d60248201527f7570646174653a696e76616c69642061756374696f6e206c656e6774680000006044820152606401610867565b609a8190556040518181527f4ab86ae701798277aa378943b9dfd155d3b19703cd57be298908fadd32f7bf46906020015b60405180910390a150565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091610834918590610e479086906130c7565b611f9e565b600054610100900460ff1680610e65575060005460ff16155b610e815760405162461bcd60e51b815260040161086790613132565b600054610100900460ff16158015610ea3576000805461ffff19166101011790555b610ead83836123a9565b610eb5612428565b609780546001600160a01b038a81166001600160a01b03199283161790925560988990556203f480609a55609e8054928c169290911682179055609f8590554260a055609d805460ff60a01b19169055600090815260a360205260409020859055610f20898761249c565b8015610f32576000805461ff00191690555b505050505050505050565b6000609d54600160a01b900460ff166003811115610f5d57610f5d612fbb565b14610f7a5760405162461bcd60e51b815260040161086790613180565b33600090815260a36020526040902054808203610fd05760405162461bcd60e51b81526020600482015260146024820152737570646174653a6e6f7420616e2075706461746560601b6044820152606401610867565b3360009081526033602052604081205460a2549091036110015760a2819055610ff983826130df565b609b556114e4565b60a2548114801561101157508115155b1561102057610ff983826130df565b8160000361125b57600060a254609b5461103a91906131c7565b905060006103e87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166309990a966040518163ffffffff1660e01b81526004016020604051808303816000875af11580156110a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c59190613098565b6110cf90846130df565b6110d991906131c7565b90508085101561112b5760405162461bcd60e51b815260206004820152601c60248201527f7570646174653a7265736572766520707269636520746f6f206c6f77000000006044820152606401610867565b60006103e87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635410bfc96040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b49190613098565b6111be90856130df565b6111c891906131c7565b90508086111561121a5760405162461bcd60e51b815260206004820152601d60248201527f7570646174653a7265736572766520707269636520746f6f20686967680000006044820152606401610867565b8360a2600082825461122c91906130c7565b9091555061123c905086856130df565b609b600082825461124d91906130c7565b909155506114e49350505050565b826000036112a1578060a2600082825461127591906130fe565b90915550611285905082826130df565b609b600082825461129691906130fe565b909155506114e49050565b60008160a2546112b191906130fe565b6112bb83856130df565b609b546112c891906130fe565b6112d291906131c7565b905060006103e87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166309990a966040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611339573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135d9190613098565b61136790846130df565b61137191906131c7565b9050808510156113c35760405162461bcd60e51b815260206004820152601c60248201527f7570646174653a7265736572766520707269636520746f6f206c6f77000000006044820152606401610867565b60006103e87f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635410bfc96040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144c9190613098565b61145690856130df565b61146091906131c7565b9050808611156114b25760405162461bcd60e51b815260206004820152601d60248201527f7570646174653a7265736572766520707269636520746f6f20686967680000006044820152606401610867565b6114bc85856130df565b6114c687866130df565b609b546114d391906130c7565b6114dd91906130fe565b609b555050505b33600081815260a3602052604090819020859055517f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c906115289086815260200190565b60405180910390a2505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b79190613115565b6001600160a01b0316336001600160a01b0316146116085760405162461bcd60e51b815260206004820152600e60248201526d3932b6b7bb329d3737ba1033b7bb60911b6044820152606401610867565b6000609d54600160a01b900460ff16600381111561162857611628612fbb565b146116455760405162461bcd60e51b815260040161086790613180565b6001600160a01b038116600090815260a36020526040812054908190036116a55760405162461bcd60e51b81526020600482015260146024820152737570646174653a6e6f7420616e2075706461746560601b6044820152606401610867565b6001600160a01b03821660009081526033602052604081205490508060a260008282546116d291906130fe565b909155506116e2905082826130df565b609b60008282546116f391906130fe565b90915550506001600160a01b038316600081815260a360209081526040808320839055519182527f64e6e7bd72b853c4e62fd6ceaca05a104700c70a4cb567c75c7f2242ba7f037c9101611528565b609e546001600160a01b0316331461176c5760405162461bcd60e51b81526004016108679061306c565b609f5481106117b25760405162461bcd60e51b81526020600482015260126024820152717570646174653a63616e277420726169736560701b6044820152606401610867565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638a364bc16040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118369190613098565b8111156118915760405162461bcd60e51b8152602060048201526024808201527f7570646174653a63616e6e6f7420696e637265617365206665652074686973206044820152630d0d2ced60e31b6064820152608401610867565b61189961258f565b609f8190556040518181527f2d1dae59a9e9ec0bc2ab19d45b7d10c8c55304fa08b40a7998e9f67f03223d0490602001610e05565b6060603780546107a490613032565b6002609d54600160a01b900460ff1660038111156118fd576118fd612fbb565b1461194a5760405162461bcd60e51b815260206004820152601960248201527f636173683a7661756c74206e6f7420636c6f73656420796574000000000000006044820152606401610867565b33600090815260336020526040902054806119a75760405162461bcd60e51b815260206004820152601a60248201527f636173683a6e6f20746f6b656e7320746f2063617368206f75740000000000006044820152606401610867565b60006119b260355490565b6119bc47846130df565b6119c691906131c7565b90506119d23383612869565b6119dc33826120c2565b60405181815233907f730831a1e4aa2d187ddd8e03d7beeac760a3927da5f112d645e0f8df7494b3679060200160405180910390a25050565b3360009081526034602090815260408083206001600160a01b038616845290915281205482811015611a975760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610867565b611aa43385858403611f9e565b5060019392505050565b60006108343384846121c4565b6000609d54600160a01b900460ff166003811115611adb57611adb612fbb565b14611b1e5760405162461bcd60e51b815260206004820152601360248201527272656465656d3a6e6f2072656465656d696e6760681b6044820152606401610867565b611b3033611b2b60355490565b612869565b6097546098546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015611b8657600080fd5b505af1158015611b9a573d6000803e3d6000fd5b5050609d805460ff60a01b1916600360a01b179055505060405133907fd1b5ea7fe0f1c2fa09d49c2aa9b2200664ba57a734f1d95481d95b7f99af991c90600090a2565b6000609d54600160a01b900460ff166003811115611bfe57611bfe612fbb565b14611c4b5760405162461bcd60e51b815260206004820152601760248201527f73746172743a6e6f2061756374696f6e207374617274730000000000000000006044820152606401610867565b611c53611df7565b341015611c965760405162461bcd60e51b81526020600482015260116024820152701cdd185c9d0e9d1bdbc81b1bddc8189a59607a1b6044820152606401610867565b6035547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166332977c736040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1d9190613098565b611d2791906130df565b60a254611d36906103e86130df565b1015611d845760405162461bcd60e51b815260206004820152601760248201527f73746172743a6e6f7420656e6f75676820766f746572730000000000000000006044820152606401610867565b609a54611d9190426130c7565b609955609d805434609c8190556001600160a81b031990911633908117600160a01b179092556040519081527fcfb9c5312b25ec7b809d61e638df25f749eae5d5c25399e1c93d1d319bfd5821906020015b60405180910390a2565b611df561258f565b565b600060a254600014611e185760a254609b54611e1391906131c7565b905090565b50600090565b6001609d54600160a01b900460ff166003811115611e3e57611e3e612fbb565b14611e8b5760405162461bcd60e51b815260206004820152601c60248201527f656e643a7661756c742068617320616c726561647920636c6f736564000000006044820152606401610867565b609954421015611ed05760405162461bcd60e51b815260206004820152601060248201526f656e643a61756374696f6e206c69766560801b6044820152606401610867565b611ed861258f565b609754609d546098546040516323b872dd60e01b81523060048201526001600160a01b03928316602482015260448101919091529116906323b872dd90606401600060405180830381600087803b158015611f3257600080fd5b505af1158015611f46573d6000803e3d6000fd5b5050609d8054600160a11b60ff60a01b19821617909155609c546040519081526001600160a01b0390911692507f8b01f9dd0400d6a1e84369a5fb8f6033934856ffa8ebadd707dca302ab5516959150602001611de3565b6001600160a01b0383166120005760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610867565b6001600160a01b0382166120615760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610867565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6120cc82826129ca565b6121c05773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561211f57600080fd5b505af1158015612133573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b03861660048201526024810185905273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2935063a9059cbb925060440190506020604051808303816000875af115801561219a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121be91906131e9565b505b5050565b6001600160a01b0383166122285760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610867565b6001600160a01b03821661228a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610867565b612295838383612a2d565b6001600160a01b0383166000908152603360205260409020548181101561230d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610867565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906123449084906130c7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161239091815260200190565b60405180910390a36123a38484846121be565b50505050565b600054610100900460ff16806123c2575060005460ff16155b6123de5760405162461bcd60e51b815260040161086790613132565b600054610100900460ff16158015612400576000805461ffff19166101011790555b612408612b33565b6124128383612b9d565b80156121be576000805461ff0019169055505050565b600054610100900460ff1680612441575060005460ff16155b61245d5760405162461bcd60e51b815260040161086790613132565b600054610100900460ff1615801561247f576000805461ffff19166101011790555b612487612b33565b8015612499576000805461ff00191690555b50565b6001600160a01b0382166124f25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610867565b6124fe60008383612a2d565b806035600082825461251091906130c7565b90915550506001600160a01b0382166000908152603360205260408120805483929061253d9084906130c7565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36121c0600083836121be565b6002609d54600160a01b900460ff1660038111156125af576125af612fbb565b0361260a5760405162461bcd60e51b815260206004820152602560248201527f636c61696d3a63616e6e6f7420636c61696d2061667465722061756374696f6e60448201526420656e647360d81b6064820152608401610867565b60006103e861261860355490565b609f5461262591906130df565b61262f91906131c7565b905060006126416301e13380836131c7565b9050600060a0544261265391906130fe565b9050600061266183836130df565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b3f006746040518163ffffffff1660e01b81526004016020604051808303816000875af11580156126c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126e99190613115565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630ea90a126040518163ffffffff1660e01b81526004016020604051808303816000875af115801561274d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127719190613098565b90506103e861277f60355490565b61278990836130df565b61279391906131c7565b95506127a36301e13380876131c7565b945060006127b186866130df565b4260a055609e549091506001600160a01b03161561281357609e546127df906001600160a01b03168561249c565b6040518481527f62b10e3ff3d45b5ff546e740b893897facb1680285f989a64ae932d62c5388e19060200160405180910390a15b6001600160a01b038316156128605761282c838261249c565b6040518181527f62b10e3ff3d45b5ff546e740b893897facb1680285f989a64ae932d62c5388e19060200160405180910390a15b50505050505050565b6001600160a01b0382166128c95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610867565b6128d582600083612a2d565b6001600160a01b038216600090815260336020526040902054818110156129495760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610867565b6001600160a01b03831660009081526033602052604081208383039055603580548492906129789084906130fe565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36121be836000846121be565b600080836001600160a01b03168361753090604051600060405180830381858888f193505050503d8060008114612a1d576040519150601f19603f3d011682016040523d82523d6000602084013e612a22565b606091505b509095945050505050565b6000609d54600160a01b900460ff166003811115612a4d57612a4d612fbb565b036121be576001600160a01b03808416600090815260a36020526040808220549285168252902054808214612b2c5780600003612ac2578260a26000828254612a9691906130fe565b90915550612aa6905082846130df565b609b6000828254612ab791906130fe565b90915550612b2c9050565b81600003612afd578260a26000828254612adc91906130c7565b90915550612aec905081846130df565b609b6000828254612ab791906130c7565b612b0782846130df565b612b1182856130df565b609b54612b1e91906130c7565b612b2891906130fe565b609b555b5050505050565b600054610100900460ff1680612b4c575060005460ff16155b612b685760405162461bcd60e51b815260040161086790613132565b600054610100900460ff16158015612487576000805461ffff19166101011790558015612499576000805461ff001916905550565b600054610100900460ff1680612bb6575060005460ff16155b612bd25760405162461bcd60e51b815260040161086790613132565b600054610100900460ff16158015612bf4576000805461ffff19166101011790555b8251612c07906036906020860190612c32565b508151612c1b906037906020850190612c32565b5080156121be576000805461ff0019169055505050565b828054612c3e90613032565b90600052602060002090601f016020900481019282612c605760008555612ca6565b82601f10612c7957805160ff1916838001178555612ca6565b82800160010185558215612ca6579182015b82811115612ca6578251825591602001919060010190612c8b565b50612cb2929150612cb6565b5090565b5b80821115612cb25760008155600101612cb7565b600060208083528351808285015260005b81811015612cf857858101830151858201604001528201612cdc565b81811115612d0a576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461249957600080fd5b60008060408385031215612d4857600080fd5b8235612d5381612d20565b946020939093013593505050565b600060208284031215612d7357600080fd5b8135612d7e81612d20565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612db657612db6612d85565b604051601f8501601f19908116603f01168101908282118183101715612dde57612dde612d85565b81604052809350858152868686011115612df757600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215612e2757600080fd5b8435612e3281612d20565b93506020850135612e4281612d20565b925060408501359150606085013567ffffffffffffffff811115612e6557600080fd5b8501601f81018713612e7657600080fd5b612e8587823560208401612d9b565b91505092959194509250565b600080600060608486031215612ea657600080fd5b8335612eb181612d20565b92506020840135612ec181612d20565b929592945050506040919091013590565b600060208284031215612ee457600080fd5b5035919050565b600082601f830112612efc57600080fd5b612d7e83833560208501612d9b565b600080600080600080600080610100898b031215612f2857600080fd5b8835612f3381612d20565b97506020890135612f4381612d20565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff80821115612f7c57600080fd5b612f888c838d01612eeb565b935060e08b0135915080821115612f9e57600080fd5b50612fab8b828c01612eeb565b9150509295985092959890939650565b634e487b7160e01b600052602160045260246000fd5b6020810160048310612ff357634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561300c57600080fd5b823561301781612d20565b9150602083013561302781612d20565b809150509250929050565b600181811c9082168061304657607f821691505b60208210810361306657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601290820152713ab83230ba329d3737ba1031bab930ba37b960711b604082015260600190565b6000602082840312156130aa57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156130da576130da6130b1565b500190565b60008160001904831182151516156130f9576130f96130b1565b500290565b600082821015613110576131106130b1565b500390565b60006020828403121561312757600080fd5b8151612d7e81612d20565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526027908201527f7570646174653a61756374696f6e206c6976652063616e6e6f742075706461746040820152666520707269636560c81b606082015260800190565b6000826131e457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156131fb57600080fd5b81518015158114612d7e57600080fdfea2646970667358221220d79fdcfbec5366b8da582aadc2b988fd40c33dbce44e048f7fb657089b398ebf64736f6c634300080d0033",
  "deployedSourceMap": "322:15433:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2437:98:16;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4534:166;;;;;;;;;;-1:-1:-1;4534:166:16;;;;;:::i;:::-;;:::i;:::-;;;1237:14:28;;1230:22;1212:41;;1200:2;1185:18;4534:166:16;1072:187:28;5585:148:1;;;;;;;;;;-1:-1:-1;5585:148:1;;;;;:::i;:::-;;:::i;:::-;;794:200:20;;;;;;;;;;-1:-1:-1;794:200:20;;;;;:::i;:::-;-1:-1:-1;;;794:200:20;;;;;;;;;;-1:-1:-1;;;;;;3245:33:28;;;3227:52;;3215:2;3200:18;794:200:20;3083:202:28;3525:106:16;;;;;;;;;;-1:-1:-1;3612:12:16;;3525:106;;;3436:25:28;;;3424:2;3409:18;3525:106:16;3290:177:28;12313:664:1;;;:::i;5167:478:16:-;;;;;;;;;;-1:-1:-1;5167:478:16;;;;;:::i;:::-;;:::i;1174:25:1:-;;;;;;;;;;;;;;;;4614:158;;;;;;;;;;-1:-1:-1;4614:158:1;;;;;:::i;:::-;;:::i;5840:355::-;;;;;;;;;;-1:-1:-1;5840:355:1;;;;;:::i;:::-;;:::i;3374:91:16:-;;;;;;;;;;-1:-1:-1;3374:91:16;;3456:2;4260:36:28;;4248:2;4233:18;3374:91:16;4118:184:28;1245:28:1;;;;;;;;;;;;;;;;6040:212:16;;;;;;;;;;-1:-1:-1;6040:212:16;;;;;:::i;:::-;;:::i;587:73:1:-;;;;;;;;;;;;618:42;587:73;;;;;-1:-1:-1;;;;;4471:32:28;;;4453:51;;4441:2;4426:18;587:73:1;4307:203:28;2220:23:1;;;;;;;;;;-1:-1:-1;2220:23:1;;;;;;;;3516:612;;;;;;;;;;-1:-1:-1;3516:612:1;;;;;:::i;:::-;;:::i;8318:1997::-;;;;;;;;;;-1:-1:-1;8318:1997:1;;;;;:::i;:::-;;:::i;1423:24::-;;;;;;;;;;;;;;;;3689:125:16;;;;;;;;;;-1:-1:-1;3689:125:16;;;;;:::i;:::-;-1:-1:-1;;;;;3789:18:16;3763:7;3789:18;;;:9;:18;;;;;;;3689:125;1324:27:1;;;;;;;;;;;;;;;;1602:25;;;;;;;;;;-1:-1:-1;1602:25:1;;;;-1:-1:-1;;;1602:25:1;;;;;;;;;;;;;:::i;4840:506::-;;;;;;;;;;-1:-1:-1;4840:506:1;;;;;:::i;:::-;;:::i;1513:30::-;;;;;;;;;;-1:-1:-1;1513:30:1;;;;-1:-1:-1;;;;;1513:30:1;;;6287:344;;;;;;;;;;-1:-1:-1;6287:344:1;;;;;:::i;:::-;;:::i;2648:102:16:-;;;;;;;;;;;;;:::i;13992:401:1:-;;;;;;;;;;;;;:::i;2343:27::-;;;;;;;;;;;;;;;;6739:405:16;;;;;;;;;;-1:-1:-1;6739:405:16;;;;;:::i;:::-;;:::i;4017:172::-;;;;;;;;;;-1:-1:-1;4017:172:16;;;;;:::i;:::-;;:::i;2125:26:1:-;;;;;;;;;;;;;;;;946:17;;;;;;;;;;;;;;;;13540:346;;;;;;;;;;;;;:::i;11680:521::-;;;:::i;2441:45::-;;;;;;;;;;-1:-1:-1;2441:45:1;;;;;:::i;:::-;;;;;;;;;;;;;;6716:59;;;;;;;;;;;;;:::i;4258:128::-;;;;;;;;;;;;;:::i;4247:149:16:-;;;;;;;;;;-1:-1:-1;4247:149:16;;;;;:::i;:::-;-1:-1:-1;;;;;4362:18:16;;;4336:7;4362:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4247:149;2041:18:1;;;;;;;;;;;;;;;;1830:33;;;;;;;;;;;;;;;1930:22;;;;;;;;;;-1:-1:-1;1930:22:1;;;;-1:-1:-1;;;;;1930:22:1;;;13066:378;;;;;;;;;;;;;:::i;862:20::-;;;;;;;;;;-1:-1:-1;862:20:1;;;;-1:-1:-1;;;;;862:20:1;;;2437:98:16;2491:13;2523:5;2516:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2437:98;:::o;4534:166::-;4617:4;4633:39;901:10:21;4656:7:16;4665:6;4633:8;:39::i;:::-;-1:-1:-1;4689:4:16;4534:166;;;;:::o;5585:148:1:-;5667:7;;-1:-1:-1;;;;;5667:7:1;5653:10;:21;5645:52;;;;-1:-1:-1;;;5645:52:1;;;;;;;:::i;:::-;;;;;;;;;5708:7;:18;;-1:-1:-1;;;;;;5708:18:1;-1:-1:-1;;;;;5708:18:1;;;;;;;;;;5585:148::o;12313:664::-;12379:10;12363:12;;-1:-1:-1;;;12363:12:1;;;;:26;;;;;;;;:::i;:::-;;12355:62;;;;-1:-1:-1;;;12355:62:1;;7866:2:28;12355:62:1;;;7848:21:28;7905:2;7885:18;;;7878:30;7944:25;7924:18;;;7917:53;7987:18;;12355:62:1;7664:347:28;12355:62:1;12427:16;12456:8;-1:-1:-1;;;;;12446:34:1;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;12485:4;12446:43;:::i;:::-;12427:62;;12539:8;12527:9;;:20;;;;:::i;:::-;12507:16;:9;12519:4;12507:16;:::i;:::-;:40;;12499:68;;;;-1:-1:-1;;;12499:68:1;;8845:2:28;12499:68:1;;;8827:21:28;8884:2;8864:18;;;8857:30;-1:-1:-1;;;8903:18:28;;;8896:45;8958:18;;12499:68:1;8643:339:28;12499:68:1;12603:10;;12585:15;:28;12577:58;;;;-1:-1:-1;;;12577:58:1;;9189:2:28;12577:58:1;;;9171:21:28;9228:2;9208:18;;;9201:30;-1:-1:-1;;;9247:18:28;;;9240:47;9304:18;;12577:58:1;8987:341:28;12577:58:1;12752:10;12733:15;12720:10;;:28;;;;:::i;:::-;:42;12716:97;;12792:10;12778;;:24;;;;;;;:::i;:::-;;;;-1:-1:-1;;12716:97:1;12838:7;;12847:9;;12823:34;;-1:-1:-1;;;;;12838:7:1;;12823:14;:34::i;:::-;12880:9;12868;:21;;;12899:7;:29;;-1:-1:-1;;;;;;12899:29:1;12917:10;12899:29;;;;;;12944:26;;3436:25:28;;;12917:10:1;12944:26;;3424:2:28;3409:18;12944:26:1;;;;;;;12345:632;12313:664::o;5167:478:16:-;5303:4;5319:36;5329:6;5337:9;5348:6;5319:9;:36::i;:::-;-1:-1:-1;;;;;5393:19:16;;5366:24;5393:19;;;:11;:19;;;;;;;;901:10:21;5393:33:16;;;;;;;;5444:26;;;;5436:79;;;;-1:-1:-1;;;5436:79:16;;9665:2:28;5436:79:16;;;9647:21:28;9704:2;9684:18;;;9677:30;9743:34;9723:18;;;9716:62;-1:-1:-1;;;9794:18:28;;;9787:38;9842:19;;5436:79:16;9463:404:28;5436:79:16;5549:57;5558:6;901:10:21;5599:6:16;5580:16;:25;5549:8;:57::i;:::-;-1:-1:-1;5634:4:16;;5167:478;-1:-1:-1;;;;5167:478:16:o;4614:158:1:-;4702:8;-1:-1:-1;;;;;4694:23:1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4680:39:1;:10;-1:-1:-1;;;;;4680:39:1;;4672:64;;;;-1:-1:-1;;;4672:64:1;;10330:2:28;4672:64:1;;;10312:21:28;10369:2;10349:18;;;10342:30;-1:-1:-1;;;10388:18:28;;;10381:42;10440:18;;4672:64:1;10128:336:28;5840:355:1;5927:7;;-1:-1:-1;;;;;5927:7:1;5913:10;:21;5905:52;;;;-1:-1:-1;;;5905:52:1;;;;;;;:::i;:::-;5996:8;-1:-1:-1;;;;;5986:36:1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5975:7;:49;;:102;;;;;6049:8;-1:-1:-1;;;;;6039:36:1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6028:7;:49;;5975:102;5967:144;;;;-1:-1:-1;;;5967:144:1;;10671:2:28;5967:144:1;;;10653:21:28;10710:2;10690:18;;;10683:30;10749:31;10729:18;;;10722:59;10798:18;;5967:144:1;10469:353:28;5967:144:1;6122:13;:23;;;6160:28;;3436:25:28;;;6160:28:1;;3424:2:28;3409:18;6160:28:1;;;;;;;;5840:355;:::o;6040:212:16:-;901:10:21;6128:4:16;6176:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6176:34:16;;;;;;;;;;6128:4;;6144:80;;6167:7;;6176:47;;6213:10;;6176:47;:::i;:::-;6144:8;:80::i;3516:612:1:-;1409:13:15;;;;;;;;:30;;-1:-1:-1;1427:12:15;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:15;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:15;;;;;1547:98;3751:28:1::1;3764:5;3771:7;3751:12;:28::i;:::-;3789:21;:19;:21::i;:::-;3853:5;:14:::0;;-1:-1:-1;;;;;3853:14:1;;::::1;-1:-1:-1::0;;;;;;3853:14:1;;::::1;;::::0;;;3877:2:::1;:8:::0;;;3911:6:::1;3895:13;:22:::0;3927:7:::1;:18:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;3955:3:::1;:10:::0;;;3989:15:::1;3975:11;:29:::0;4014:12:::1;:29:::0;;-1:-1:-1;;;;4014:29:1::1;::::0;;-1:-1:-1;4053:20:1;;;:10:::1;:20;::::0;;;;:33;;;4097:24:::1;3927:18:::0;4113:7;4097:5:::1;:24::i;:::-;1671:14:15::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:15;;;1667:66;1391:348;3516:612:1;;;;;;;;:::o;8318:1997::-;8400:14;8384:12;;-1:-1:-1;;;8384:12:1;;;;:30;;;;;;;;:::i;:::-;;8376:82;;;;-1:-1:-1;;;8376:82:1;;;;;;;:::i;:::-;8493:10;8468:11;8482:22;;;:10;:22;;;;;;8522:11;;;8514:44;;;;-1:-1:-1;;;8514:44:1;;11852:2:28;8514:44:1;;;11834:21:28;11891:2;11871:18;;;11864:30;-1:-1:-1;;;11910:18:28;;;11903:50;11970:18;;8514:44:1;11650:344:28;8514:44:1;8595:10;8568:14;3789:18:16;;;:9;:18;;;;;;8621:12:1;;3789:18:16;;8621:17:1;8617:1607;;8654:12;:21;;;8704:13;8713:4;8669:6;8704:13;:::i;:::-;8689:12;:28;8617:1607;;;8796:12;;8786:6;:22;:34;;;;-1:-1:-1;8812:8:1;;;8786:34;8782:1442;;;8851:13;8860:4;8851:6;:13;:::i;8782:1442::-;8936:3;8943:1;8936:8;8932:1292;;8960:22;9000:12;;8985;;:27;;;;:::i;:::-;8960:52;;9027:23;9111:4;9080:8;-1:-1:-1;;;;;9070:36:1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9053:55;;:14;:55;:::i;:::-;:62;;;;:::i;:::-;9027:88;;9145:15;9137:4;:23;;9129:64;;;;-1:-1:-1;;;9129:64:1;;12423:2:28;9129:64:1;;;12405:21:28;12462:2;12442:18;;;12435:30;12501;12481:18;;;12474:58;12549:18;;9129:64:1;12221:352:28;9129:64:1;9207:23;9291:4;9260:8;-1:-1:-1;;;;;9250:36:1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9233:55;;:14;:55;:::i;:::-;:62;;;;:::i;:::-;9207:88;;9325:15;9317:4;:23;;9309:65;;;;-1:-1:-1;;;9309:65:1;;12780:2:28;9309:65:1;;;12762:21:28;12819:2;12799:18;;;12792:30;12858:31;12838:18;;;12831:59;12907:18;;9309:65:1;12578:353:28;9309:65:1;9405:6;9389:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;9441:13:1;;-1:-1:-1;9450:4:1;9441:6;:13;:::i;:::-;9425:12;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;8932:1292:1;;-1:-1:-1;;;;8932:1292:1;;9523:4;9531:1;9523:9;9519:705;;9564:6;9548:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;9600:12:1;;-1:-1:-1;9609:3:1;9600:6;:12;:::i;:::-;9584;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;9519:705:1;;-1:-1:-1;9519:705:1;;9692:22;9767:6;9752:12;;:21;;;;:::i;:::-;9734:12;9740:6;9734:3;:12;:::i;:::-;9718;;:29;;;;:::i;:::-;9717:57;;;;:::i;:::-;9692:82;;9789:23;9873:4;9842:8;-1:-1:-1;;;;;9832:36:1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9815:55;;:14;:55;:::i;:::-;:62;;;;:::i;:::-;9789:88;;9907:15;9899:4;:23;;9891:64;;;;-1:-1:-1;;;9891:64:1;;12423:2:28;9891:64:1;;;12405:21:28;12462:2;12442:18;;;12435:30;12501;12481:18;;;12474:58;12549:18;;9891:64:1;12221:352:28;9891:64:1;9969:23;10053:4;10022:8;-1:-1:-1;;;;;10012:36:1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9995:55;;:14;:55;:::i;:::-;:62;;;;:::i;:::-;9969:88;;10087:15;10079:4;:23;;10071:65;;;;-1:-1:-1;;;10071:65:1;;12780:2:28;10071:65:1;;;12762:21:28;12819:2;12799:18;;;12792:30;12858:31;12838:18;;;12831:59;12907:18;;10071:65:1;12578:353:28;10071:65:1;10200:12;10209:3;10200:6;:12;:::i;:::-;10182:13;10191:4;10182:6;:13;:::i;:::-;10166:12;;:30;;;;:::i;:::-;:47;;;;:::i;:::-;10151:12;:62;-1:-1:-1;;;9519:705:1;10245:10;10234:22;;;;:10;:22;;;;;;;:29;;;10279;;;;;10259:4;3436:25:28;;3424:2;3409:18;;3290:177;10279:29:1;;;;;;;;8366:1949;;8318:1997;:::o;4840:506::-;4927:8;-1:-1:-1;;;;;4919:23:1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4905:39:1;:10;-1:-1:-1;;;;;4905:39:1;;4897:66;;;;-1:-1:-1;;;4897:66:1;;13138:2:28;4897:66:1;;;13120:21:28;13177:2;13157:18;;;13150:30;-1:-1:-1;;;13196:18:28;;;13189:44;13250:18;;4897:66:1;12936:338:28;4897:66:1;4997:14;4981:12;;-1:-1:-1;;;4981:12:1;;;;:30;;;;;;;;:::i;:::-;;4973:82;;;;-1:-1:-1;;;4973:82:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;5080:17:1;;5066:11;5080:17;;;:10;:17;;;;;;;5115:8;;;5107:41;;;;-1:-1:-1;;;5107:41:1;;11852:2:28;5107:41:1;;;11834:21:28;11891:2;11871:18;;;11864:30;-1:-1:-1;;;11910:18:28;;;11903:50;11970:18;;5107:41:1;11650:344:28;5107:41:1;-1:-1:-1;;;;;3789:18:16;;5158:14:1;3789:18:16;;;:9;:18;;;;;;5158:33:1;;5218:6;5202:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;5250:12:1;;-1:-1:-1;5259:3:1;5250:6;:12;:::i;:::-;5234;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;5281:17:1;;5301:1;5281:17;;;:10;:17;;;;;;;;:21;;;5318;3436:25:28;;;5318:21:1;;3409:18:28;5318:21:1;3290:177:28;6287:344:1;6361:7;;-1:-1:-1;;;;;6361:7:1;6347:10;:21;6339:52;;;;-1:-1:-1;;;6339:52:1;;;;;;;:::i;:::-;6416:3;;6409:4;:10;6401:41;;;;-1:-1:-1;;;6401:41:1;;13671:2:28;6401:41:1;;;13653:21:28;13710:2;13690:18;;;13683:30;-1:-1:-1;;;13729:18:28;;;13722:48;13787:18;;6401:41:1;13469:342:28;6401:41:1;6478:8;-1:-1:-1;;;;;6468:33:1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6460:4;:43;;6452:92;;;;-1:-1:-1;;;6452:92:1;;14018:2:28;6452:92:1;;;14000:21:28;14057:2;14037:18;;;14030:30;14096:34;14076:18;;;14069:62;-1:-1:-1;;;14147:18:28;;;14140:34;14191:19;;6452:92:1;13816:400:28;6452:92:1;6555:12;:10;:12::i;:::-;6578:3;:10;;;6603:21;;3436:25:28;;;6603:21:1;;3424:2:28;3409:18;6603:21:1;3290:177:28;2648:102:16;2704:13;2736:7;2729:14;;;;;:::i;13992:401:1:-;14051:11;14035:12;;-1:-1:-1;;;14035:12:1;;;;:27;;;;;;;;:::i;:::-;;14027:65;;;;-1:-1:-1;;;14027:65:1;;14423:2:28;14027:65:1;;;14405:21:28;14462:2;14442:18;;;14435:30;14501:27;14481:18;;;14474:55;14546:18;;14027:65:1;14221:349:28;14027:65:1;14126:10;14102:11;3789:18:16;;;:9;:18;;;;;;14155:7:1;14147:46;;;;-1:-1:-1;;;14147:46:1;;14777:2:28;14147:46:1;;;14759:21:28;14816:2;14796:18;;;14789:30;14855:28;14835:18;;;14828:56;14901:18;;14147:46:1;14575:350:28;14147:46:1;14203:13;14249;3612:12:16;;;3525:106;14249:13:1;14219:27;14225:21;14219:3;:27;:::i;:::-;:43;;;;:::i;:::-;14203:59;;14272:22;14278:10;14290:3;14272:5;:22::i;:::-;14305:42;14328:10;14341:5;14305:14;:42::i;:::-;14363:23;;3436:25:28;;;14368:10:1;;14363:23;;3424:2:28;3409:18;14363:23:1;;;;;;;14017:376;;13992:401::o;6739:405:16:-;901:10:21;6832:4:16;6875:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6875:34:16;;;;;;;;;;6927:35;;;;6919:85;;;;-1:-1:-1;;;6919:85:16;;15132:2:28;6919:85:16;;;15114:21:28;15171:2;15151:18;;;15144:30;15210:34;15190:18;;;15183:62;-1:-1:-1;;;15261:18:28;;;15254:35;15306:19;;6919:85:16;14930:401:28;6919:85:16;7038:67;901:10:21;7061:7:16;7089:15;7070:16;:34;7038:8;:67::i;:::-;-1:-1:-1;7133:4:16;;6739:405;-1:-1:-1;;;6739:405:16:o;4017:172::-;4103:4;4119:42;901:10:21;4143:9:16;4154:6;4119:9;:42::i;13540:346:1:-;13601:14;13585:12;;-1:-1:-1;;;13585:12:1;;;;:30;;;;;;;;:::i;:::-;;13577:62;;;;-1:-1:-1;;;13577:62:1;;15538:2:28;13577:62:1;;;15520:21:28;15577:2;15557:18;;;15550:30;-1:-1:-1;;;15596:18:28;;;15589:49;15655:18;;13577:62:1;15336:343:28;13577:62:1;13649:32;13655:10;13667:13;3612:12:16;;;3525:106;13667:13:1;13649:5;:32::i;:::-;13747:5;;13794:2;;13739:58;;-1:-1:-1;;;13739:58:1;;13775:4;13739:58;;;15924:34:28;13782:10:1;15974:18:28;;;15967:43;16026:18;;;16019:34;;;;-1:-1:-1;;;;;13747:5:1;;;;13739:27;;15859:18:28;;13739:58:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13816:12:1;:29;;-1:-1:-1;;;;13816:29:1;-1:-1:-1;;;13816:29:1;;;-1:-1:-1;;13861:18:1;;13868:10;;13861:18;;-1:-1:-1;;13861:18:1;13540:346::o;11680:521::-;11748:14;11732:12;;-1:-1:-1;;;11732:12:1;;;;:30;;;;;;;;:::i;:::-;;11724:66;;;;-1:-1:-1;;;11724:66:1;;16266:2:28;11724:66:1;;;16248:21:28;16305:2;16285:18;;;16278:30;16344:25;16324:18;;;16317:53;16387:18;;11724:66:1;16064:347:28;11724:66:1;11821:14;:12;:14::i;:::-;11808:9;:27;;11800:57;;;;-1:-1:-1;;;11800:57:1;;16618:2:28;11800:57:1;;;16600:21:28;16657:2;16637:18;;;16630:30;-1:-1:-1;;;16676:18:28;;;16669:47;16733:18;;11800:57:1;16416:341:28;11800:57:1;3612:12:16;;11908:8:1;-1:-1:-1;;;;;11898:37:1;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;;;:::i;:::-;11875:12;;:19;;11890:4;11875:19;:::i;:::-;:78;;11867:114;;;;-1:-1:-1;;;11867:114:1;;16964:2:28;11867:114:1;;;16946:21:28;17003:2;16983:18;;;16976:30;17042:25;17022:18;;;17015:53;17085:18;;11867:114:1;16762:347:28;11867:114:1;12031:13;;12013:31;;:15;:31;:::i;:::-;12000:10;:44;12054:12;:25;;12102:9;12090;:21;;;-1:-1:-1;;;;;;12121:29:1;;;12139:10;12121:29;;;-1:-1:-1;;;12121:29:1;;;;12166:28;;3436:25:28;;;12166:28:1;;3424:2:28;3409:18;12166:28:1;;;;;;;;11680:521::o;6716:59::-;6756:12;:10;:12::i;:::-;6716:59::o;4258:128::-;4302:7;4328:12;;4344:1;4328:17;:51;;4367:12;;4352;;:27;;;;:::i;:::-;4321:58;;4258:128;:::o;4328:51::-;-1:-1:-1;4348:1:1;;4258:128::o;13066:378::-;13124:10;13108:12;;-1:-1:-1;;;13108:12:1;;;;:26;;;;;;;;:::i;:::-;;13100:67;;;;-1:-1:-1;;;13100:67:1;;17316:2:28;13100:67:1;;;17298:21:28;17355:2;17335:18;;;17328:30;17394;17374:18;;;17367:58;17442:18;;13100:67:1;17114:352:28;13100:67:1;13204:10;;13185:15;:29;;13177:58;;;;-1:-1:-1;;;13177:58:1;;17673:2:28;13177:58:1;;;17655:21:28;17712:2;17692:18;;;17685:30;-1:-1:-1;;;17731:18:28;;;17724:46;17787:18;;13177:58:1;17471:340:28;13177:58:1;13246:12;:10;:12::i;:::-;13314:5;;13349:7;;13358:2;;13306:55;;-1:-1:-1;;;13306:55:1;;13342:4;13306:55;;;15924:34:28;-1:-1:-1;;;;;13349:7:1;;;15974:18:28;;;15967:43;16026:18;;;16019:34;;;;13314:5:1;;;13306:27;;15859:18:28;;13306:55:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13372:12:1;:26;;-1:-1:-1;;;;;;;13372:26:1;;;;;;13427:9;;13414:23;;3436:25:28;;;-1:-1:-1;;;;;13418:7:1;;;;-1:-1:-1;13414:23:1;;-1:-1:-1;3424:2:28;3409:18;13414:23:1;3290:177:28;10315:370:16;-1:-1:-1;;;;;10446:19:16;;10438:68;;;;-1:-1:-1;;;10438:68:16;;18406:2:28;10438:68:16;;;18388:21:28;18445:2;18425:18;;;18418:30;18484:34;18464:18;;;18457:62;-1:-1:-1;;;18535:18:28;;;18528:34;18579:19;;10438:68:16;18204:400:28;10438:68:16;-1:-1:-1;;;;;10524:21:16;;10516:68;;;;-1:-1:-1;;;10516:68:16;;18811:2:28;10516:68:16;;;18793:21:28;18850:2;18830:18;;;18823:30;18889:34;18869:18;;;18862:62;-1:-1:-1;;;18940:18:28;;;18933:32;18982:19;;10516:68:16;18609:398:28;10516:68:16;-1:-1:-1;;;;;10595:18:16;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10646:32;;3436:25:28;;;10646:32:16;;3409:18:28;10646:32:16;;;;;;;10315:370;;;:::o;14480:541:1:-;14610:30;14630:2;14634:5;14610:19;:30::i;:::-;14605:410;;618:42;-1:-1:-1;;;;;14863:19:1;;14890:5;14863:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14912:31:1;;-1:-1:-1;;;14912:31:1;;-1:-1:-1;;;;;19204:32:28;;14912:31:1;;;19186:51:28;19253:18;;;19246:34;;;618:42:1;;-1:-1:-1;14912:20:1;;-1:-1:-1;19159:18:28;;;-1:-1:-1;14912:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14605:410;14480:541;;:::o;7618:713:16:-;-1:-1:-1;;;;;7753:20:16;;7745:70;;;;-1:-1:-1;;;7745:70:16;;19775:2:28;7745:70:16;;;19757:21:28;19814:2;19794:18;;;19787:30;19853:34;19833:18;;;19826:62;-1:-1:-1;;;19904:18:28;;;19897:35;19949:19;;7745:70:16;19573:401:28;7745:70:16;-1:-1:-1;;;;;7833:23:16;;7825:71;;;;-1:-1:-1;;;7825:71:16;;20181:2:28;7825:71:16;;;20163:21:28;20220:2;20200:18;;;20193:30;20259:34;20239:18;;;20232:62;-1:-1:-1;;;20310:18:28;;;20303:33;20353:19;;7825:71:16;19979:399:28;7825:71:16;7907:47;7928:6;7936:9;7947:6;7907:20;:47::i;:::-;-1:-1:-1;;;;;7989:17:16;;7965:21;7989:17;;;:9;:17;;;;;;8024:23;;;;8016:74;;;;-1:-1:-1;;;8016:74:16;;20585:2:28;8016:74:16;;;20567:21:28;20624:2;20604:18;;;20597:30;20663:34;20643:18;;;20636:62;-1:-1:-1;;;20714:18:28;;;20707:36;20760:19;;8016:74:16;20383:402:28;8016:74:16;-1:-1:-1;;;;;8124:17:16;;;;;;;:9;:17;;;;;;8144:22;;;8124:42;;8186:20;;;;;;;;:30;;8160:6;;8124:17;8186:30;;8160:6;;8186:30;:::i;:::-;;;;;;;;8249:9;-1:-1:-1;;;;;8232:35:16;8241:6;-1:-1:-1;;;;;8232:35:16;;8260:6;8232:35;;;;3436:25:28;;3424:2;3409:18;;3290:177;8232:35:16;;;;;;;;8278:46;8298:6;8306:9;8317:6;8278:19;:46::i;:::-;7735:596;7618:713;;;:::o;2034:178::-;1409:13:15;;;;;;;;:30;;-1:-1:-1;1427:12:15;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:15;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:15;;;;;1547:98;2131:26:16::1;:24;:26::i;:::-;2167:38;2190:5;2197:7;2167:22;:38::i;:::-;1671:14:15::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:15;;;1391:348;2034:178:16;;:::o;472:100:20:-;1409:13:15;;;;;;;;:30;;-1:-1:-1;1427:12:15;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:15;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:15;;;;;1547:98;534:31:20::1;:29;:31::i;:::-;1671:14:15::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:15;;;1667:66;1391:348;472:100:20:o;8607:389:16:-;-1:-1:-1;;;;;8690:21:16;;8682:65;;;;-1:-1:-1;;;8682:65:16;;20992:2:28;8682:65:16;;;20974:21:28;21031:2;21011:18;;;21004:30;21070:33;21050:18;;;21043:61;21121:18;;8682:65:16;20790:355:28;8682:65:16;8758:49;8787:1;8791:7;8800:6;8758:20;:49::i;:::-;8834:6;8818:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8850:18:16;;;;;;:9;:18;;;;;:28;;8872:6;;8850:18;:28;;8872:6;;8850:28;:::i;:::-;;;;-1:-1:-1;;8893:37:16;;3436:25:28;;;-1:-1:-1;;;;;8893:37:16;;;8910:1;;8893:37;;3424:2:28;3409:18;8893:37:16;;;;;;;8941:48;8969:1;8973:7;8982:6;8941:19;:48::i;6837:1228:1:-;6902:11;6886:12;;-1:-1:-1;;;6886:12:1;;;;:27;;;;;;;;:::i;:::-;;6878:77;;;;-1:-1:-1;;;6878:77:1;;21352:2:28;6878:77:1;;;21334:21:28;21391:2;21371:18;;;21364:30;21430:34;21410:18;;;21403:62;-1:-1:-1;;;21481:18:28;;;21474:35;21526:19;;6878:77:1;21150:401:28;6878:77:1;7031:24;7080:4;7064:13;3612:12:16;;;3525:106;7064:13:1;7058:3;;:19;;;;:::i;:::-;:26;;;;:::i;:::-;7031:53;-1:-1:-1;7139:20:1;7162:27;7181:8;7031:53;7162:27;:::i;:::-;7139:50;;7258:22;7301:11;;7283:15;:29;;;;:::i;:::-;7258:54;-1:-1:-1;7366:19:1;7388:29;7405:12;7258:54;7388:29;:::i;:::-;7366:51;;7475:18;7506:8;-1:-1:-1;;;;;7496:31:1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7475:54;;7539:14;7566:8;-1:-1:-1;;;;;7556:33:1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7539:52;;7645:4;7629:13;3612:12:16;;;3525:106;7629:13:1;7620:22;;:6;:22;:::i;:::-;:29;;;;:::i;:::-;7601:48;-1:-1:-1;7675:27:1;7694:8;7601:48;7675:27;:::i;:::-;7660:42;-1:-1:-1;7712:15:1;7730:29;7660:42;7730:14;:29;:::i;:::-;7784:15;7770:11;:29;7814:7;;7712:47;;-1:-1:-1;;;;;;7814:7:1;:21;7810:121;;7857:7;;7851:27;;-1:-1:-1;;;;;7857:7:1;7866:11;7851:5;:27::i;:::-;7897:23;;3436:25:28;;;7897:23:1;;3424:2:28;3409:18;7897:23:1;;;;;;;7810:121;-1:-1:-1;;;;;7944:24:1;;;7940:119;;7984:26;7990:10;8002:7;7984:5;:26::i;:::-;8029:19;;3436:25:28;;;8029:19:1;;3424:2:28;3409:18;8029:19:1;;;;;;;7940:119;6868:1197;;;;;;;6837:1228::o;9316:576:16:-;-1:-1:-1;;;;;9399:21:16;;9391:67;;;;-1:-1:-1;;;9391:67:16;;22022:2:28;9391:67:16;;;22004:21:28;22061:2;22041:18;;;22034:30;22100:34;22080:18;;;22073:62;-1:-1:-1;;;22151:18:28;;;22144:31;22192:19;;9391:67:16;21820:397:28;9391:67:16;9469:49;9490:7;9507:1;9511:6;9469:20;:49::i;:::-;-1:-1:-1;;;;;9554:18:16;;9529:22;9554:18;;;:9;:18;;;;;;9590:24;;;;9582:71;;;;-1:-1:-1;;;9582:71:16;;22424:2:28;9582:71:16;;;22406:21:28;22463:2;22443:18;;;22436:30;22502:34;22482:18;;;22475:62;-1:-1:-1;;;22553:18:28;;;22546:32;22595:19;;9582:71:16;22222:398:28;9582:71:16;-1:-1:-1;;;;;9687:18:16;;;;;;:9;:18;;;;;9708:23;;;9687:44;;9751:12;:22;;9725:6;;9687:18;9751:22;;9725:6;;9751:22;:::i;:::-;;;;-1:-1:-1;;9789:37:16;;3436:25:28;;;9815:1:16;;-1:-1:-1;;;;;9789:37:16;;;;;3424:2:28;3409:18;9789:37:16;;;;;;;9837:48;9857:7;9874:1;9878:6;9837:19;:48::i;15340:412:1:-;15430:4;15666:12;15684:2;-1:-1:-1;;;;;15684:7:1;15699:5;15711;15684:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15665:56:1;;15340:412;-1:-1:-1;;;;;15340:412:1:o;10552:1055::-;10683:14;10667:12;;-1:-1:-1;;;10667:12:1;;;;:30;;;;;;;;:::i;:::-;;10663:938;;-1:-1:-1;;;;;10733:17:1;;;10713;10733;;;:10;:17;;;;;;;10782:15;;;;;;;;10887:20;;;10883:708;;10976:7;10987:1;10976:12;10972:605;;11109:7;11093:12;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;11154:19:1;;-1:-1:-1;11164:9:1;11154:7;:19;:::i;:::-;11138:12;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;10972:605:1;;-1:-1:-1;10972:605:1;;11263:9;11276:1;11263:14;11259:318;;11317:7;11301:12;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;11362:17:1;;-1:-1:-1;11372:7:1;11362;:17;:::i;:::-;11346:12;;:33;;;;;;;:::i;11259:318::-;11538:19;11548:9;11538:7;:19;:::i;:::-;11516:17;11526:7;11516;:17;:::i;:::-;11500:12;;:34;;;;:::i;:::-;:58;;;;:::i;:::-;11485:12;:73;11259:318;10699:902;;10552:1055;;;:::o;753:64:21:-;1409:13:15;;;;;;;;:30;;-1:-1:-1;1427:12:15;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:15;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:15;;;;;1667:66;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:15;;;1391:348;753:64:21:o;2218:154:16:-;1409:13:15;;;;;;;;:30;;-1:-1:-1;1427:12:15;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:15;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:15;;;;;1547:98;2325:13:16;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2348:17:16;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1671:14:15::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:15;;;1391:348;2218:154:16;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:597:28;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:28;574:15;-1:-1:-1;;570:29:28;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:28:o;616:131::-;-1:-1:-1;;;;;691:31:28;;681:42;;671:70;;737:1;734;727:12;752:315;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;936:9;923:23;955:31;980:5;955:31;:::i;:::-;1005:5;1057:2;1042:18;;;;1029:32;;-1:-1:-1;;;752:315:28:o;1264:247::-;1323:6;1376:2;1364:9;1355:7;1351:23;1347:32;1344:52;;;1392:1;1389;1382:12;1344:52;1431:9;1418:23;1450:31;1475:5;1450:31;:::i;:::-;1500:5;1264:247;-1:-1:-1;;;1264:247:28:o;1516:127::-;1577:10;1572:3;1568:20;1565:1;1558:31;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1648:631;1712:5;1742:18;1783:2;1775:6;1772:14;1769:40;;;1789:18;;:::i;:::-;1864:2;1858:9;1832:2;1918:15;;-1:-1:-1;;1914:24:28;;;1940:2;1910:33;1906:42;1894:55;;;1964:18;;;1984:22;;;1961:46;1958:72;;;2010:18;;:::i;:::-;2050:10;2046:2;2039:22;2079:6;2070:15;;2109:6;2101;2094:22;2149:3;2140:6;2135:3;2131:16;2128:25;2125:45;;;2166:1;2163;2156:12;2125:45;2216:6;2211:3;2204:4;2196:6;2192:17;2179:44;2271:1;2264:4;2255:6;2247;2243:19;2239:30;2232:41;;;;1648:631;;;;;:::o;2284:794::-;2379:6;2387;2395;2403;2456:3;2444:9;2435:7;2431:23;2427:33;2424:53;;;2473:1;2470;2463:12;2424:53;2512:9;2499:23;2531:31;2556:5;2531:31;:::i;:::-;2581:5;-1:-1:-1;2638:2:28;2623:18;;2610:32;2651:33;2610:32;2651:33;:::i;:::-;2703:7;-1:-1:-1;2757:2:28;2742:18;;2729:32;;-1:-1:-1;2812:2:28;2797:18;;2784:32;2839:18;2828:30;;2825:50;;;2871:1;2868;2861:12;2825:50;2894:22;;2947:4;2939:13;;2935:27;-1:-1:-1;2925:55:28;;2976:1;2973;2966:12;2925:55;2999:73;3064:7;3059:2;3046:16;3041:2;3037;3033:11;2999:73;:::i;:::-;2989:83;;;2284:794;;;;;;;:::o;3472:456::-;3549:6;3557;3565;3618:2;3606:9;3597:7;3593:23;3589:32;3586:52;;;3634:1;3631;3624:12;3586:52;3673:9;3660:23;3692:31;3717:5;3692:31;:::i;:::-;3742:5;-1:-1:-1;3799:2:28;3784:18;;3771:32;3812:33;3771:32;3812:33;:::i;:::-;3472:456;;3864:7;;-1:-1:-1;;;3918:2:28;3903:18;;;;3890:32;;3472:456::o;3933:180::-;3992:6;4045:2;4033:9;4024:7;4020:23;4016:32;4013:52;;;4061:1;4058;4051:12;4013:52;-1:-1:-1;4084:23:28;;3933:180;-1:-1:-1;3933:180:28:o;4515:221::-;4558:5;4611:3;4604:4;4596:6;4592:17;4588:27;4578:55;;4629:1;4626;4619:12;4578:55;4651:79;4726:3;4717:6;4704:20;4697:4;4689:6;4685:17;4651:79;:::i;4741:1096::-;4883:6;4891;4899;4907;4915;4923;4931;4939;4992:3;4980:9;4971:7;4967:23;4963:33;4960:53;;;5009:1;5006;4999:12;4960:53;5048:9;5035:23;5067:31;5092:5;5067:31;:::i;:::-;5117:5;-1:-1:-1;5174:2:28;5159:18;;5146:32;5187:33;5146:32;5187:33;:::i;:::-;5239:7;-1:-1:-1;5293:2:28;5278:18;;5265:32;;-1:-1:-1;5344:2:28;5329:18;;5316:32;;-1:-1:-1;5395:3:28;5380:19;;5367:33;;-1:-1:-1;5447:3:28;5432:19;;5419:33;;-1:-1:-1;5503:3:28;5488:19;;5475:33;5527:18;5557:14;;;5554:34;;;5584:1;5581;5574:12;5554:34;5607:50;5649:7;5640:6;5629:9;5625:22;5607:50;:::i;:::-;5597:60;;5710:3;5699:9;5695:19;5682:33;5666:49;;5740:2;5730:8;5727:16;5724:36;;;5756:1;5753;5746:12;5724:36;;5779:52;5823:7;5812:8;5801:9;5797:24;5779:52;:::i;:::-;5769:62;;;4741:1096;;;;;;;;;;;:::o;5842:127::-;5903:10;5898:3;5894:20;5891:1;5884:31;5934:4;5931:1;5924:15;5958:4;5955:1;5948:15;5974:336;6114:2;6099:18;;6147:1;6136:13;;6126:144;;6192:10;6187:3;6183:20;6180:1;6173:31;6227:4;6224:1;6217:15;6255:4;6252:1;6245:15;6126:144;6279:25;;;5974:336;:::o;6539:388::-;6607:6;6615;6668:2;6656:9;6647:7;6643:23;6639:32;6636:52;;;6684:1;6681;6674:12;6636:52;6723:9;6710:23;6742:31;6767:5;6742:31;:::i;:::-;6792:5;-1:-1:-1;6849:2:28;6834:18;;6821:32;6862:33;6821:32;6862:33;:::i;:::-;6914:7;6904:17;;;6539:388;;;;;:::o;6932:380::-;7011:1;7007:12;;;;7054;;;7075:61;;7129:4;7121:6;7117:17;7107:27;;7075:61;7182:2;7174:6;7171:14;7151:18;7148:38;7145:161;;7228:10;7223:3;7219:20;7216:1;7209:31;7263:4;7260:1;7253:15;7291:4;7288:1;7281:15;7145:161;;6932:380;;;:::o;7317:342::-;7519:2;7501:21;;;7558:2;7538:18;;;7531:30;-1:-1:-1;;;7592:2:28;7577:18;;7570:48;7650:2;7635:18;;7317:342::o;8016:184::-;8086:6;8139:2;8127:9;8118:7;8114:23;8110:32;8107:52;;;8155:1;8152;8145:12;8107:52;-1:-1:-1;8178:16:28;;8016:184;-1:-1:-1;8016:184:28:o;8205:127::-;8266:10;8261:3;8257:20;8254:1;8247:31;8297:4;8294:1;8287:15;8321:4;8318:1;8311:15;8337:128;8377:3;8408:1;8404:6;8401:1;8398:13;8395:39;;;8414:18;;:::i;:::-;-1:-1:-1;8450:9:28;;8337:128::o;8470:168::-;8510:7;8576:1;8572;8568:6;8564:14;8561:1;8558:21;8553:1;8546:9;8539:17;8535:45;8532:71;;;8583:18;;:::i;:::-;-1:-1:-1;8623:9:28;;8470:168::o;9333:125::-;9373:4;9401:1;9398;9395:8;9392:34;;;9406:18;;:::i;:::-;-1:-1:-1;9443:9:28;;9333:125::o;9872:251::-;9942:6;9995:2;9983:9;9974:7;9970:23;9966:32;9963:52;;;10011:1;10008;10001:12;9963:52;10043:9;10037:16;10062:31;10087:5;10062:31;:::i;10827:410::-;11029:2;11011:21;;;11068:2;11048:18;;;11041:30;11107:34;11102:2;11087:18;;11080:62;-1:-1:-1;;;11173:2:28;11158:18;;11151:44;11227:3;11212:19;;10827:410::o;11242:403::-;11444:2;11426:21;;;11483:2;11463:18;;;11456:30;11522:34;11517:2;11502:18;;11495:62;-1:-1:-1;;;11588:2:28;11573:18;;11566:37;11635:3;11620:19;;11242:403::o;11999:217::-;12039:1;12065;12055:132;;12109:10;12104:3;12100:20;12097:1;12090:31;12144:4;12141:1;12134:15;12172:4;12169:1;12162:15;12055:132;-1:-1:-1;12201:9:28;;11999:217::o;19291:277::-;19358:6;19411:2;19399:9;19390:7;19386:23;19382:32;19379:52;;;19427:1;19424;19417:12;19379:52;19459:9;19453:16;19512:5;19505:13;19498:21;19491:5;19488:32;19478:60;;19534:1;19531;19524:12",
  "language": "Solidity",
  "natspec": {
    "events": {
      "Bid(address,uint256)": {
        "notice": "An event emitted when a bid is made"
      },
      "Cash(address,uint256)": {
        "notice": "An event emitted when someone cashes in ERC20 tokens for ETH from an ERC721 token sale"
      },
      "PriceUpdate(address,uint256)": {
        "notice": "An event emitted when a user updates their price"
      },
      "Redeem(address)": {
        "notice": "An event emitted when someone redeems all tokens for the NFT"
      },
      "Start(address,uint256)": {
        "notice": "An event emitted when an auction starts"
      },
      "Won(address,uint256)": {
        "notice": "An event emitted when an auction is won"
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "auctionEnd()": {
        "notice": "the unix timestamp end time of the token auction"
      },
      "auctionLength()": {
        "notice": "the length of auctions"
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "bid()": {
        "notice": "an external function to bid on purchasing the vaults NFT. The msg.value is the bid amount"
      },
      "cash()": {
        "notice": "an external function to burn ERC20 tokens to receive ETH from ERC721 token purchase"
      },
      "claimFees()": {
        "notice": "external function to claim fees for the curator and governance"
      },
      "curator()": {
        "notice": "the address who initially deposited the NFT"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "end()": {
        "notice": "an external function to end an auction after the timer has run out"
      },
      "fee()": {
        "notice": "the AUM fee paid to the curator yearly. 3 decimals. ie. 100 = 10%"
      },
      "id()": {
        "notice": "the ERC721 token ID of the vault's token"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "kickCurator(address)": {
        "notice": "allow governance to boot a bad actor curator",
        "params": {
          "_curator": "the new curator"
        }
      },
      "lastClaimed()": {
        "notice": "the last timestamp where fees were claimed"
      },
      "livePrice()": {
        "notice": "the current price of the token during an auction"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "redeem()": {
        "notice": "an external function to burn all ERC20 tokens to receive the ERC721 token"
      },
      "removeReserve(address)": {
        "notice": "allow governance to remove bad reserve prices"
      },
      "reservePrice()": {
        "notice": "-------------------------------- -------- VIEW FUNCTIONS -------- --------------------------------"
      },
      "reserveTotal()": {
        "notice": "reservePrice * votingTokens"
      },
      "settings()": {
        "notice": "the governance contract which gets paid in ETH"
      },
      "start()": {
        "notice": "kick off an auction. Must send reservePrice in ETH"
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "token()": {
        "notice": "the ERC721 token address of the vault's token"
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "updateAuctionLength(uint256)": {
        "notice": "allow curator to update the auction length",
        "params": {
          "_length": "the new base price"
        }
      },
      "updateCurator(address)": {
        "notice": "allow curator to update the curator address",
        "params": {
          "_curator": "the new curator"
        }
      },
      "updateFee(uint256)": {
        "notice": "allow the curator to change their fee",
        "params": {
          "_fee": "the new fee"
        }
      },
      "updateUserPrice(uint256)": {
        "notice": "a function for an end user to update their desired sale price",
        "params": {
          "_new": "the desired price in ETH"
        }
      },
      "userPrices(address)": {
        "notice": "a mapping of users to their desired token price"
      },
      "vaultClosed()": {
        "notice": "a boolean to indicate if the vault has closed"
      },
      "votingTokens()": {
        "notice": "the number of ownership tokens voting on the reserve price at any given time"
      },
      "weth()": {
        "notice": "weth address"
      },
      "winning()": {
        "notice": "the current user winning the token auction"
      }
    },
    "version": 1
  },
  "offset": [
    322,
    15755
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x251 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80436FE0 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xBE040FB0 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6B0 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0xE06174E4 EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xE66F53B7 EQ PUSH2 0x740 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x775 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBE040FB0 EQ PUSH2 0x63C JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xC91DE649 EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0xD294F093 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xDB2E1EED EQ PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A4E6D34 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x9A4E6D34 EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xADC1B956 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xAF640D0F EQ PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80436FE0 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x853A1B90 EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0x9012C4A8 EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x590 JUMPI DUP1 PUSH4 0x961BE391 EQ PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x626FB2F0 GT PUSH2 0x196 JUMPI DUP1 PUSH4 0x626FB2F0 EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x6A775714 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x6DA84E6C EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x7B5581ED EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x7FB45099 EQ PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x325C25A2 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x5C9920FC EQ PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1998AEEF GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x2A24F46C EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x2A44F120 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x2BF33BD9 EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xC6A62DD EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x317 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x2CCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x2D35 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x2D61 JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FE PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2E11 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x892 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E91 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x2D61 JUMP JUMPDEST PUSH2 0xB77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0xC48 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH1 0x9A SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x401 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D35 JUMP JUMPDEST PUSH2 0xE10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42E PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x278 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA1 SLOAD PUSH2 0x2A1 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x2F0B JUMP JUMPDEST PUSH2 0xE4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x49B CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0xF3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH1 0x9C SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x4D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH1 0x9B SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9D SLOAD PUSH2 0x523 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x2FD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x54B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D61 JUMP JUMPDEST PUSH2 0x1535 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9D SLOAD PUSH2 0x42E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x58B CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED2 JUMP JUMPDEST PUSH2 0x1742 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x18CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x18DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH1 0xA2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x5EB CALLDATASIZE PUSH1 0x4 PUSH2 0x2D35 JUMP JUMPDEST PUSH2 0x1A15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x60B CALLDATASIZE PUSH1 0x4 PUSH2 0x2D35 JUMP JUMPDEST PUSH2 0x1AAE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH1 0xA0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x1BDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x674 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x1DED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x1DF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0x6CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2FF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH1 0x9F SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42E PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9E SLOAD PUSH2 0x42E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH2 0x1E1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x97 SLOAD PUSH2 0x42E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x7A4 SWAP1 PUSH2 0x3032 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7D0 SWAP1 PUSH2 0x3032 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x81D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x800 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0x1F9E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x306C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9D SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8B2 JUMPI PUSH2 0x8B2 PUSH2 0x2FBB JUMP JUMPDEST EQ PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6269643A61756374696F6E206973206E6F74206C697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7C513C0F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x961 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH2 0x991 SWAP1 PUSH2 0x3E8 PUSH2 0x30C7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9C SLOAD PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x9AD CALLVALUE PUSH2 0x3E8 PUSH2 0x30DF JUMP JUMPDEST LT ISZERO PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x189A590E9D1BDBC81B1BDDC8189A59 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x99 SLOAD TIMESTAMP LT PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x189A590E985D58DD1A5BDB88195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0x384 TIMESTAMP PUSH1 0x99 SLOAD PUSH2 0xA43 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST GT PUSH2 0xA62 JUMPI PUSH2 0x384 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA5C SWAP2 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x9D SLOAD PUSH1 0x9C SLOAD PUSH2 0xA7B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x20C2 JUMP JUMPDEST CALLVALUE PUSH1 0x9C DUP2 SWAP1 SSTORE PUSH1 0x9D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE SWAP1 PUSH32 0xE684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP5 DUP5 DUP5 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0xB6C DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x1F9E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF9 SWAP2 SWAP1 PUSH2 0x3115 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x35B4B1B59D3737BA1033B7BB PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x306C JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA0B335E3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCF6 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xD88 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE519EF9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD60 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD84 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST DUP2 GT ISZERO JUMPDEST PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7570646174653A696E76616C69642061756374696F6E206C656E677468000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x9A DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x4AB86AE701798277AA378943B9DFD155D3B19703CD57BE298908FADD32F7BF46 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x834 SWAP2 DUP6 SWAP1 PUSH2 0xE47 SWAP1 DUP7 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE65 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x3132 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEAD DUP4 DUP4 PUSH2 0x23A9 JUMP JUMPDEST PUSH2 0xEB5 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x98 DUP10 SWAP1 SSTORE PUSH3 0x3F480 PUSH1 0x9A SSTORE PUSH1 0x9E DUP1 SLOAD SWAP3 DUP13 AND SWAP3 SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x9F DUP6 SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SSTORE PUSH1 0x9D DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE PUSH2 0xF20 DUP10 DUP8 PUSH2 0x249C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9D SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF5D JUMPI PUSH2 0xF5D PUSH2 0x2FBB JUMP JUMPDEST EQ PUSH2 0xF7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x3180 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 DUP3 SUB PUSH2 0xFD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x7570646174653A6E6F7420616E20757064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xA2 SLOAD SWAP1 SWAP2 SUB PUSH2 0x1001 JUMPI PUSH1 0xA2 DUP2 SWAP1 SSTORE PUSH2 0xFF9 DUP4 DUP3 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x9B SSTORE PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0xA2 SLOAD DUP2 EQ DUP1 ISZERO PUSH2 0x1011 JUMPI POP DUP2 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1020 JUMPI PUSH2 0xFF9 DUP4 DUP3 PUSH2 0x30DF JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x125B JUMPI PUSH1 0x0 PUSH1 0xA2 SLOAD PUSH1 0x9B SLOAD PUSH2 0x103A SWAP2 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9990A96 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C5 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH2 0x10CF SWAP1 DUP5 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 LT ISZERO PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7570646174653A7265736572766520707269636520746F6F206C6F7700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5410BFC9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1190 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B4 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH2 0x11BE SWAP1 DUP6 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x121A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7570646174653A7265736572766520707269636520746F6F2068696768000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST DUP4 PUSH1 0xA2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x122C SWAP2 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x123C SWAP1 POP DUP7 DUP6 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x9B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124D SWAP2 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x14E4 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0x12A1 JUMPI DUP1 PUSH1 0xA2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1285 SWAP1 POP DUP3 DUP3 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x9B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x14E4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA2 SLOAD PUSH2 0x12B1 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST PUSH2 0x12BB DUP4 DUP6 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST PUSH2 0x12D2 SWAP2 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9990A96 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1339 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135D SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH2 0x1367 SWAP1 DUP5 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x1371 SWAP2 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 LT ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7570646174653A7265736572766520707269636520746F6F206C6F7700000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5410BFC9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1428 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x144C SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH2 0x1456 SWAP1 DUP6 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x1460 SWAP2 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x14B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7570646174653A7265736572766520707269636520746F6F2068696768000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0x14BC DUP6 DUP6 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x14C6 DUP8 DUP7 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH2 0x14D3 SWAP2 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST PUSH2 0x14DD SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST PUSH1 0x9B SSTORE POP POP POP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD PUSH32 0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C SWAP1 PUSH2 0x1528 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1593 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B7 SWAP2 SWAP1 PUSH2 0x3115 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x3932B6B7BB329D3737BA1033B7BB PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9D SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1628 JUMPI PUSH2 0x1628 PUSH2 0x2FBB JUMP JUMPDEST EQ PUSH2 0x1645 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x3180 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x16A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x7570646174653A6E6F7420616E20757064617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0xA2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16D2 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x16E2 SWAP1 POP DUP3 DUP3 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x9B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16F3 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C SWAP2 ADD PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x176C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x306C JUMP JUMPDEST PUSH1 0x9F SLOAD DUP2 LT PUSH2 0x17B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x7570646174653A63616E2774207261697365 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8A364BC1 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1812 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1836 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x7570646174653A63616E6E6F7420696E63726561736520666565207468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0xD0D2CED PUSH1 0xE3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0x1899 PUSH2 0x258F JUMP JUMPDEST PUSH1 0x9F DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x2D1DAE59A9E9EC0BC2AB19D45B7D10C8C55304FA08B40A7998E9F67F03223D04 SWAP1 PUSH1 0x20 ADD PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x7A4 SWAP1 PUSH2 0x3032 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9D SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18FD JUMPI PUSH2 0x18FD PUSH2 0x2FBB JUMP JUMPDEST EQ PUSH2 0x194A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636173683A7661756C74206E6F7420636C6F7365642079657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x19A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636173683A6E6F20746F6B656E7320746F2063617368206F7574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B2 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19BC SELFBALANCE DUP5 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x19C6 SWAP2 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x19D2 CALLER DUP4 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x19DC CALLER DUP3 PUSH2 0x20C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x730831A1E4AA2D187DDD8E03D7BEEAC760A3927DA5F112D645E0F8DF7494B367 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x1A97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0x1AA4 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x1F9E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x834 CALLER DUP5 DUP5 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9D SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1ADB JUMPI PUSH2 0x1ADB PUSH2 0x2FBB JUMP JUMPDEST EQ PUSH2 0x1B1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x72656465656D3A6E6F2072656465656D696E67 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0x1B30 CALLER PUSH2 0x1B2B PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x9D DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x3 PUSH1 0xA0 SHL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xD1B5EA7FE0F1C2FA09D49C2AA9B2200664BA57A734F1D95481D95B7F99AF991C SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9D SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1BFE JUMPI PUSH2 0x1BFE PUSH2 0x2FBB JUMP JUMPDEST EQ PUSH2 0x1C4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172743A6E6F2061756374696F6E20737461727473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0x1C53 PUSH2 0x1DF7 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x1C96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1CDD185C9D0E9D1BDBC81B1BDDC8189A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x32977C73 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D1D SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST PUSH2 0x1D27 SWAP2 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0xA2 SLOAD PUSH2 0x1D36 SWAP1 PUSH2 0x3E8 PUSH2 0x30DF JUMP JUMPDEST LT ISZERO PUSH2 0x1D84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172743A6E6F7420656E6F75676820766F74657273000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH2 0x1D91 SWAP1 TIMESTAMP PUSH2 0x30C7 JUMP JUMPDEST PUSH1 0x99 SSTORE PUSH1 0x9D DUP1 SLOAD CALLVALUE PUSH1 0x9C DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND CALLER SWAP1 DUP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xCFB9C5312B25EC7B809D61E638DF25F749EAE5D5C25399E1C93D1D319BFD5821 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1DF5 PUSH2 0x258F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA2 SLOAD PUSH1 0x0 EQ PUSH2 0x1E18 JUMPI PUSH1 0xA2 SLOAD PUSH1 0x9B SLOAD PUSH2 0x1E13 SWAP2 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9D SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E3E JUMPI PUSH2 0x1E3E PUSH2 0x2FBB JUMP JUMPDEST EQ PUSH2 0x1E8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x656E643A7661756C742068617320616C726561647920636C6F73656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x99 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x656E643A61756374696F6E206C697665 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0x1ED8 PUSH2 0x258F JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x9D SLOAD PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F46 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x9D DUP1 SLOAD PUSH1 0x1 PUSH1 0xA1 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9C SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH32 0x8B01F9DD0400D6A1E84369A5FB8F6033934856FFA8EBADD707DCA302AB551695 SWAP2 POP PUSH1 0x20 ADD PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2000 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2061 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x20CC DUP3 DUP3 PUSH2 0x29CA JUMP JUMPDEST PUSH2 0x21C0 JUMPI PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x211F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2133 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 SWAP4 POP PUSH4 0xA9059CBB SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x219A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21BE SWAP2 SWAP1 PUSH2 0x31E9 JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2228 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x228A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0x2295 DUP4 DUP4 DUP4 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x230D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2344 SWAP1 DUP5 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2390 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x23A3 DUP5 DUP5 DUP5 PUSH2 0x21BE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x23C2 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x23DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x3132 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2400 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2408 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x2412 DUP4 DUP4 PUSH2 0x2B9D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21BE JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2441 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x245D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x3132 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x247F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2487 PUSH2 0x2B33 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2499 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x24F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0x24FE PUSH1 0x0 DUP4 DUP4 PUSH2 0x2A2D JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2510 SWAP2 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x253D SWAP1 DUP5 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x21C0 PUSH1 0x0 DUP4 DUP4 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x9D SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25AF JUMPI PUSH2 0x25AF PUSH2 0x2FBB JUMP JUMPDEST SUB PUSH2 0x260A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636C61696D3A63616E6E6F7420636C61696D2061667465722061756374696F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x20656E6473 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x2618 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH2 0x2625 SWAP2 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x262F SWAP2 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2641 PUSH4 0x1E13380 DUP4 PUSH2 0x31C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA0 SLOAD TIMESTAMP PUSH2 0x2653 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2661 DUP4 DUP4 PUSH2 0x30DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB3F00674 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26E9 SWAP2 SWAP1 PUSH2 0x3115 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xEA90A12 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x274D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2771 SWAP2 SWAP1 PUSH2 0x3098 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 PUSH2 0x277F PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2789 SWAP1 DUP4 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x2793 SWAP2 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST SWAP6 POP PUSH2 0x27A3 PUSH4 0x1E13380 DUP8 PUSH2 0x31C7 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 PUSH2 0x27B1 DUP7 DUP7 PUSH2 0x30DF JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 SSTORE PUSH1 0x9E SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2813 JUMPI PUSH1 0x9E SLOAD PUSH2 0x27DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x249C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH32 0x62B10E3FF3D45B5FF546E740B893897FACB1680285F989A64AE932D62C5388E1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x2860 JUMPI PUSH2 0x282C DUP4 DUP3 PUSH2 0x249C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x62B10E3FF3D45B5FF546E740B893897FACB1680285F989A64AE932D62C5388E1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x28C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH2 0x28D5 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2949 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x867 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2978 SWAP1 DUP5 SWAP1 PUSH2 0x30FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x21BE DUP4 PUSH1 0x0 DUP5 PUSH2 0x21BE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x7530 SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2A1D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2A22 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9D SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2A4D JUMPI PUSH2 0x2A4D PUSH2 0x2FBB JUMP JUMPDEST SUB PUSH2 0x21BE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP6 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP1 DUP3 EQ PUSH2 0x2B2C JUMPI DUP1 PUSH1 0x0 SUB PUSH2 0x2AC2 JUMPI DUP3 PUSH1 0xA2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2A96 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2AA6 SWAP1 POP DUP3 DUP5 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x9B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2AB7 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2B2C SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x2AFD JUMPI DUP3 PUSH1 0xA2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2ADC SWAP2 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2AEC SWAP1 POP DUP2 DUP5 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x9B PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2AB7 SWAP2 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST PUSH2 0x2B07 DUP3 DUP5 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0x2B11 DUP3 DUP6 PUSH2 0x30DF JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH2 0x2B1E SWAP2 SWAP1 PUSH2 0x30C7 JUMP JUMPDEST PUSH2 0x2B28 SWAP2 SWAP1 PUSH2 0x30FE JUMP JUMPDEST PUSH1 0x9B SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2B4C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2B68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x3132 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2487 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2499 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2BB6 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2BD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x3132 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2BF4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST DUP3 MLOAD PUSH2 0x2C07 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x2C32 JUMP JUMPDEST POP DUP2 MLOAD PUSH2 0x2C1B SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x2C32 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x21BE JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2C3E SWAP1 PUSH2 0x3032 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2C60 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2CA6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2C79 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2CA6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2CA6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2CA6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2C8B JUMP JUMPDEST POP PUSH2 0x2CB2 SWAP3 SWAP2 POP PUSH2 0x2CB6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2CB2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2CB7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CF8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x2CDC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2D0A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2D53 DUP2 PUSH2 0x2D20 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D7E DUP2 PUSH2 0x2D20 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2DB6 JUMPI PUSH2 0x2DB6 PUSH2 0x2D85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2DDE JUMPI PUSH2 0x2DDE PUSH2 0x2D85 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2DF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2E32 DUP2 PUSH2 0x2D20 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2E42 DUP2 PUSH2 0x2D20 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E85 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2D9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2EB1 DUP2 PUSH2 0x2D20 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2EC1 DUP2 PUSH2 0x2D20 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D7E DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2D9B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2F28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x2F33 DUP2 PUSH2 0x2D20 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x2F43 DUP2 PUSH2 0x2D20 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F88 DUP13 DUP4 DUP14 ADD PUSH2 0x2EEB JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FAB DUP12 DUP3 DUP13 ADD PUSH2 0x2EEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0x2FF3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x300C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3017 DUP2 PUSH2 0x2D20 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3027 DUP2 PUSH2 0x2D20 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3046 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3066 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x3AB83230BA329D3737BA1031BAB930BA37B9 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x30DA JUMPI PUSH2 0x30DA PUSH2 0x30B1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x30F9 JUMPI PUSH2 0x30F9 PUSH2 0x30B1 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3110 JUMPI PUSH2 0x3110 PUSH2 0x30B1 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2D7E DUP2 PUSH2 0x2D20 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x7570646174653A61756374696F6E206C6976652063616E6E6F74207570646174 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x65207072696365 PUSH1 0xC8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x31E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2D7E JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SWAP16 0xDC 0xFB 0xEC MSTORE8 PUSH7 0xB8DA582AADC2B9 DUP9 REVERT BLOCKHASH 0xC3 RETURNDATASIZE 0xBC 0xE4 0x4E DIV DUP16 PUSH32 0xB657089B398EBF64736F6C634300080D00330000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x251"
    },
    "12": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x80436FE0"
    },
    "25": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "GT",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x139"
    },
    "29": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBE040FB0"
    },
    "36": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "GT",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6"
    },
    "40": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "47": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "GT",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "58": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B0"
    },
    "62": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDDCA3F43"
    },
    "69": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F6"
    },
    "73": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE06174E4"
    },
    "80": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70C"
    },
    "84": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "86": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE66F53B7"
    },
    "91": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "92": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x740"
    },
    "95": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "96": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "97": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEFBE1C1C"
    },
    "102": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x760"
    },
    "106": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "107": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "108": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFC0C546A"
    },
    "113": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x775"
    },
    "117": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "118": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "REVERT",
      "path": "1"
    },
    "122": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "123": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "124": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBE040FB0"
    },
    "129": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "130": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x63C"
    },
    "133": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "134": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBE9A6555"
    },
    "140": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x651"
    },
    "144": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "145": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "146": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC91DE649"
    },
    "151": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x659"
    },
    "155": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "156": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "157": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD294F093"
    },
    "162": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x686"
    },
    "166": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "167": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "168": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDB2E1EED"
    },
    "173": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x69B"
    },
    "177": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "178": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "REVERT",
      "path": "1"
    },
    "182": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "183": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "184": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9A4E6D34"
    },
    "189": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "GT",
      "path": "1"
    },
    "190": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFD"
    },
    "193": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "194": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "195": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9A4E6D34"
    },
    "200": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "201": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5BA"
    },
    "204": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "205": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "206": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA457C2D7"
    },
    "211": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "212": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D0"
    },
    "215": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "216": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "217": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "222": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "223": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F0"
    },
    "226": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "227": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "228": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xADC1B956"
    },
    "233": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "234": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x610"
    },
    "237": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "238": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "239": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xAF640D0F"
    },
    "244": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "245": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x626"
    },
    "248": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "249": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "252": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "REVERT",
      "path": "1"
    },
    "253": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "254": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "255": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x80436FE0"
    },
    "260": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "261": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x530"
    },
    "264": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "265": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "266": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x853A1B90"
    },
    "271": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "272": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x550"
    },
    "275": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "276": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "277": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9012C4A8"
    },
    "282": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "283": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x570"
    },
    "286": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "287": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "288": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "293": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "294": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x590"
    },
    "297": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "298": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "299": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x961BE391"
    },
    "304": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "305": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A5"
    },
    "308": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "309": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "311": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "312": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "REVERT",
      "path": "1"
    },
    "313": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "314": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "315": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "320": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "GT",
      "path": "1"
    },
    "321": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D2"
    },
    "324": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "325": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "326": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x626FB2F0"
    },
    "331": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "GT",
      "path": "1"
    },
    "332": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x196"
    },
    "335": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "336": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "337": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x626FB2F0"
    },
    "342": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "343": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x460"
    },
    "346": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "347": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "348": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6A775714"
    },
    "353": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "354": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x480"
    },
    "357": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "358": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "359": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6DA84E6C"
    },
    "364": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "365": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A0"
    },
    "368": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "369": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "370": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "375": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "376": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B6"
    },
    "379": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "380": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "381": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7B5581ED"
    },
    "386": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "387": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4EC"
    },
    "390": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "391": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "392": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7FB45099"
    },
    "397": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "398": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x502"
    },
    "401": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "402": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "404": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "405": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "REVERT",
      "path": "1"
    },
    "406": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "407": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "408": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "413": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "414": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B4"
    },
    "417": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "418": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "419": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x325C25A2"
    },
    "424": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "425": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D0"
    },
    "428": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "429": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "430": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39509351"
    },
    "435": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "436": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E6"
    },
    "439": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "440": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "441": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3FC8CEF3"
    },
    "446": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "447": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x406"
    },
    "450": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "451": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "452": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5C9920FC"
    },
    "457": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "458": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x446"
    },
    "461": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "462": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "464": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "465": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "REVERT",
      "path": "1"
    },
    "466": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "467": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "468": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1998AEEF"
    },
    "473": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "GT",
      "path": "1"
    },
    "474": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x219"
    },
    "477": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "478": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "479": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1998AEEF"
    },
    "484": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "485": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x336"
    },
    "488": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "489": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "490": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "495": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "496": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33E"
    },
    "499": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "500": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "501": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2A24F46C"
    },
    "506": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "507": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35E"
    },
    "510": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "511": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "512": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2A44F120"
    },
    "517": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "518": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x374"
    },
    "521": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "522": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "523": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2BF33BD9"
    },
    "528": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "529": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x394"
    },
    "532": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "533": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "535": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "536": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "REVERT",
      "path": "1"
    },
    "537": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "538": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "539": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "544": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "545": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x256"
    },
    "548": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "549": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "550": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "555": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "556": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x281"
    },
    "559": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "560": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "561": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC6A62DD"
    },
    "566": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "567": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B1"
    },
    "570": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "571": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "572": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x150B7A02"
    },
    "577": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "578": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D3"
    },
    "581": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "582": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "583": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "588": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "EQ",
      "path": "1"
    },
    "589": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x317"
    },
    "592": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "593": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "594": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "596": {
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "DUP1",
      "path": "1"
    },
    "597": {
      "first_revert": true,
      "fn": null,
      "offset": [
        322,
        15755
      ],
      "op": "REVERT",
      "path": "1"
    },
    "598": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "599": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "600": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "DUP1",
      "path": "16"
    },
    "601": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "602": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x262"
    },
    "605": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "606": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "608": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "DUP1",
      "path": "16"
    },
    "609": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "REVERT",
      "path": "16"
    },
    "610": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "611": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "POP",
      "path": "16"
    },
    "612": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26B"
    },
    "615": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x795"
    },
    "618": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2437,
        2535
      ],
      "op": "JUMP",
      "path": "16"
    },
    "619": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "620": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "622": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "623": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x278"
    },
    "626": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "627": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "628": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2CCB"
    },
    "631": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2437,
        2535
      ],
      "op": "JUMP",
      "path": "16"
    },
    "632": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "633": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "635": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "636": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "DUP1",
      "path": "16"
    },
    "637": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "638": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "SUB",
      "path": "16"
    },
    "639": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "640": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "RETURN",
      "path": "16"
    },
    "641": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "642": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "643": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "DUP1",
      "path": "16"
    },
    "644": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "645": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x28D"
    },
    "648": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "649": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "651": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "DUP1",
      "path": "16"
    },
    "652": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "REVERT",
      "path": "16"
    },
    "653": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "654": {
      "op": "POP"
    },
    "655": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A1"
    },
    "658": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29C"
    },
    "661": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "662": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "664": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D35"
    },
    "667": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4534,
        4700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "668": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "669": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x827"
    },
    "672": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4534,
        4700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "673": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "674": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "676": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "677": {
      "op": "SWAP1"
    },
    "678": {
      "op": "ISZERO"
    },
    "679": {
      "op": "ISZERO"
    },
    "680": {
      "op": "DUP2"
    },
    "681": {
      "op": "MSTORE"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "684": {
      "op": "ADD"
    },
    "685": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x278"
    },
    "688": {
      "op": "JUMP"
    },
    "689": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "690": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "691": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "DUP1",
      "path": "1"
    },
    "692": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "693": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BD"
    },
    "696": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "697": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "699": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "DUP1",
      "path": "1"
    },
    "700": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "REVERT",
      "path": "1"
    },
    "701": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "702": {
      "op": "POP"
    },
    "703": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "706": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CC"
    },
    "709": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "710": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "712": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D61"
    },
    "715": {
      "fn": "TokenVault.updateCurator",
      "jump": "i",
      "offset": [
        5585,
        5733
      ],
      "op": "JUMP",
      "path": "1"
    },
    "716": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "717": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83D"
    },
    "720": {
      "fn": "TokenVault.updateCurator",
      "jump": "i",
      "offset": [
        5585,
        5733
      ],
      "op": "JUMP",
      "path": "1"
    },
    "721": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "722": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "STOP",
      "path": "1"
    },
    "723": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "724": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "725": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "DUP1",
      "path": "20"
    },
    "726": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "727": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2DF"
    },
    "730": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "731": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "733": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "DUP1",
      "path": "20"
    },
    "734": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "REVERT",
      "path": "20"
    },
    "735": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2FE"
    },
    "740": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2EE"
    },
    "743": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "744": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "746": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E11"
    },
    "749": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "jump": "i",
      "offset": [
        794,
        994
      ],
      "op": "JUMP",
      "path": "20"
    },
    "750": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "751": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "760": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "761": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "POP",
      "path": "20"
    },
    "762": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "POP",
      "path": "20"
    },
    "763": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "POP",
      "path": "20"
    },
    "764": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "POP",
      "path": "20"
    },
    "765": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "JUMP",
      "path": "20"
    },
    "766": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "767": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "769": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "776": {
      "op": "SHL"
    },
    "777": {
      "op": "SUB"
    },
    "778": {
      "op": "NOT"
    },
    "779": {
      "op": "SWAP1"
    },
    "780": {
      "op": "SWAP2"
    },
    "781": {
      "op": "AND"
    },
    "782": {
      "op": "DUP2"
    },
    "783": {
      "op": "MSTORE"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "786": {
      "op": "ADD"
    },
    "787": {
      "fn": "ERC721HolderUpgradeable.onERC721Received",
      "offset": [
        794,
        994
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x278"
    },
    "790": {
      "op": "JUMP"
    },
    "791": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "792": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "793": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "DUP1",
      "path": "16"
    },
    "794": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "795": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x323"
    },
    "798": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "799": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "DUP1",
      "path": "16"
    },
    "802": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "REVERT",
      "path": "16"
    },
    "803": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 0,
      "value": "0x35"
    },
    "807": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "808": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "809": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "812": {
      "op": "SWAP1"
    },
    "813": {
      "op": "DUP2"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "817": {
      "op": "ADD"
    },
    "818": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x278"
    },
    "821": {
      "op": "JUMP"
    },
    "822": {
      "fn": "TokenVault.bid",
      "offset": [
        12313,
        12977
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "823": {
      "fn": "TokenVault.bid",
      "offset": [
        12313,
        12977
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "826": {
      "fn": "TokenVault.bid",
      "offset": [
        12313,
        12977
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x892"
    },
    "829": {
      "fn": "TokenVault.bid",
      "jump": "i",
      "offset": [
        12313,
        12977
      ],
      "op": "JUMP",
      "path": "1"
    },
    "830": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "831": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "832": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "DUP1",
      "path": "16"
    },
    "833": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "834": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34A"
    },
    "837": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "838": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "840": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "DUP1",
      "path": "16"
    },
    "841": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "REVERT",
      "path": "16"
    },
    "842": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A1"
    },
    "847": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x359"
    },
    "850": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "851": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "853": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2E91"
    },
    "856": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5167,
        5645
      ],
      "op": "JUMP",
      "path": "16"
    },
    "857": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "858": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xACD"
    },
    "861": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5167,
        5645
      ],
      "op": "JUMP",
      "path": "16"
    },
    "862": {
      "offset": [
        1174,
        1199
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "863": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "864": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "DUP1",
      "path": "1"
    },
    "865": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "866": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36A"
    },
    "869": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "870": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "872": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "DUP1",
      "path": "1"
    },
    "873": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "REVERT",
      "path": "1"
    },
    "874": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "875": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "POP",
      "path": "1"
    },
    "876": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "879": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x99"
    },
    "881": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "882": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "DUP2",
      "path": "1"
    },
    "883": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        1174,
        1199
      ],
      "op": "JUMP",
      "path": "1"
    },
    "884": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "885": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "886": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "DUP1",
      "path": "1"
    },
    "887": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "888": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x380"
    },
    "891": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "892": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "894": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "DUP1",
      "path": "1"
    },
    "895": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "REVERT",
      "path": "1"
    },
    "896": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "897": {
      "op": "POP"
    },
    "898": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "901": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38F"
    },
    "904": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "905": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "907": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D61"
    },
    "910": {
      "fn": "TokenVault.kickCurator",
      "jump": "i",
      "offset": [
        4614,
        4772
      ],
      "op": "JUMP",
      "path": "1"
    },
    "911": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "912": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB77"
    },
    "915": {
      "fn": "TokenVault.kickCurator",
      "jump": "i",
      "offset": [
        4614,
        4772
      ],
      "op": "JUMP",
      "path": "1"
    },
    "916": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "917": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "918": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "919": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "920": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A0"
    },
    "923": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "924": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "926": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "927": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "REVERT",
      "path": "1"
    },
    "928": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "929": {
      "op": "POP"
    },
    "930": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "933": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3AF"
    },
    "936": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "937": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "939": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2ED2"
    },
    "942": {
      "fn": "TokenVault.updateAuctionLength",
      "jump": "i",
      "offset": [
        5840,
        6195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "943": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "944": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC48"
    },
    "947": {
      "fn": "TokenVault.updateAuctionLength",
      "jump": "i",
      "offset": [
        5840,
        6195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "948": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "949": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "950": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "DUP1",
      "path": "16"
    },
    "951": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "952": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C0"
    },
    "955": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "956": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "958": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "DUP1",
      "path": "16"
    },
    "959": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "REVERT",
      "path": "16"
    },
    "960": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "961": {
      "op": "POP"
    },
    "962": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "964": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "965": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3456,
        3458
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 1,
      "value": "0x12"
    },
    "967": {
      "op": "DUP2"
    },
    "968": {
      "op": "MSTORE"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3374,
        3465
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x278"
    },
    "975": {
      "op": "JUMP"
    },
    "976": {
      "offset": [
        1245,
        1273
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "977": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "978": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "DUP1",
      "path": "1"
    },
    "979": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "980": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DC"
    },
    "983": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "984": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "986": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "DUP1",
      "path": "1"
    },
    "987": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "REVERT",
      "path": "1"
    },
    "988": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "989": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "POP",
      "path": "1"
    },
    "990": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "993": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9A"
    },
    "995": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "996": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "DUP2",
      "path": "1"
    },
    "997": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        1245,
        1273
      ],
      "op": "JUMP",
      "path": "1"
    },
    "998": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "999": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1000": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1001": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1002": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F2"
    },
    "1005": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1006": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1008": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1009": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1010": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1011": {
      "op": "POP"
    },
    "1012": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A1"
    },
    "1015": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x401"
    },
    "1018": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1019": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1021": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D35"
    },
    "1024": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6252
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1025": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1026": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE10"
    },
    "1029": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6252
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1030": {
      "offset": [
        587,
        660
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1031": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1032": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1033": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1034": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x412"
    },
    "1037": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1038": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1040": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1041": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1042": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1043": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "POP",
      "path": "1"
    },
    "1044": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x42E"
    },
    "1047": {
      "offset": [
        618,
        660
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "1068": {
      "offset": [
        587,
        660
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1069": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1070": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1071": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1073": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        587,
        660
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "op": "SUB"
    },
    "1082": {
      "op": "SWAP1"
    },
    "1083": {
      "op": "SWAP2"
    },
    "1084": {
      "op": "AND"
    },
    "1085": {
      "op": "DUP2"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "offset": [
        587,
        660
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x278"
    },
    "1093": {
      "op": "JUMP"
    },
    "1094": {
      "offset": [
        2220,
        2243
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1095": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1096": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1097": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1098": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x452"
    },
    "1101": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1102": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1104": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1105": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1106": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1107": {
      "op": "POP"
    },
    "1108": {
      "offset": [
        2220,
        2243
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "1110": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1111": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A1"
    },
    "1114": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1115": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1117": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "AND",
      "path": "1"
    },
    "1118": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1119": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        2220,
        2243
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1120": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1121": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1122": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1123": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1124": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46C"
    },
    "1127": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1128": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1130": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1131": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1132": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1133": {
      "op": "POP"
    },
    "1134": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "1137": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x47B"
    },
    "1140": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1141": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1143": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F0B"
    },
    "1146": {
      "fn": "TokenVault.initialize",
      "jump": "i",
      "offset": [
        3516,
        4128
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1147": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1148": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE4C"
    },
    "1151": {
      "fn": "TokenVault.initialize",
      "jump": "i",
      "offset": [
        3516,
        4128
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1152": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1153": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1154": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1155": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1156": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x48C"
    },
    "1159": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1160": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1162": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1163": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1164": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1165": {
      "op": "POP"
    },
    "1166": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "1169": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x49B"
    },
    "1172": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1173": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1175": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2ED2"
    },
    "1178": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        8318,
        10315
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1179": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1180": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3D"
    },
    "1183": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        8318,
        10315
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1184": {
      "offset": [
        1423,
        1447
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1185": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1186": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1187": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1188": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4AC"
    },
    "1191": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1192": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1194": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1195": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1196": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1197": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "POP",
      "path": "1"
    },
    "1198": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "1201": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9C"
    },
    "1203": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1204": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1205": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        1423,
        1447
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1206": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1207": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1208": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1209": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1210": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C2"
    },
    "1213": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1214": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1216": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1217": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1218": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x328"
    },
    "1223": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4D1"
    },
    "1226": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1227": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1229": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D61"
    },
    "1232": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3689,
        3814
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1233": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1240": {
      "op": "SHL"
    },
    "1241": {
      "op": "SUB"
    },
    "1242": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "AND",
      "path": "16",
      "statement": 2
    },
    "1243": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3763,
        3770
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1245": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1246": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1247": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1248": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3798
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x33"
    },
    "1250": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1252": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1253": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1255": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1256": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1257": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1258": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1259": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3689,
        3814
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1260": {
      "offset": [
        1324,
        1351
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1261": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1262": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1263": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1264": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F8"
    },
    "1267": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1268": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1270": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1271": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1272": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1273": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "POP",
      "path": "1"
    },
    "1274": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "1277": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "1279": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1280": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1281": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1324,
        1351
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1282": {
      "offset": [
        1602,
        1627
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1283": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1284": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1285": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1286": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x50E"
    },
    "1289": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1290": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1292": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1293": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1294": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1295": {
      "op": "POP"
    },
    "1296": {
      "offset": [
        1602,
        1627
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "1298": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1299": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x523"
    },
    "1302": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1307": {
      "op": "SHL"
    },
    "1308": {
      "offset": [
        1602,
        1627
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1309": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "DIV",
      "path": "1"
    },
    "1310": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1312": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "AND",
      "path": "1"
    },
    "1313": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1314": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1315": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1316": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1318": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1319": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x278"
    },
    "1322": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1323": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1324": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        1602,
        1627
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD1"
    },
    "1327": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        1602,
        1627
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1328": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1329": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1330": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1331": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1332": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53C"
    },
    "1335": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1336": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1338": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1339": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1340": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1341": {
      "op": "POP"
    },
    "1342": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "1345": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x54B"
    },
    "1348": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1349": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1351": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D61"
    },
    "1354": {
      "fn": "TokenVault.removeReserve",
      "jump": "i",
      "offset": [
        4840,
        5346
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1355": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1356": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1535"
    },
    "1359": {
      "fn": "TokenVault.removeReserve",
      "jump": "i",
      "offset": [
        4840,
        5346
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1360": {
      "offset": [
        1513,
        1543
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1361": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1362": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1363": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1364": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x55C"
    },
    "1367": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1368": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1370": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1371": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1372": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "offset": [
        1513,
        1543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "1376": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1377": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x42E"
    },
    "1380": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "op": "SUB"
    },
    "1389": {
      "offset": [
        1513,
        1543
      ],
      "op": "AND",
      "path": "1"
    },
    "1390": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1391": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        1513,
        1543
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1392": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1393": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1394": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1395": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1396": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57C"
    },
    "1399": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1400": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1402": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1403": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1404": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1405": {
      "op": "POP"
    },
    "1406": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "1409": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58B"
    },
    "1412": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1413": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1415": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2ED2"
    },
    "1418": {
      "fn": "TokenVault.updateFee",
      "jump": "i",
      "offset": [
        6287,
        6631
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1419": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1420": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1742"
    },
    "1423": {
      "fn": "TokenVault.updateFee",
      "jump": "i",
      "offset": [
        6287,
        6631
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1424": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1425": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1426": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1427": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1428": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x59C"
    },
    "1431": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1432": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1434": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1435": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1436": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1437": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "POP",
      "path": "16"
    },
    "1438": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26B"
    },
    "1441": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18CE"
    },
    "1444": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2648,
        2750
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1445": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1446": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1447": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1448": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1449": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B1"
    },
    "1452": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1453": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1455": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1456": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1457": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1458": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "POP",
      "path": "1"
    },
    "1459": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "1462": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18DD"
    },
    "1465": {
      "fn": "TokenVault.cash",
      "jump": "i",
      "offset": [
        13992,
        14393
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1466": {
      "offset": [
        2343,
        2370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1467": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1468": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1469": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1470": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C6"
    },
    "1473": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1474": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1476": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1477": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1478": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1479": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "POP",
      "path": "1"
    },
    "1480": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "1483": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "1485": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1486": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1487": {
      "fn": "TokenVault.cash",
      "offset": [
        2343,
        2370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1488": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1489": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1490": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1491": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1492": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5DC"
    },
    "1495": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1496": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1498": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1499": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1500": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1501": {
      "op": "POP"
    },
    "1502": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A1"
    },
    "1505": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5EB"
    },
    "1508": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1509": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1511": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D35"
    },
    "1514": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6739,
        7144
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1515": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1516": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A15"
    },
    "1519": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6739,
        7144
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1520": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1521": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1522": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1523": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1524": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5FC"
    },
    "1527": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1528": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1530": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1531": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1532": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1533": {
      "op": "POP"
    },
    "1534": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A1"
    },
    "1537": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x60B"
    },
    "1540": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1541": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1543": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D35"
    },
    "1546": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4017,
        4189
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1547": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1548": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AAE"
    },
    "1551": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4017,
        4189
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1552": {
      "offset": [
        2125,
        2151
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1553": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1554": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1555": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1556": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61C"
    },
    "1559": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1560": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1562": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1563": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1564": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1565": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "POP",
      "path": "1"
    },
    "1566": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "1569": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1571": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1572": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1573": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        2125,
        2151
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1574": {
      "offset": [
        946,
        963
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1575": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1576": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1577": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1578": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x632"
    },
    "1581": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1582": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1584": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1585": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1586": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1587": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "POP",
      "path": "1"
    },
    "1588": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "1591": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x98"
    },
    "1593": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1594": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1595": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        946,
        963
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1596": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1597": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1598": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1599": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1600": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x648"
    },
    "1603": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1604": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1606": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1607": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1608": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1609": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "POP",
      "path": "1"
    },
    "1610": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "1613": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ABB"
    },
    "1616": {
      "fn": "TokenVault.redeem",
      "jump": "i",
      "offset": [
        13540,
        13886
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1617": {
      "fn": "TokenVault.start",
      "offset": [
        11680,
        12201
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1618": {
      "fn": "TokenVault.start",
      "offset": [
        11680,
        12201
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "1621": {
      "fn": "TokenVault.start",
      "offset": [
        11680,
        12201
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BDE"
    },
    "1624": {
      "fn": "TokenVault.start",
      "jump": "i",
      "offset": [
        11680,
        12201
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1625": {
      "offset": [
        2441,
        2486
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1626": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1627": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1628": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1629": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x665"
    },
    "1632": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1633": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1635": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1636": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1637": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1638": {
      "op": "POP"
    },
    "1639": {
      "offset": [
        2441,
        2486
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "1642": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x674"
    },
    "1645": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1646": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1648": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D61"
    },
    "1651": {
      "fn": "TokenVault.start",
      "jump": "i",
      "offset": [
        2441,
        2486
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1652": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1653": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA3"
    },
    "1655": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1657": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1658": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1660": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1661": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1662": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1663": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1665": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1666": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1667": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1668": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1669": {
      "fn": "TokenVault.start",
      "offset": [
        2441,
        2486
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1670": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1671": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1672": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1673": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1674": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x692"
    },
    "1677": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1678": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1680": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1681": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1682": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1683": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "POP",
      "path": "1"
    },
    "1684": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "1687": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DED"
    },
    "1690": {
      "fn": "TokenVault.claimFees",
      "jump": "i",
      "offset": [
        6716,
        6775
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1691": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1692": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1693": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1694": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1695": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6A7"
    },
    "1698": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1699": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1701": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1702": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1703": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1704": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "POP",
      "path": "1"
    },
    "1705": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "1708": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DF7"
    },
    "1711": {
      "fn": "TokenVault.reservePrice",
      "jump": "i",
      "offset": [
        4258,
        4386
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1712": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1713": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1714": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1715": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1716": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6BC"
    },
    "1719": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1720": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1722": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1723": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1724": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1725": {
      "op": "POP"
    },
    "1726": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x328"
    },
    "1729": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6CB"
    },
    "1732": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1733": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1735": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FF9"
    },
    "1738": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4247,
        4396
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1739": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "op": "SUB"
    },
    "1748": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 3
    },
    "1749": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1750": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "AND",
      "path": "16"
    },
    "1751": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4336,
        4343
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1753": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1754": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1755": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1756": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4373
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x34"
    },
    "1758": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1760": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1761": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1762": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1763": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1765": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1766": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1767": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4380
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1768": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1769": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1770": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "1771": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "AND",
      "path": "16"
    },
    "1772": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1773": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1774": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1775": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1776": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1777": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1778": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1779": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1780": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4362,
        4389
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1781": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4247,
        4396
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1782": {
      "offset": [
        2041,
        2059
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1783": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1784": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1785": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1786": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x702"
    },
    "1789": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1790": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1792": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1793": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1794": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1795": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "POP",
      "path": "1"
    },
    "1796": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "1799": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9F"
    },
    "1801": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1802": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1803": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        2041,
        2059
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1804": {
      "offset": [
        1830,
        1863
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1805": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1806": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1807": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1808": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x718"
    },
    "1811": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1812": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1814": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1815": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1816": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1817": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "POP",
      "path": "1"
    },
    "1818": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x42E"
    },
    "1821": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "1854": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1855": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1830,
        1863
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1856": {
      "offset": [
        1930,
        1952
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1857": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1858": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1859": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1860": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x74C"
    },
    "1863": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1864": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1866": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1867": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1868": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1869": {
      "op": "POP"
    },
    "1870": {
      "offset": [
        1930,
        1952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9E"
    },
    "1872": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1873": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x42E"
    },
    "1876": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "op": "SUB"
    },
    "1885": {
      "offset": [
        1930,
        1952
      ],
      "op": "AND",
      "path": "1"
    },
    "1886": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1887": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        1930,
        1952
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1888": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1889": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1890": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1891": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1892": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x76C"
    },
    "1895": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1896": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1898": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1899": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1900": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1901": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "POP",
      "path": "1"
    },
    "1902": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D1"
    },
    "1905": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E1E"
    },
    "1908": {
      "fn": "TokenVault.end",
      "jump": "i",
      "offset": [
        13066,
        13444
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1909": {
      "offset": [
        862,
        882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1910": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1911": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1912": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1913": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x781"
    },
    "1916": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1917": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1919": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1920": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1921": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1922": {
      "op": "POP"
    },
    "1923": {
      "offset": [
        862,
        882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x97"
    },
    "1925": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1926": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x42E"
    },
    "1929": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1936": {
      "op": "SHL"
    },
    "1937": {
      "op": "SUB"
    },
    "1938": {
      "offset": [
        862,
        882
      ],
      "op": "AND",
      "path": "1"
    },
    "1939": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1940": {
      "fn": "TokenVault.end",
      "offset": [
        862,
        882
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1941": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1942": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2491,
        2504
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1944": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2523,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 4,
      "value": "0x36"
    },
    "1946": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1947": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1948": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A4"
    },
    "1951": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1952": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3032"
    },
    "1955": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1956": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1957": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1958": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1960": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "ADD",
      "path": "16"
    },
    "1961": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1963": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1964": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1965": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DIV",
      "path": "16"
    },
    "1966": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "MUL",
      "path": "16"
    },
    "1967": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1969": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "ADD",
      "path": "16"
    },
    "1970": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1972": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1973": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1974": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1975": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "ADD",
      "path": "16"
    },
    "1976": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1978": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1979": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1980": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1981": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1982": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1983": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1984": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1985": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1986": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1988": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "ADD",
      "path": "16"
    },
    "1989": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1990": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1991": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1992": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7D0"
    },
    "1995": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1996": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3032"
    },
    "1999": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2000": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2001": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2002": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2003": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x81D"
    },
    "2006": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2007": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2008": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2010": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "LT",
      "path": "16"
    },
    "2011": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7F2"
    },
    "2014": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2015": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "2018": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2019": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2020": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2021": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DIV",
      "path": "16"
    },
    "2022": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "MUL",
      "path": "16"
    },
    "2023": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2024": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2025": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2026": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2028": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "ADD",
      "path": "16"
    },
    "2029": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2030": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x81D"
    },
    "2033": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2034": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2035": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2036": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "ADD",
      "path": "16"
    },
    "2037": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2038": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2039": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2041": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2042": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2044": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2046": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2047": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2048": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2049": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2050": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2051": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2052": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2053": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2054": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2056": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "ADD",
      "path": "16"
    },
    "2057": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2058": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2060": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "ADD",
      "path": "16"
    },
    "2061": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2062": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2063": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "GT",
      "path": "16"
    },
    "2064": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x800"
    },
    "2067": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2068": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2069": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2070": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SUB",
      "path": "16"
    },
    "2071": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2073": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "AND",
      "path": "16"
    },
    "2074": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2075": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "ADD",
      "path": "16"
    },
    "2076": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2077": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2078": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "POP",
      "path": "16"
    },
    "2079": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "POP",
      "path": "16"
    },
    "2080": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "POP",
      "path": "16"
    },
    "2081": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "POP",
      "path": "16"
    },
    "2082": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "POP",
      "path": "16"
    },
    "2083": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2084": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2516,
        2528
      ],
      "op": "POP",
      "path": "16"
    },
    "2085": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2437,
        2535
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2086": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2437,
        2535
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2087": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2088": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4617,
        4621
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2090": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4633,
        4672
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 5,
      "value": "0x834"
    },
    "2093": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        901,
        911
      ],
      "op": "CALLER",
      "path": "21",
      "statement": 6
    },
    "2094": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4656,
        4663
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2095": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4665,
        4671
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2096": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4633,
        4641
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F9E"
    },
    "2099": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4633,
        4672
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2100": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4633,
        4672
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2101": {
      "op": "POP"
    },
    "2102": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4689,
        4693
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 7,
      "value": "0x1"
    },
    "2104": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2105": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2106": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "POP",
      "path": "16"
    },
    "2107": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4534,
        4700
      ],
      "op": "POP",
      "path": "16"
    },
    "2108": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4534,
        4700
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2109": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5585,
        5733
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2110": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5667,
        5674
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x9E"
    },
    "2112": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5667,
        5674
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2119": {
      "op": "SHL"
    },
    "2120": {
      "op": "SUB"
    },
    "2121": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5667,
        5674
      ],
      "op": "AND",
      "path": "1"
    },
    "2122": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5653,
        5663
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2123": {
      "branch": 144,
      "fn": "TokenVault.updateCurator",
      "offset": [
        5653,
        5674
      ],
      "op": "EQ",
      "path": "1"
    },
    "2124": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x870"
    },
    "2127": {
      "branch": 144,
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2128": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2130": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2137": {
      "op": "SHL"
    },
    "2138": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2139": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2140": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2142": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "ADD",
      "path": "1"
    },
    "2143": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "2146": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2147": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x306C"
    },
    "2150": {
      "fn": "TokenVault.updateCurator",
      "jump": "i",
      "offset": [
        5645,
        5697
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2151": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2152": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2154": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2155": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2156": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2157": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "SUB",
      "path": "1"
    },
    "2158": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2159": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "2160": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5645,
        5697
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2161": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5715
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x9E"
    },
    "2163": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2164": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2171": {
      "op": "SHL"
    },
    "2172": {
      "op": "SUB"
    },
    "2173": {
      "op": "NOT"
    },
    "2174": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "AND",
      "path": "1"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2181": {
      "op": "SHL"
    },
    "2182": {
      "op": "SUB"
    },
    "2183": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2184": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2185": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2186": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "AND",
      "path": "1"
    },
    "2187": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2188": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2189": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2190": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "OR",
      "path": "1"
    },
    "2191": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2192": {
      "fn": "TokenVault.updateCurator",
      "offset": [
        5708,
        5726
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2193": {
      "fn": "TokenVault.updateCurator",
      "jump": "o",
      "offset": [
        5585,
        5733
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2194": {
      "fn": "TokenVault.bid",
      "offset": [
        12313,
        12977
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2195": {
      "fn": "TokenVault.bid",
      "offset": [
        12379,
        12389
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x1"
    },
    "2197": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "2199": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12375
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2204": {
      "op": "SHL"
    },
    "2205": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12375
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2206": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12375
      ],
      "op": "DIV",
      "path": "1"
    },
    "2207": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2209": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12375
      ],
      "op": "AND",
      "path": "1"
    },
    "2210": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12389
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2212": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12389
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2213": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12389
      ],
      "op": "GT",
      "path": "1"
    },
    "2214": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12389
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2215": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8B2"
    },
    "2218": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12389
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2219": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8B2"
    },
    "2222": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FBB"
    },
    "2225": {
      "fn": "TokenVault.bid",
      "jump": "i",
      "offset": [
        12363,
        12389
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2226": {
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12389
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2227": {
      "branch": 145,
      "fn": "TokenVault.bid",
      "offset": [
        12363,
        12389
      ],
      "op": "EQ",
      "path": "1"
    },
    "2228": {
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FF"
    },
    "2231": {
      "branch": 145,
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2232": {
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2234": {
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2235": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2241": {
      "op": "SHL"
    },
    "2242": {
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2243": {
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2246": {
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2248": {
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2249": {
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "ADD",
      "path": "1"
    },
    "2250": {
      "op": "MSTORE"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2255": {
      "op": "DUP3"
    },
    "2256": {
      "op": "ADD"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH32",
      "value": "0x6269643A61756374696F6E206973206E6F74206C697665000000000000000000"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2293": {
      "op": "DUP3"
    },
    "2294": {
      "op": "ADD"
    },
    "2295": {
      "op": "MSTORE"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2298": {
      "op": "ADD"
    },
    "2299": {
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "2302": {
      "op": "JUMP"
    },
    "2303": {
      "fn": "TokenVault.bid",
      "offset": [
        12355,
        12417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2304": {
      "fn": "TokenVault.bid",
      "offset": [
        12427,
        12443
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2306": {
      "fn": "TokenVault.bid",
      "offset": [
        12456,
        12464
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2345": {
      "op": "SHL"
    },
    "2346": {
      "op": "SUB"
    },
    "2347": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12480
      ],
      "op": "AND",
      "path": "1"
    },
    "2348": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12480
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7C513C0F"
    },
    "2353": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2355": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2356": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2357": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2362": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "AND",
      "path": "1"
    },
    "2363": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2365": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "SHL",
      "path": "1"
    },
    "2366": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2367": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2368": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2370": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "ADD",
      "path": "1"
    },
    "2371": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2373": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2375": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2376": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2377": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2378": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "SUB",
      "path": "1"
    },
    "2379": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2380": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2382": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2383": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "GAS",
      "path": "1"
    },
    "2384": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "CALL",
      "path": "1"
    },
    "2385": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2386": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2387": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2388": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x961"
    },
    "2391": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2392": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2393": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2395": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2396": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2397": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2398": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2400": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2401": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2402": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "POP",
      "path": "1"
    },
    "2403": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "POP",
      "path": "1"
    },
    "2404": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "POP",
      "path": "1"
    },
    "2405": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "POP",
      "path": "1"
    },
    "2406": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2408": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2409": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2410": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2412": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "NOT",
      "path": "1"
    },
    "2413": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2415": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2416": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "ADD",
      "path": "1"
    },
    "2417": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "AND",
      "path": "1"
    },
    "2418": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2419": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "ADD",
      "path": "1"
    },
    "2420": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2421": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2423": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2424": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "POP",
      "path": "1"
    },
    "2425": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2426": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "ADD",
      "path": "1"
    },
    "2427": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2428": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x985"
    },
    "2431": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2432": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2433": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3098"
    },
    "2436": {
      "fn": "TokenVault.bid",
      "jump": "i",
      "offset": [
        12446,
        12482
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2437": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12482
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2438": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12489
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x991"
    },
    "2441": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12489
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2442": {
      "fn": "TokenVault.bid",
      "offset": [
        12485,
        12489
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "2445": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12489
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C7"
    },
    "2448": {
      "fn": "TokenVault.bid",
      "jump": "i",
      "offset": [
        12446,
        12489
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2449": {
      "fn": "TokenVault.bid",
      "offset": [
        12446,
        12489
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2450": {
      "fn": "TokenVault.bid",
      "offset": [
        12427,
        12489
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2451": {
      "fn": "TokenVault.bid",
      "offset": [
        12427,
        12489
      ],
      "op": "POP",
      "path": "1"
    },
    "2452": {
      "fn": "TokenVault.bid",
      "offset": [
        12539,
        12547
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 11
    },
    "2453": {
      "fn": "TokenVault.bid",
      "offset": [
        12527,
        12536
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9C"
    },
    "2455": {
      "fn": "TokenVault.bid",
      "offset": [
        12527,
        12536
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2456": {
      "fn": "TokenVault.bid",
      "offset": [
        12527,
        12547
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9A1"
    },
    "2459": {
      "fn": "TokenVault.bid",
      "offset": [
        12527,
        12547
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2460": {
      "fn": "TokenVault.bid",
      "offset": [
        12527,
        12547
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2461": {
      "fn": "TokenVault.bid",
      "offset": [
        12527,
        12547
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "2464": {
      "fn": "TokenVault.bid",
      "jump": "i",
      "offset": [
        12527,
        12547
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2465": {
      "fn": "TokenVault.bid",
      "offset": [
        12527,
        12547
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2466": {
      "fn": "TokenVault.bid",
      "offset": [
        12507,
        12523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AD"
    },
    "2469": {
      "fn": "TokenVault.bid",
      "offset": [
        12507,
        12516
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "2470": {
      "fn": "TokenVault.bid",
      "offset": [
        12519,
        12523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "2473": {
      "fn": "TokenVault.bid",
      "offset": [
        12507,
        12523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "2476": {
      "fn": "TokenVault.bid",
      "jump": "i",
      "offset": [
        12507,
        12523
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2477": {
      "fn": "TokenVault.bid",
      "offset": [
        12507,
        12523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2478": {
      "fn": "TokenVault.bid",
      "offset": [
        12507,
        12547
      ],
      "op": "LT",
      "path": "1"
    },
    "2479": {
      "branch": 146,
      "fn": "TokenVault.bid",
      "offset": [
        12507,
        12547
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2480": {
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9ED"
    },
    "2483": {
      "branch": 146,
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2484": {
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2486": {
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2487": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2493": {
      "op": "SHL"
    },
    "2494": {
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2495": {
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2498": {
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2500": {
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2501": {
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "ADD",
      "path": "1"
    },
    "2502": {
      "op": "MSTORE"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2507": {
      "op": "DUP3"
    },
    "2508": {
      "op": "ADD"
    },
    "2509": {
      "op": "MSTORE"
    },
    "2510": {
      "op": "PUSH15",
      "value": "0x189A590E9D1BDBC81B1BDDC8189A59"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "2528": {
      "op": "SHL"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2531": {
      "op": "DUP3"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2536": {
      "op": "ADD"
    },
    "2537": {
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "2540": {
      "op": "JUMP"
    },
    "2541": {
      "fn": "TokenVault.bid",
      "offset": [
        12499,
        12567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2542": {
      "fn": "TokenVault.bid",
      "offset": [
        12603,
        12613
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 12,
      "value": "0x99"
    },
    "2544": {
      "fn": "TokenVault.bid",
      "offset": [
        12603,
        12613
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2545": {
      "fn": "TokenVault.bid",
      "offset": [
        12585,
        12600
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "2546": {
      "branch": 147,
      "fn": "TokenVault.bid",
      "offset": [
        12585,
        12613
      ],
      "op": "LT",
      "path": "1"
    },
    "2547": {
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA32"
    },
    "2550": {
      "branch": 147,
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2551": {
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2553": {
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2554": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2560": {
      "op": "SHL"
    },
    "2561": {
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2562": {
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2565": {
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2567": {
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2568": {
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "ADD",
      "path": "1"
    },
    "2569": {
      "op": "MSTORE"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2574": {
      "op": "DUP3"
    },
    "2575": {
      "op": "ADD"
    },
    "2576": {
      "op": "MSTORE"
    },
    "2577": {
      "op": "PUSH17",
      "value": "0x189A590E985D58DD1A5BDB88195B991959"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "2597": {
      "op": "SHL"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2600": {
      "op": "DUP3"
    },
    "2601": {
      "op": "ADD"
    },
    "2602": {
      "op": "MSTORE"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2605": {
      "op": "ADD"
    },
    "2606": {
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "2609": {
      "op": "JUMP"
    },
    "2610": {
      "fn": "TokenVault.bid",
      "offset": [
        12577,
        12635
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2611": {
      "fn": "TokenVault.bid",
      "offset": [
        12752,
        12762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x384"
    },
    "2614": {
      "fn": "TokenVault.bid",
      "offset": [
        12733,
        12748
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "2615": {
      "fn": "TokenVault.bid",
      "offset": [
        12720,
        12730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x99"
    },
    "2617": {
      "fn": "TokenVault.bid",
      "offset": [
        12720,
        12730
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2618": {
      "fn": "TokenVault.bid",
      "offset": [
        12720,
        12748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA43"
    },
    "2621": {
      "fn": "TokenVault.bid",
      "offset": [
        12720,
        12748
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2622": {
      "fn": "TokenVault.bid",
      "offset": [
        12720,
        12748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2623": {
      "fn": "TokenVault.bid",
      "offset": [
        12720,
        12748
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "2626": {
      "fn": "TokenVault.bid",
      "jump": "i",
      "offset": [
        12720,
        12748
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2627": {
      "fn": "TokenVault.bid",
      "offset": [
        12720,
        12748
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2628": {
      "branch": 148,
      "fn": "TokenVault.bid",
      "offset": [
        12720,
        12762
      ],
      "op": "GT",
      "path": "1"
    },
    "2629": {
      "fn": "TokenVault.bid",
      "offset": [
        12716,
        12813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA62"
    },
    "2632": {
      "branch": 148,
      "fn": "TokenVault.bid",
      "offset": [
        12716,
        12813
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2633": {
      "fn": "TokenVault.bid",
      "offset": [
        12792,
        12802
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x384"
    },
    "2636": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12788
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x99"
    },
    "2638": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12788
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2640": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2641": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2642": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2643": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5C"
    },
    "2646": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2647": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2648": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C7"
    },
    "2651": {
      "fn": "TokenVault.bid",
      "jump": "i",
      "offset": [
        12778,
        12802
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2652": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2653": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2654": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2655": {
      "fn": "TokenVault.bid",
      "offset": [
        12778,
        12802
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2656": {
      "op": "POP"
    },
    "2657": {
      "op": "POP"
    },
    "2658": {
      "fn": "TokenVault.bid",
      "offset": [
        12716,
        12813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2659": {
      "fn": "TokenVault.bid",
      "offset": [
        12838,
        12845
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x9D"
    },
    "2661": {
      "fn": "TokenVault.bid",
      "offset": [
        12838,
        12845
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2662": {
      "fn": "TokenVault.bid",
      "offset": [
        12847,
        12856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9C"
    },
    "2664": {
      "fn": "TokenVault.bid",
      "offset": [
        12847,
        12856
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2665": {
      "fn": "TokenVault.bid",
      "offset": [
        12823,
        12857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA7B"
    },
    "2668": {
      "fn": "TokenVault.bid",
      "offset": [
        12823,
        12857
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2675": {
      "op": "SHL"
    },
    "2676": {
      "op": "SUB"
    },
    "2677": {
      "fn": "TokenVault.bid",
      "offset": [
        12838,
        12845
      ],
      "op": "AND",
      "path": "1"
    },
    "2678": {
      "fn": "TokenVault.bid",
      "offset": [
        12838,
        12845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2679": {
      "fn": "TokenVault.bid",
      "offset": [
        12823,
        12837
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20C2"
    },
    "2682": {
      "fn": "TokenVault.bid",
      "jump": "i",
      "offset": [
        12823,
        12857
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2683": {
      "fn": "TokenVault.bid",
      "offset": [
        12823,
        12857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2684": {
      "fn": "TokenVault.bid",
      "offset": [
        12880,
        12889
      ],
      "op": "CALLVALUE",
      "path": "1",
      "statement": 15
    },
    "2685": {
      "fn": "TokenVault.bid",
      "offset": [
        12868,
        12877
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9C"
    },
    "2687": {
      "fn": "TokenVault.bid",
      "offset": [
        12868,
        12889
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2688": {
      "fn": "TokenVault.bid",
      "offset": [
        12868,
        12889
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2689": {
      "fn": "TokenVault.bid",
      "offset": [
        12868,
        12889
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2690": {
      "fn": "TokenVault.bid",
      "offset": [
        12899,
        12906
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x9D"
    },
    "2692": {
      "fn": "TokenVault.bid",
      "offset": [
        12899,
        12928
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2693": {
      "fn": "TokenVault.bid",
      "offset": [
        12899,
        12928
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2700": {
      "op": "SHL"
    },
    "2701": {
      "op": "SUB"
    },
    "2702": {
      "op": "NOT"
    },
    "2703": {
      "fn": "TokenVault.bid",
      "offset": [
        12899,
        12928
      ],
      "op": "AND",
      "path": "1"
    },
    "2704": {
      "fn": "TokenVault.bid",
      "offset": [
        12917,
        12927
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2705": {
      "fn": "TokenVault.bid",
      "offset": [
        12899,
        12928
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2706": {
      "fn": "TokenVault.bid",
      "offset": [
        12899,
        12928
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2707": {
      "fn": "TokenVault.bid",
      "offset": [
        12899,
        12928
      ],
      "op": "OR",
      "path": "1"
    },
    "2708": {
      "fn": "TokenVault.bid",
      "offset": [
        12899,
        12928
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2709": {
      "fn": "TokenVault.bid",
      "offset": [
        12899,
        12928
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2710": {
      "fn": "TokenVault.bid",
      "offset": [
        12899,
        12928
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2711": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x40"
    },
    "2713": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2714": {
      "op": "SWAP2"
    },
    "2715": {
      "op": "DUP3"
    },
    "2716": {
      "op": "MSTORE"
    },
    "2717": {
      "fn": "TokenVault.bid",
      "offset": [
        12917,
        12927
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2718": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xE684A55F31B79ECA403DF938249029212A5925EC6BE8012E099B45BC1019E5D2"
    },
    "2751": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2754": {
      "op": "ADD"
    },
    "2755": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2757": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2758": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2759": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2760": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "SUB",
      "path": "1"
    },
    "2761": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2762": {
      "fn": "TokenVault.bid",
      "offset": [
        12944,
        12970
      ],
      "op": "LOG2",
      "path": "1"
    },
    "2763": {
      "fn": "TokenVault.bid",
      "offset": [
        12345,
        12977
      ],
      "op": "POP",
      "path": "1"
    },
    "2764": {
      "fn": "TokenVault.bid",
      "jump": "o",
      "offset": [
        12313,
        12977
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2765": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2766": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5303,
        5307
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2768": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5319,
        5355
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 18,
      "value": "0xADA"
    },
    "2771": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5329,
        5335
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2772": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5337,
        5346
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2773": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5348,
        5354
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2774": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5319,
        5328
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21C4"
    },
    "2777": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5319,
        5355
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2778": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5319,
        5355
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2785": {
      "op": "SHL"
    },
    "2786": {
      "op": "SUB"
    },
    "2787": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2788": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "AND",
      "path": "16"
    },
    "2789": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5366,
        5390
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2791": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2792": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2793": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2794": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5404
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x34"
    },
    "2796": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2798": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2799": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2800": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2801": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2803": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2804": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2805": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5412
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2806": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        901,
        911
      ],
      "op": "CALLER",
      "path": "21"
    },
    "2807": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5426
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2808": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5426
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2809": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5426
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2810": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5426
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2811": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5426
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2812": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5426
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2813": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5426
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2814": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5393,
        5426
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2815": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5444,
        5470
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 19
    },
    "2816": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5444,
        5470
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2817": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5444,
        5470
      ],
      "op": "LT",
      "path": "16"
    },
    "2818": {
      "branch": 187,
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5444,
        5470
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2819": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB5F"
    },
    "2822": {
      "branch": 187,
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2823": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2825": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2832": {
      "op": "SHL"
    },
    "2833": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2834": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2837": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2839": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2840": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "ADD",
      "path": "16"
    },
    "2841": {
      "op": "MSTORE"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2846": {
      "op": "DUP3"
    },
    "2847": {
      "op": "ADD"
    },
    "2848": {
      "op": "MSTORE"
    },
    "2849": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2884": {
      "op": "DUP3"
    },
    "2885": {
      "op": "ADD"
    },
    "2886": {
      "op": "MSTORE"
    },
    "2887": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2898": {
      "op": "SHL"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2901": {
      "op": "DUP3"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2906": {
      "op": "ADD"
    },
    "2907": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x867"
    },
    "2910": {
      "op": "JUMP"
    },
    "2911": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5436,
        5515
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2912": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5549,
        5606
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 20,
      "value": "0xB6C"
    },
    "2915": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5558,
        5564
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2916": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        901,
        911
      ],
      "op": "CALLER",
      "path": "21"
    },
    "2917": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5599,
        5605
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2918": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5580,
        5596
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2919": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5580,
        5605
      ],
      "op": "SUB",
      "path": "16"
    },
    "2920": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5549,
        5557
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F9E"
    },
    "2923": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5549,
        5606
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2924": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5549,
        5606
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5634,
        5638
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 21,
      "value": "0x1"
    },
    "2928": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5634,
        5638
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "2929": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5167,
        5645
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "2930": {
      "op": "POP"
    },
    "2931": {
      "op": "POP"
    },
    "2932": {
      "op": "POP"
    },
    "2933": {
      "op": "POP"
    },
    "2934": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5167,
        5645
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2935": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4614,
        4772
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2936": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4702,
        4710
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 22,
      "value": "0x0"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2975": {
      "op": "SHL"
    },
    "2976": {
      "op": "SUB"
    },
    "2977": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4717
      ],
      "op": "AND",
      "path": "1"
    },
    "2978": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4717
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8DA5CB5B"
    },
    "2983": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2985": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2986": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2987": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2992": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "AND",
      "path": "1"
    },
    "2993": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2995": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "SHL",
      "path": "1"
    },
    "2996": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2997": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2998": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3000": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "ADD",
      "path": "1"
    },
    "3001": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3003": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3005": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3006": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3007": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3008": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "SUB",
      "path": "1"
    },
    "3009": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3010": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3011": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "GAS",
      "path": "1"
    },
    "3012": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "3013": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3014": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3015": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3016": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD5"
    },
    "3019": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3020": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3021": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3023": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3024": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3025": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3026": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3028": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3029": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3030": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "POP",
      "path": "1"
    },
    "3031": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "POP",
      "path": "1"
    },
    "3032": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "POP",
      "path": "1"
    },
    "3033": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "POP",
      "path": "1"
    },
    "3034": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3036": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3037": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3038": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3040": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "NOT",
      "path": "1"
    },
    "3041": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3043": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3044": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "ADD",
      "path": "1"
    },
    "3045": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "AND",
      "path": "1"
    },
    "3046": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3047": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "ADD",
      "path": "1"
    },
    "3048": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3049": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3051": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3052": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "POP",
      "path": "1"
    },
    "3053": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3054": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "ADD",
      "path": "1"
    },
    "3055": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3056": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF9"
    },
    "3059": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3060": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3061": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3115"
    },
    "3064": {
      "fn": "TokenVault.kickCurator",
      "jump": "i",
      "offset": [
        4694,
        4719
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3065": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4694,
        4719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3072": {
      "op": "SHL"
    },
    "3073": {
      "op": "SUB"
    },
    "3074": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4680,
        4719
      ],
      "op": "AND",
      "path": "1"
    },
    "3075": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4680,
        4690
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3082": {
      "op": "SHL"
    },
    "3083": {
      "op": "SUB"
    },
    "3084": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4680,
        4719
      ],
      "op": "AND",
      "path": "1"
    },
    "3085": {
      "branch": 149,
      "fn": "TokenVault.kickCurator",
      "offset": [
        4680,
        4719
      ],
      "op": "EQ",
      "path": "1"
    },
    "3086": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4672,
        4736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x870"
    },
    "3089": {
      "branch": 149,
      "fn": "TokenVault.kickCurator",
      "offset": [
        4672,
        4736
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3090": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4672,
        4736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3092": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4672,
        4736
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3099": {
      "op": "SHL"
    },
    "3100": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4672,
        4736
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3101": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4672,
        4736
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3104": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4672,
        4736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3106": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4672,
        4736
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3107": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4672,
        4736
      ],
      "op": "ADD",
      "path": "1"
    },
    "3108": {
      "op": "MSTORE"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3113": {
      "op": "DUP3"
    },
    "3114": {
      "op": "ADD"
    },
    "3115": {
      "op": "MSTORE"
    },
    "3116": {
      "op": "PUSH12",
      "value": "0x35B4B1B59D3737BA1033B7BB"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3131": {
      "op": "SHL"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3134": {
      "op": "DUP3"
    },
    "3135": {
      "op": "ADD"
    },
    "3136": {
      "op": "MSTORE"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3139": {
      "op": "ADD"
    },
    "3140": {
      "fn": "TokenVault.kickCurator",
      "offset": [
        4672,
        4736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "3143": {
      "op": "JUMP"
    },
    "3144": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3145": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5927,
        5934
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x9E"
    },
    "3147": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5927,
        5934
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "SUB"
    },
    "3156": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5927,
        5934
      ],
      "op": "AND",
      "path": "1"
    },
    "3157": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5913,
        5923
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3158": {
      "branch": 150,
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5913,
        5934
      ],
      "op": "EQ",
      "path": "1"
    },
    "3159": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC72"
    },
    "3162": {
      "branch": 150,
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3163": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3165": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3166": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3172": {
      "op": "SHL"
    },
    "3173": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3174": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3175": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3177": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "ADD",
      "path": "1"
    },
    "3178": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "3181": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3182": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x306C"
    },
    "3185": {
      "fn": "TokenVault.updateAuctionLength",
      "jump": "i",
      "offset": [
        5905,
        5957
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3186": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5905,
        5957
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3187": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5996,
        6004
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 24,
      "value": "0x0"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3226": {
      "op": "SHL"
    },
    "3227": {
      "op": "SUB"
    },
    "3228": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6022
      ],
      "op": "AND",
      "path": "1"
    },
    "3229": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6022
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA0B335E3"
    },
    "3234": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3236": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3237": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3238": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3243": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "AND",
      "path": "1"
    },
    "3244": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "3246": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "SHL",
      "path": "1"
    },
    "3247": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3248": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3249": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3251": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "ADD",
      "path": "1"
    },
    "3252": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3254": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3256": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3257": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3258": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3259": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "SUB",
      "path": "1"
    },
    "3260": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3261": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3263": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3264": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "GAS",
      "path": "1"
    },
    "3265": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "CALL",
      "path": "1"
    },
    "3266": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3267": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3268": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3269": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCD2"
    },
    "3272": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3273": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3274": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3276": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3277": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3278": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3279": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3281": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3282": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3283": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "POP",
      "path": "1"
    },
    "3284": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "POP",
      "path": "1"
    },
    "3285": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "POP",
      "path": "1"
    },
    "3286": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "POP",
      "path": "1"
    },
    "3287": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3289": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3290": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3291": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3293": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "NOT",
      "path": "1"
    },
    "3294": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3296": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3297": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "ADD",
      "path": "1"
    },
    "3298": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "AND",
      "path": "1"
    },
    "3299": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3300": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "ADD",
      "path": "1"
    },
    "3301": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3302": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3304": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3305": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "POP",
      "path": "1"
    },
    "3306": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3307": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "ADD",
      "path": "1"
    },
    "3308": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3309": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF6"
    },
    "3312": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3313": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3314": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3098"
    },
    "3317": {
      "fn": "TokenVault.updateAuctionLength",
      "jump": "i",
      "offset": [
        5986,
        6024
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3318": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5986,
        6024
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3319": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5975,
        5982
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3320": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5975,
        6024
      ],
      "op": "LT",
      "path": "1"
    },
    "3321": {
      "branch": 151,
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5975,
        6024
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3322": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5975,
        6077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3323": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5975,
        6077
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3324": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5975,
        6077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD88"
    },
    "3327": {
      "branch": 151,
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5975,
        6077
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3328": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5975,
        6077
      ],
      "op": "POP",
      "path": "1"
    },
    "3329": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6049,
        6057
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3368": {
      "op": "SHL"
    },
    "3369": {
      "op": "SUB"
    },
    "3370": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6075
      ],
      "op": "AND",
      "path": "1"
    },
    "3371": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6075
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE519EF9"
    },
    "3376": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3378": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3379": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3380": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3385": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "AND",
      "path": "1"
    },
    "3386": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "3388": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "SHL",
      "path": "1"
    },
    "3389": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3390": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3391": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3393": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "ADD",
      "path": "1"
    },
    "3394": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3396": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3398": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3399": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3400": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3401": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "SUB",
      "path": "1"
    },
    "3402": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3403": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3405": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3406": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "GAS",
      "path": "1"
    },
    "3407": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "CALL",
      "path": "1"
    },
    "3408": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3409": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3410": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3411": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD60"
    },
    "3414": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3415": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3416": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3418": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3419": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3420": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3421": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3423": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3424": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3425": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "POP",
      "path": "1"
    },
    "3426": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "POP",
      "path": "1"
    },
    "3427": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "POP",
      "path": "1"
    },
    "3428": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "POP",
      "path": "1"
    },
    "3429": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3431": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3432": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3433": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3435": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "NOT",
      "path": "1"
    },
    "3436": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3438": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3439": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "ADD",
      "path": "1"
    },
    "3440": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "AND",
      "path": "1"
    },
    "3441": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3442": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "ADD",
      "path": "1"
    },
    "3443": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3444": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3446": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3447": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "POP",
      "path": "1"
    },
    "3448": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3449": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "ADD",
      "path": "1"
    },
    "3450": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3451": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD84"
    },
    "3454": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3455": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3456": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3098"
    },
    "3459": {
      "fn": "TokenVault.updateAuctionLength",
      "jump": "i",
      "offset": [
        6039,
        6077
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3460": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6039,
        6077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3461": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6028,
        6035
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3462": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6028,
        6077
      ],
      "op": "GT",
      "path": "1"
    },
    "3463": {
      "branch": 152,
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6028,
        6077
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3464": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5975,
        6077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3465": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD4"
    },
    "3468": {
      "branch": 152,
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3469": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3471": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3478": {
      "op": "SHL"
    },
    "3479": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3480": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3483": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3485": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3486": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "ADD",
      "path": "1"
    },
    "3487": {
      "op": "MSTORE"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3492": {
      "op": "DUP3"
    },
    "3493": {
      "op": "ADD"
    },
    "3494": {
      "op": "MSTORE"
    },
    "3495": {
      "op": "PUSH32",
      "value": "0x7570646174653A696E76616C69642061756374696F6E206C656E677468000000"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3530": {
      "op": "DUP3"
    },
    "3531": {
      "op": "ADD"
    },
    "3532": {
      "op": "MSTORE"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3535": {
      "op": "ADD"
    },
    "3536": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "3539": {
      "op": "JUMP"
    },
    "3540": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5967,
        6111
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3541": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6122,
        6135
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x9A"
    },
    "3543": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6122,
        6145
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3544": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6122,
        6145
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3545": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6122,
        6145
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3546": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x40"
    },
    "3548": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3549": {
      "op": "DUP2"
    },
    "3550": {
      "op": "DUP2"
    },
    "3551": {
      "op": "MSTORE"
    },
    "3552": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4AB86AE701798277AA378943B9DFD155D3B19703CD57BE298908FADD32F7BF46"
    },
    "3585": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3588": {
      "op": "ADD"
    },
    "3589": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3590": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3592": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3593": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3594": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3595": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "SUB",
      "path": "1"
    },
    "3596": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3597": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        6160,
        6188
      ],
      "op": "LOG1",
      "path": "1"
    },
    "3598": {
      "fn": "TokenVault.updateAuctionLength",
      "offset": [
        5840,
        6195
      ],
      "op": "POP",
      "path": "1"
    },
    "3599": {
      "fn": "TokenVault.updateAuctionLength",
      "jump": "o",
      "offset": [
        5840,
        6195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3600": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6040,
        6252
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3601": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        901,
        911
      ],
      "op": "CALLER",
      "path": "21"
    },
    "3602": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6128,
        6132
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3604": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 27
    },
    "3605": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3606": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3607": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6187
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x34"
    },
    "3609": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3611": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3612": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3613": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3614": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3616": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3617": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3618": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6201
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3625": {
      "op": "SHL"
    },
    "3626": {
      "op": "SUB"
    },
    "3627": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6210
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3628": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6210
      ],
      "op": "AND",
      "path": "16"
    },
    "3629": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6210
      ],
      "op": "DUP5",
      "path": "16"
    },
    "3630": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6210
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3631": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6210
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3632": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6210
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3633": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6210
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3634": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6210
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3635": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6210
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3636": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6210
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3637": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6128,
        6132
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3638": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6128,
        6132
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3639": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6144,
        6224
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x834"
    },
    "3642": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6144,
        6224
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3643": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6167,
        6174
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3644": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6167,
        6174
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3645": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6223
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE47"
    },
    "3648": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3649": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6213,
        6223
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3650": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6213,
        6223
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3651": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6223
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30C7"
    },
    "3654": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6176,
        6223
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3655": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6176,
        6223
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3656": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6144,
        6152
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F9E"
    },
    "3659": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6144,
        6224
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3660": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3661": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3663": {
      "fn": "TokenVault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3664": {
      "fn": "TokenVault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "3667": {
      "fn": "TokenVault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3668": {
      "fn": "TokenVault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "15"
    },
    "3669": {
      "fn": "TokenVault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3671": {
      "fn": "TokenVault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "15"
    },
    "3672": {
      "fn": "TokenVault.initialize",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3673": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE65"
    },
    "3676": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3680": {
      "fn": "TokenVault.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3681": {
      "fn": "TokenVault.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3683": {
      "fn": "TokenVault.initialize",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "15"
    },
    "3684": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3685": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3686": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xE81"
    },
    "3689": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3690": {
      "fn": "TokenVault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "3692": {
      "fn": "TokenVault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "3693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3699": {
      "op": "SHL"
    },
    "3700": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "15"
    },
    "3701": {
      "fn": "TokenVault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "3702": {
      "fn": "TokenVault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "3704": {
      "fn": "TokenVault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "15"
    },
    "3705": {
      "fn": "TokenVault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x867"
    },
    "3708": {
      "fn": "TokenVault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3709": {
      "fn": "TokenVault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3132"
    },
    "3712": {
      "fn": "TokenVault.initialize",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "15"
    },
    "3713": {
      "fn": "TokenVault.initialize",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3714": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3716": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3717": {
      "fn": "TokenVault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "3720": {
      "fn": "TokenVault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3721": {
      "fn": "TokenVault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "15"
    },
    "3722": {
      "fn": "TokenVault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3724": {
      "fn": "TokenVault.initialize",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "15"
    },
    "3725": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3726": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3727": {
      "fn": "TokenVault.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3728": {
      "fn": "TokenVault.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xEA3"
    },
    "3731": {
      "fn": "TokenVault.initialize",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3732": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3734": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3735": {
      "fn": "TokenVault.initialize",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3736": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "3739": {
      "op": "NOT"
    },
    "3740": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "15"
    },
    "3741": {
      "fn": "TokenVault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x101"
    },
    "3744": {
      "fn": "TokenVault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "15"
    },
    "3745": {
      "fn": "TokenVault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3746": {
      "fn": "TokenVault.initialize",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3747": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3748": {
      "fn": "TokenVault.initialize",
      "offset": [
        3751,
        3779
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 28,
      "value": "0xEAD"
    },
    "3751": {
      "fn": "TokenVault.initialize",
      "offset": [
        3764,
        3769
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3752": {
      "fn": "TokenVault.initialize",
      "offset": [
        3771,
        3778
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3753": {
      "fn": "TokenVault.initialize",
      "offset": [
        3751,
        3763
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23A9"
    },
    "3756": {
      "fn": "TokenVault.initialize",
      "jump": "i",
      "offset": [
        3751,
        3779
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3757": {
      "fn": "TokenVault.initialize",
      "offset": [
        3751,
        3779
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3758": {
      "fn": "TokenVault.initialize",
      "offset": [
        3789,
        3810
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 29,
      "value": "0xEB5"
    },
    "3761": {
      "fn": "TokenVault.initialize",
      "offset": [
        3789,
        3808
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2428"
    },
    "3764": {
      "fn": "TokenVault.initialize",
      "jump": "i",
      "offset": [
        3789,
        3810
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3765": {
      "fn": "TokenVault.initialize",
      "offset": [
        3789,
        3810
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3766": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3858
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 30,
      "value": "0x97"
    },
    "3768": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3769": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3776": {
      "op": "SHL"
    },
    "3777": {
      "op": "SUB"
    },
    "3778": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "DUP11",
      "path": "1"
    },
    "3779": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3780": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "AND",
      "path": "1"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3787": {
      "op": "SHL"
    },
    "3788": {
      "op": "SUB"
    },
    "3789": {
      "op": "NOT"
    },
    "3790": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3791": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3792": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "AND",
      "path": "1"
    },
    "3793": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "OR",
      "path": "1"
    },
    "3794": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3795": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3796": {
      "fn": "TokenVault.initialize",
      "offset": [
        3853,
        3867
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3797": {
      "fn": "TokenVault.initialize",
      "offset": [
        3877,
        3879
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 31,
      "value": "0x98"
    },
    "3799": {
      "fn": "TokenVault.initialize",
      "offset": [
        3877,
        3885
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3800": {
      "fn": "TokenVault.initialize",
      "offset": [
        3877,
        3885
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3801": {
      "fn": "TokenVault.initialize",
      "offset": [
        3877,
        3885
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3802": {
      "fn": "TokenVault.initialize",
      "offset": [
        3911,
        3917
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 32,
      "value": "0x3F480"
    },
    "3806": {
      "fn": "TokenVault.initialize",
      "offset": [
        3895,
        3908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9A"
    },
    "3808": {
      "fn": "TokenVault.initialize",
      "offset": [
        3895,
        3917
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3809": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3934
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0x9E"
    },
    "3811": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3812": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3813": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3814": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "DUP13",
      "path": "1"
    },
    "3815": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "AND",
      "path": "1"
    },
    "3816": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3817": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3818": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3819": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "AND",
      "path": "1"
    },
    "3820": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3821": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "OR",
      "path": "1"
    },
    "3822": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3823": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3824": {
      "fn": "TokenVault.initialize",
      "offset": [
        3955,
        3958
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 34,
      "value": "0x9F"
    },
    "3826": {
      "fn": "TokenVault.initialize",
      "offset": [
        3955,
        3965
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3827": {
      "fn": "TokenVault.initialize",
      "offset": [
        3955,
        3965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3828": {
      "fn": "TokenVault.initialize",
      "offset": [
        3955,
        3965
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3829": {
      "fn": "TokenVault.initialize",
      "offset": [
        3989,
        4004
      ],
      "op": "TIMESTAMP",
      "path": "1",
      "statement": 35
    },
    "3830": {
      "fn": "TokenVault.initialize",
      "offset": [
        3975,
        3986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "3832": {
      "fn": "TokenVault.initialize",
      "offset": [
        3975,
        4004
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3833": {
      "fn": "TokenVault.initialize",
      "offset": [
        4014,
        4026
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0x9D"
    },
    "3835": {
      "fn": "TokenVault.initialize",
      "offset": [
        4014,
        4043
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3836": {
      "fn": "TokenVault.initialize",
      "offset": [
        4014,
        4043
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3841": {
      "op": "SHL"
    },
    "3842": {
      "op": "NOT"
    },
    "3843": {
      "fn": "TokenVault.initialize",
      "offset": [
        4014,
        4043
      ],
      "op": "AND",
      "path": "1"
    },
    "3844": {
      "fn": "TokenVault.initialize",
      "offset": [
        4014,
        4043
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3845": {
      "fn": "TokenVault.initialize",
      "offset": [
        4014,
        4043
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3848": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4073
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 37
    },
    "3849": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4073
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3850": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4073
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3851": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4063
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA3"
    },
    "3853": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3855": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4073
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3856": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4073
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3858": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4073
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3859": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4073
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3860": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4086
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3861": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4086
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3862": {
      "fn": "TokenVault.initialize",
      "offset": [
        4053,
        4086
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3863": {
      "fn": "TokenVault.initialize",
      "offset": [
        4097,
        4121
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 38,
      "value": "0xF20"
    },
    "3866": {
      "fn": "TokenVault.initialize",
      "offset": [
        3927,
        3945
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3867": {
      "fn": "TokenVault.initialize",
      "offset": [
        4113,
        4120
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3868": {
      "fn": "TokenVault.initialize",
      "offset": [
        4097,
        4102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x249C"
    },
    "3871": {
      "fn": "TokenVault.initialize",
      "jump": "i",
      "offset": [
        4097,
        4121
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3872": {
      "fn": "TokenVault.initialize",
      "offset": [
        4097,
        4121
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3873": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3874": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "3875": {
      "fn": "TokenVault.initialize",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xF32"
    },
    "3878": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3879": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3881": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3882": {
      "fn": "TokenVault.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3883": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3886": {
      "op": "NOT"
    },
    "3887": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "15"
    },
    "3888": {
      "fn": "TokenVault.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3889": {
      "fn": "TokenVault.initialize",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "3890": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "3891": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "15"
    },
    "3892": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "POP",
      "path": "1"
    },
    "3893": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "POP",
      "path": "1"
    },
    "3894": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "POP",
      "path": "1"
    },
    "3895": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "POP",
      "path": "1"
    },
    "3896": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "POP",
      "path": "1"
    },
    "3897": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "POP",
      "path": "1"
    },
    "3898": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "POP",
      "path": "1"
    },
    "3899": {
      "fn": "TokenVault.initialize",
      "offset": [
        3516,
        4128
      ],
      "op": "POP",
      "path": "1"
    },
    "3900": {
      "fn": "TokenVault.initialize",
      "jump": "o",
      "offset": [
        3516,
        4128
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3901": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3902": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8400,
        8414
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 39,
      "value": "0x0"
    },
    "3904": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "3906": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8396
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3911": {
      "op": "SHL"
    },
    "3912": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8396
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3913": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8396
      ],
      "op": "DIV",
      "path": "1"
    },
    "3914": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3916": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8396
      ],
      "op": "AND",
      "path": "1"
    },
    "3917": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3919": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8414
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3920": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8414
      ],
      "op": "GT",
      "path": "1"
    },
    "3921": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8414
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3922": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5D"
    },
    "3925": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8414
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3926": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5D"
    },
    "3929": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FBB"
    },
    "3932": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        8384,
        8414
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3933": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8414
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3934": {
      "branch": 153,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8384,
        8414
      ],
      "op": "EQ",
      "path": "1"
    },
    "3935": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7A"
    },
    "3938": {
      "branch": 153,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3939": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3941": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3942": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3948": {
      "op": "SHL"
    },
    "3949": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3950": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3951": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3953": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "ADD",
      "path": "1"
    },
    "3954": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "3957": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3958": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3180"
    },
    "3961": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        8376,
        8458
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3962": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8376,
        8458
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3963": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8493,
        8503
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3964": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8468,
        8479
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3966": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8482,
        8504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3967": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8482,
        8504
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3968": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8482,
        8504
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3969": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8482,
        8492
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA3"
    },
    "3971": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8482,
        8504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3973": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8482,
        8504
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3974": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8482,
        8504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3976": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8482,
        8504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3977": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8482,
        8504
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3978": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8482,
        8504
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3979": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8522,
        8533
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 40
    },
    "3980": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8522,
        8533
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3981": {
      "branch": 154,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8522,
        8533
      ],
      "op": "SUB",
      "path": "1"
    },
    "3982": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFD0"
    },
    "3985": {
      "branch": 154,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3986": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3988": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3989": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3995": {
      "op": "SHL"
    },
    "3996": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3997": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4000": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4002": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4003": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "ADD",
      "path": "1"
    },
    "4004": {
      "op": "MSTORE"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4009": {
      "op": "DUP3"
    },
    "4010": {
      "op": "ADD"
    },
    "4011": {
      "op": "MSTORE"
    },
    "4012": {
      "op": "PUSH20",
      "value": "0x7570646174653A6E6F7420616E20757064617465"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4035": {
      "op": "SHL"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4038": {
      "op": "DUP3"
    },
    "4039": {
      "op": "ADD"
    },
    "4040": {
      "op": "MSTORE"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4043": {
      "op": "ADD"
    },
    "4044": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "4047": {
      "op": "JUMP"
    },
    "4048": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8514,
        8558
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4049": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8595,
        8605
      ],
      "op": "CALLER",
      "path": "1"
    },
    "4050": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8568,
        8582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4052": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4053": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4054": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4055": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3798
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x33"
    },
    "4057": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "4059": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4060": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4062": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4063": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "4064": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4065": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8621,
        8633
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "4067": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8621,
        8633
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4068": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4069": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4070": {
      "branch": 155,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8621,
        8638
      ],
      "op": "SUB",
      "path": "1"
    },
    "4071": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8617,
        10224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1001"
    },
    "4074": {
      "branch": 155,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8617,
        10224
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4075": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8654,
        8666
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 41,
      "value": "0xA2"
    },
    "4077": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8654,
        8675
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4078": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8654,
        8675
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4079": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8654,
        8675
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4080": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8704,
        8717
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 42,
      "value": "0xFF9"
    },
    "4083": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8713,
        8717
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4084": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8669,
        8675
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4085": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8704,
        8717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "4088": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        8704,
        8717
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4089": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8704,
        8717
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4090": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8689,
        8701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "4092": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8689,
        8717
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4093": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8617,
        10224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14E4"
    },
    "4096": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8617,
        10224
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4097": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8617,
        10224
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4098": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8796,
        8808
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "4100": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8796,
        8808
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4101": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8786,
        8792
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4102": {
      "branch": 156,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8786,
        8808
      ],
      "op": "EQ",
      "path": "1"
    },
    "4103": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8786,
        8820
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4104": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8786,
        8820
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4105": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8786,
        8820
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1011"
    },
    "4108": {
      "branch": 156,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8786,
        8820
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4109": {
      "op": "POP"
    },
    "4110": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8812,
        8820
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4111": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8812,
        8820
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4112": {
      "branch": 157,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8812,
        8820
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4113": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8786,
        8820
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4114": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8782,
        10224
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4115": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8782,
        10224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1020"
    },
    "4118": {
      "branch": 157,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8782,
        10224
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4119": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8851,
        8864
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 43,
      "value": "0xFF9"
    },
    "4122": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8860,
        8864
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4123": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8851,
        8857
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4124": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8851,
        8864
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "4127": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        8851,
        8864
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4128": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8782,
        10224
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4129": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8936,
        8939
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4130": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8943,
        8944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4132": {
      "branch": 158,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8936,
        8944
      ],
      "op": "SUB",
      "path": "1"
    },
    "4133": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8932,
        10224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x125B"
    },
    "4136": {
      "branch": 158,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8932,
        10224
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4137": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8960,
        8982
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4139": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9000,
        9012
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "4141": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9000,
        9012
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4142": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8985,
        8997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "4144": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8985,
        8997
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4145": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8985,
        9012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103A"
    },
    "4148": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8985,
        9012
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4149": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8985,
        9012
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4150": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8985,
        9012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "4153": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        8985,
        9012
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4154": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8985,
        9012
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4155": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8960,
        9012
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4156": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8960,
        9012
      ],
      "op": "POP",
      "path": "1"
    },
    "4157": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9027,
        9050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4159": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9111,
        9115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "4162": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9080,
        9088
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4201": {
      "op": "SHL"
    },
    "4202": {
      "op": "SUB"
    },
    "4203": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9106
      ],
      "op": "AND",
      "path": "1"
    },
    "4204": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9106
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9990A96"
    },
    "4209": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4211": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4212": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4213": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "4218": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "AND",
      "path": "1"
    },
    "4219": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "4221": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "SHL",
      "path": "1"
    },
    "4222": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4223": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4224": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4226": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "ADD",
      "path": "1"
    },
    "4227": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4229": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4231": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4232": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4233": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4234": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "SUB",
      "path": "1"
    },
    "4235": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4236": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4238": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4239": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "GAS",
      "path": "1"
    },
    "4240": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "CALL",
      "path": "1"
    },
    "4241": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4242": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4243": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4244": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A1"
    },
    "4247": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4248": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4249": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4251": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4252": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "4253": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4254": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4256": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4257": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4258": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "POP",
      "path": "1"
    },
    "4259": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "POP",
      "path": "1"
    },
    "4260": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "POP",
      "path": "1"
    },
    "4261": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "POP",
      "path": "1"
    },
    "4262": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4264": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4265": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4266": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4268": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "NOT",
      "path": "1"
    },
    "4269": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4271": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4272": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "ADD",
      "path": "1"
    },
    "4273": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "AND",
      "path": "1"
    },
    "4274": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4275": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "ADD",
      "path": "1"
    },
    "4276": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4277": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4279": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4280": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "POP",
      "path": "1"
    },
    "4281": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4282": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "ADD",
      "path": "1"
    },
    "4283": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4284": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10C5"
    },
    "4287": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4288": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4289": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3098"
    },
    "4292": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9070,
        9108
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4293": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9070,
        9108
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4294": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9053,
        9108
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10CF"
    },
    "4297": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9053,
        9108
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4298": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9053,
        9067
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4299": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9053,
        9108
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "4302": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9053,
        9108
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4303": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9053,
        9108
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4304": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9053,
        9115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D9"
    },
    "4307": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9053,
        9115
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4308": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9053,
        9115
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4309": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9053,
        9115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "4312": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9053,
        9115
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4313": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9053,
        9115
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4314": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9027,
        9115
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4315": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9027,
        9115
      ],
      "op": "POP",
      "path": "1"
    },
    "4316": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9145,
        9160
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 44
    },
    "4317": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9137,
        9141
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4318": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9137,
        9160
      ],
      "op": "LT",
      "path": "1"
    },
    "4319": {
      "branch": 159,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9137,
        9160
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4320": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x112B"
    },
    "4323": {
      "branch": 159,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4324": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4326": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4327": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4333": {
      "op": "SHL"
    },
    "4334": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4335": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4338": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4340": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4341": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "ADD",
      "path": "1"
    },
    "4342": {
      "op": "MSTORE"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4347": {
      "op": "DUP3"
    },
    "4348": {
      "op": "ADD"
    },
    "4349": {
      "op": "MSTORE"
    },
    "4350": {
      "op": "PUSH32",
      "value": "0x7570646174653A7265736572766520707269636520746F6F206C6F7700000000"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4385": {
      "op": "DUP3"
    },
    "4386": {
      "op": "ADD"
    },
    "4387": {
      "op": "MSTORE"
    },
    "4388": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4390": {
      "op": "ADD"
    },
    "4391": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "4394": {
      "op": "JUMP"
    },
    "4395": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9129,
        9193
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4396": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9207,
        9230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4398": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9291,
        9295
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "4401": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9260,
        9268
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4440": {
      "op": "SHL"
    },
    "4441": {
      "op": "SUB"
    },
    "4442": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9286
      ],
      "op": "AND",
      "path": "1"
    },
    "4443": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9286
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5410BFC9"
    },
    "4448": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4450": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4451": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4452": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "4457": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "AND",
      "path": "1"
    },
    "4458": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "4460": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "SHL",
      "path": "1"
    },
    "4461": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4462": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4463": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4465": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "ADD",
      "path": "1"
    },
    "4466": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4468": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4470": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4471": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4472": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4473": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "SUB",
      "path": "1"
    },
    "4474": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4475": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4477": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4478": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "GAS",
      "path": "1"
    },
    "4479": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "CALL",
      "path": "1"
    },
    "4480": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4481": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4482": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4483": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1190"
    },
    "4486": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4487": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4488": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4490": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4491": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "4492": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4493": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4495": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4496": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4497": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "POP",
      "path": "1"
    },
    "4498": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "POP",
      "path": "1"
    },
    "4499": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "POP",
      "path": "1"
    },
    "4500": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "POP",
      "path": "1"
    },
    "4501": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4503": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4504": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4505": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4507": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "NOT",
      "path": "1"
    },
    "4508": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4510": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4511": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "ADD",
      "path": "1"
    },
    "4512": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "AND",
      "path": "1"
    },
    "4513": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4514": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "ADD",
      "path": "1"
    },
    "4515": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4516": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4518": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4519": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "POP",
      "path": "1"
    },
    "4520": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4521": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "ADD",
      "path": "1"
    },
    "4522": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4523": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B4"
    },
    "4526": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4527": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4528": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3098"
    },
    "4531": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9250,
        9288
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4532": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9250,
        9288
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4533": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9233,
        9288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11BE"
    },
    "4536": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9233,
        9288
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4537": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9233,
        9247
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4538": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9233,
        9288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "4541": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9233,
        9288
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4542": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9233,
        9288
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4543": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9233,
        9295
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11C8"
    },
    "4546": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9233,
        9295
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4547": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9233,
        9295
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4548": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9233,
        9295
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "4551": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9233,
        9295
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4552": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9233,
        9295
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4553": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9207,
        9295
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4554": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9207,
        9295
      ],
      "op": "POP",
      "path": "1"
    },
    "4555": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9325,
        9340
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 45
    },
    "4556": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9317,
        9321
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4557": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9317,
        9340
      ],
      "op": "GT",
      "path": "1"
    },
    "4558": {
      "branch": 160,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9317,
        9340
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4559": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x121A"
    },
    "4562": {
      "branch": 160,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4563": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4565": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4572": {
      "op": "SHL"
    },
    "4573": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4574": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4577": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4579": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4580": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "ADD",
      "path": "1"
    },
    "4581": {
      "op": "MSTORE"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4584": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4586": {
      "op": "DUP3"
    },
    "4587": {
      "op": "ADD"
    },
    "4588": {
      "op": "MSTORE"
    },
    "4589": {
      "op": "PUSH32",
      "value": "0x7570646174653A7265736572766520707269636520746F6F2068696768000000"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4624": {
      "op": "DUP3"
    },
    "4625": {
      "op": "ADD"
    },
    "4626": {
      "op": "MSTORE"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4629": {
      "op": "ADD"
    },
    "4630": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "4633": {
      "op": "JUMP"
    },
    "4634": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9309,
        9374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4635": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9405,
        9411
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 46
    },
    "4636": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "4638": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9401
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4640": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4641": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4642": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4643": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x122C"
    },
    "4646": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4647": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4648": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C7"
    },
    "4651": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9389,
        9411
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4652": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4653": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4654": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4655": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9389,
        9411
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4656": {
      "op": "POP"
    },
    "4657": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9441,
        9454
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 47,
      "value": "0x123C"
    },
    "4660": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9441,
        9454
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4661": {
      "op": "POP"
    },
    "4662": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9450,
        9454
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4663": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9441,
        9447
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4664": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9441,
        9454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "4667": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9441,
        9454
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4668": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9441,
        9454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4669": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9437
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "4671": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9437
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4673": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4674": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4675": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4676": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124D"
    },
    "4679": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4680": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4681": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C7"
    },
    "4684": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9425,
        9454
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4685": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4686": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4687": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4688": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9425,
        9454
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4689": {
      "op": "POP"
    },
    "4690": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8932,
        10224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14E4"
    },
    "4693": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8932,
        10224
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "4694": {
      "op": "POP"
    },
    "4695": {
      "op": "POP"
    },
    "4696": {
      "op": "POP"
    },
    "4697": {
      "op": "POP"
    },
    "4698": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8932,
        10224
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4699": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8932,
        10224
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4700": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9523,
        9527
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4701": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9531,
        9532
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4703": {
      "branch": 161,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9523,
        9532
      ],
      "op": "SUB",
      "path": "1"
    },
    "4704": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9519,
        10224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A1"
    },
    "4707": {
      "branch": 161,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9519,
        10224
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4708": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9564,
        9570
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 48
    },
    "4709": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9560
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "4711": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9560
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4713": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4714": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4715": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4716": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1275"
    },
    "4719": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4720": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4721": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "4724": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9548,
        9570
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4725": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4726": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4727": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4728": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9548,
        9570
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4729": {
      "op": "POP"
    },
    "4730": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9600,
        9612
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 49,
      "value": "0x1285"
    },
    "4733": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9600,
        9612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4734": {
      "op": "POP"
    },
    "4735": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9609,
        9612
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4736": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9600,
        9606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4737": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9600,
        9612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "4740": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9600,
        9612
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4741": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9600,
        9612
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4742": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9596
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "4744": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9596
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4746": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4747": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4748": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4749": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1296"
    },
    "4752": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4753": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4754": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "4757": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9584,
        9612
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4758": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4759": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4760": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4761": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9584,
        9612
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4762": {
      "op": "POP"
    },
    "4763": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9519,
        10224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14E4"
    },
    "4766": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9519,
        10224
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4767": {
      "op": "POP"
    },
    "4768": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9519,
        10224
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4769": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9519,
        10224
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4770": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9692,
        9714
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4772": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9767,
        9773
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4773": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9752,
        9764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "4775": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9752,
        9764
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4776": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9752,
        9773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B1"
    },
    "4779": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9752,
        9773
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4780": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9752,
        9773
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4781": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9752,
        9773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "4784": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9752,
        9773
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4785": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9752,
        9773
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4786": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9734,
        9746
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12BB"
    },
    "4789": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9740,
        9746
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4790": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9734,
        9737
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4791": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9734,
        9746
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "4794": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9734,
        9746
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4795": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9734,
        9746
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4796": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9718,
        9730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "4798": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9718,
        9730
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4799": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9718,
        9747
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C8"
    },
    "4802": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9718,
        9747
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4803": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9718,
        9747
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4804": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9718,
        9747
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "4807": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9718,
        9747
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4808": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9718,
        9747
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4809": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9717,
        9774
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12D2"
    },
    "4812": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9717,
        9774
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4813": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9717,
        9774
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4814": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9717,
        9774
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "4817": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9717,
        9774
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4818": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9717,
        9774
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4819": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9692,
        9774
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4820": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9692,
        9774
      ],
      "op": "POP",
      "path": "1"
    },
    "4821": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9789,
        9812
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4823": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9873,
        9877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "4826": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9842,
        9850
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4865": {
      "op": "SHL"
    },
    "4866": {
      "op": "SUB"
    },
    "4867": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9868
      ],
      "op": "AND",
      "path": "1"
    },
    "4868": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9868
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9990A96"
    },
    "4873": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4875": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4876": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4877": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "4882": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "AND",
      "path": "1"
    },
    "4883": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "4885": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "SHL",
      "path": "1"
    },
    "4886": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4887": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4888": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4890": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "ADD",
      "path": "1"
    },
    "4891": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4893": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4895": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4896": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4897": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4898": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "SUB",
      "path": "1"
    },
    "4899": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4900": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4902": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4903": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "GAS",
      "path": "1"
    },
    "4904": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "CALL",
      "path": "1"
    },
    "4905": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4906": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4907": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4908": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1339"
    },
    "4911": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4912": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4913": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4915": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4916": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "4917": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4918": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4920": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4921": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4922": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "POP",
      "path": "1"
    },
    "4923": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "POP",
      "path": "1"
    },
    "4924": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "POP",
      "path": "1"
    },
    "4925": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "POP",
      "path": "1"
    },
    "4926": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4928": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4929": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "4930": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4932": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "NOT",
      "path": "1"
    },
    "4933": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "4935": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4936": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "ADD",
      "path": "1"
    },
    "4937": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "AND",
      "path": "1"
    },
    "4938": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4939": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "ADD",
      "path": "1"
    },
    "4940": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4941": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4943": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4944": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "POP",
      "path": "1"
    },
    "4945": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4946": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "ADD",
      "path": "1"
    },
    "4947": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4948": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135D"
    },
    "4951": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4952": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4953": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3098"
    },
    "4956": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9832,
        9870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4957": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9832,
        9870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4958": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9815,
        9870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1367"
    },
    "4961": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9815,
        9870
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4962": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9815,
        9829
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4963": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9815,
        9870
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "4966": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9815,
        9870
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4967": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9815,
        9870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4968": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9815,
        9877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1371"
    },
    "4971": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9815,
        9877
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4972": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9815,
        9877
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4973": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9815,
        9877
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "4976": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9815,
        9877
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4977": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9815,
        9877
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4978": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9789,
        9877
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4979": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9789,
        9877
      ],
      "op": "POP",
      "path": "1"
    },
    "4980": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9907,
        9922
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 50
    },
    "4981": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9899,
        9903
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4982": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9899,
        9922
      ],
      "op": "LT",
      "path": "1"
    },
    "4983": {
      "branch": 162,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9899,
        9922
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4984": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13C3"
    },
    "4987": {
      "branch": 162,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4988": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4990": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4997": {
      "op": "SHL"
    },
    "4998": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4999": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5002": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5004": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5005": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "ADD",
      "path": "1"
    },
    "5006": {
      "op": "MSTORE"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "5009": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5011": {
      "op": "DUP3"
    },
    "5012": {
      "op": "ADD"
    },
    "5013": {
      "op": "MSTORE"
    },
    "5014": {
      "op": "PUSH32",
      "value": "0x7570646174653A7265736572766520707269636520746F6F206C6F7700000000"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5049": {
      "op": "DUP3"
    },
    "5050": {
      "op": "ADD"
    },
    "5051": {
      "op": "MSTORE"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5054": {
      "op": "ADD"
    },
    "5055": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "5058": {
      "op": "JUMP"
    },
    "5059": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9891,
        9955
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5060": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9969,
        9992
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5062": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10053,
        10057
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "5065": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10022,
        10030
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5104": {
      "op": "SHL"
    },
    "5105": {
      "op": "SUB"
    },
    "5106": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10048
      ],
      "op": "AND",
      "path": "1"
    },
    "5107": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10048
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5410BFC9"
    },
    "5112": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5114": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5115": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5116": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "5121": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "AND",
      "path": "1"
    },
    "5122": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "5124": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "SHL",
      "path": "1"
    },
    "5125": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5126": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5127": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5129": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "ADD",
      "path": "1"
    },
    "5130": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5132": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5134": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5135": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5136": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5137": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "SUB",
      "path": "1"
    },
    "5138": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5139": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5141": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5142": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "GAS",
      "path": "1"
    },
    "5143": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "CALL",
      "path": "1"
    },
    "5144": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5145": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5146": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5147": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1428"
    },
    "5150": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5151": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5152": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5154": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5155": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "5156": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5157": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5159": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5160": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5161": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "POP",
      "path": "1"
    },
    "5162": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "POP",
      "path": "1"
    },
    "5163": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "POP",
      "path": "1"
    },
    "5164": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "POP",
      "path": "1"
    },
    "5165": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5167": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5168": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5169": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5171": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "NOT",
      "path": "1"
    },
    "5172": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5174": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5175": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "ADD",
      "path": "1"
    },
    "5176": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "AND",
      "path": "1"
    },
    "5177": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5178": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "ADD",
      "path": "1"
    },
    "5179": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5180": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5182": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5183": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "POP",
      "path": "1"
    },
    "5184": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5185": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "ADD",
      "path": "1"
    },
    "5186": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5187": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144C"
    },
    "5190": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5191": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5192": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3098"
    },
    "5195": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        10012,
        10050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5196": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10012,
        10050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5197": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9995,
        10050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1456"
    },
    "5200": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9995,
        10050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5201": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9995,
        10009
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5202": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9995,
        10050
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "5205": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9995,
        10050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5206": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9995,
        10050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5207": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9995,
        10057
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1460"
    },
    "5210": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9995,
        10057
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5211": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9995,
        10057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5212": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9995,
        10057
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "5215": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        9995,
        10057
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5216": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9995,
        10057
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5217": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9969,
        10057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5218": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9969,
        10057
      ],
      "op": "POP",
      "path": "1"
    },
    "5219": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10087,
        10102
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 51
    },
    "5220": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10079,
        10083
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5221": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10079,
        10102
      ],
      "op": "GT",
      "path": "1"
    },
    "5222": {
      "branch": 163,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10079,
        10102
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5223": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14B2"
    },
    "5226": {
      "branch": 163,
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5227": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5229": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5236": {
      "op": "SHL"
    },
    "5237": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5238": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5241": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5243": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5244": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "ADD",
      "path": "1"
    },
    "5245": {
      "op": "MSTORE"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5250": {
      "op": "DUP3"
    },
    "5251": {
      "op": "ADD"
    },
    "5252": {
      "op": "MSTORE"
    },
    "5253": {
      "op": "PUSH32",
      "value": "0x7570646174653A7265736572766520707269636520746F6F2068696768000000"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5288": {
      "op": "DUP3"
    },
    "5289": {
      "op": "ADD"
    },
    "5290": {
      "op": "MSTORE"
    },
    "5291": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5293": {
      "op": "ADD"
    },
    "5294": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "5297": {
      "op": "JUMP"
    },
    "5298": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10071,
        10136
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5299": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10200,
        10212
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 52,
      "value": "0x14BC"
    },
    "5302": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10209,
        10212
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5303": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10200,
        10206
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5304": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10200,
        10212
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "5307": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        10200,
        10212
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5308": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10200,
        10212
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5309": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10182,
        10195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14C6"
    },
    "5312": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10191,
        10195
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5313": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10182,
        10188
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5314": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10182,
        10195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "5317": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        10182,
        10195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5318": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10182,
        10195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5319": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "5321": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10178
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5322": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10196
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D3"
    },
    "5325": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10196
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5326": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10196
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5327": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10196
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C7"
    },
    "5330": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        10166,
        10196
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5331": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10196
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5332": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10213
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14DD"
    },
    "5335": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10213
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5336": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10213
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5337": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10213
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "5340": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "i",
      "offset": [
        10166,
        10213
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5341": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10166,
        10213
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5342": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10151,
        10163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "5344": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10151,
        10213
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5345": {
      "op": "POP"
    },
    "5346": {
      "op": "POP"
    },
    "5347": {
      "op": "POP"
    },
    "5348": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        9519,
        10224
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5349": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10245,
        10255
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 53
    },
    "5350": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5352": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5353": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5354": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5355": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10244
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA3"
    },
    "5357": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5359": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5360": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5362": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5363": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5364": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5365": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10256
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5366": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10263
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5367": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10263
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5368": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10234,
        10263
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5369": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 54
    },
    "5370": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C"
    },
    "5403": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5404": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1528"
    },
    "5407": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5408": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10259,
        10263
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5409": {
      "op": "DUP2"
    },
    "5410": {
      "op": "MSTORE"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5413": {
      "op": "ADD"
    },
    "5414": {
      "op": "SWAP1"
    },
    "5415": {
      "op": "JUMP"
    },
    "5416": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5417": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5419": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5420": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5421": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5422": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "SUB",
      "path": "1"
    },
    "5423": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5424": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        10279,
        10308
      ],
      "op": "LOG2",
      "path": "1"
    },
    "5425": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8366,
        10315
      ],
      "op": "POP",
      "path": "1"
    },
    "5426": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8366,
        10315
      ],
      "op": "POP",
      "path": "1"
    },
    "5427": {
      "fn": "TokenVault.updateUserPrice",
      "offset": [
        8318,
        10315
      ],
      "op": "POP",
      "path": "1"
    },
    "5428": {
      "fn": "TokenVault.updateUserPrice",
      "jump": "o",
      "offset": [
        8318,
        10315
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5429": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4840,
        5346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5430": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4927,
        4935
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 55,
      "value": "0x0"
    },
    "5463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5469": {
      "op": "SHL"
    },
    "5470": {
      "op": "SUB"
    },
    "5471": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4942
      ],
      "op": "AND",
      "path": "1"
    },
    "5472": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4942
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8DA5CB5B"
    },
    "5477": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5479": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5480": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5481": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "5486": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "AND",
      "path": "1"
    },
    "5487": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "5489": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "SHL",
      "path": "1"
    },
    "5490": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5491": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5492": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5494": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "ADD",
      "path": "1"
    },
    "5495": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5497": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5499": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5500": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5501": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5502": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "SUB",
      "path": "1"
    },
    "5503": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5504": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5505": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "GAS",
      "path": "1"
    },
    "5506": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "5507": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5508": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5509": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5510": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1593"
    },
    "5513": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5514": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5515": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5517": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5518": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "5519": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5520": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5522": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5523": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5524": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "POP",
      "path": "1"
    },
    "5525": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "POP",
      "path": "1"
    },
    "5526": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "POP",
      "path": "1"
    },
    "5527": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "POP",
      "path": "1"
    },
    "5528": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5530": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5531": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "5532": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5534": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "NOT",
      "path": "1"
    },
    "5535": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5537": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5538": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "ADD",
      "path": "1"
    },
    "5539": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "AND",
      "path": "1"
    },
    "5540": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5541": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "ADD",
      "path": "1"
    },
    "5542": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5543": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5545": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5546": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "POP",
      "path": "1"
    },
    "5547": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5548": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "ADD",
      "path": "1"
    },
    "5549": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5550": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15B7"
    },
    "5553": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5554": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5555": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3115"
    },
    "5558": {
      "fn": "TokenVault.removeReserve",
      "jump": "i",
      "offset": [
        4919,
        4944
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5559": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4919,
        4944
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5566": {
      "op": "SHL"
    },
    "5567": {
      "op": "SUB"
    },
    "5568": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4905,
        4944
      ],
      "op": "AND",
      "path": "1"
    },
    "5569": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4905,
        4915
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5576": {
      "op": "SHL"
    },
    "5577": {
      "op": "SUB"
    },
    "5578": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4905,
        4944
      ],
      "op": "AND",
      "path": "1"
    },
    "5579": {
      "branch": 164,
      "fn": "TokenVault.removeReserve",
      "offset": [
        4905,
        4944
      ],
      "op": "EQ",
      "path": "1"
    },
    "5580": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1608"
    },
    "5583": {
      "branch": 164,
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5584": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5586": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5593": {
      "op": "SHL"
    },
    "5594": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5595": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5598": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5600": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5601": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "ADD",
      "path": "1"
    },
    "5602": {
      "op": "MSTORE"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5607": {
      "op": "DUP3"
    },
    "5608": {
      "op": "ADD"
    },
    "5609": {
      "op": "MSTORE"
    },
    "5610": {
      "op": "PUSH14",
      "value": "0x3932B6B7BB329D3737BA1033B7BB"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "5627": {
      "op": "SHL"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5630": {
      "op": "DUP3"
    },
    "5631": {
      "op": "ADD"
    },
    "5632": {
      "op": "MSTORE"
    },
    "5633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5635": {
      "op": "ADD"
    },
    "5636": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "5639": {
      "op": "JUMP"
    },
    "5640": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4897,
        4963
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5641": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4997,
        5011
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 56,
      "value": "0x0"
    },
    "5643": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "5645": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        4993
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5650": {
      "op": "SHL"
    },
    "5651": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        4993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5652": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        4993
      ],
      "op": "DIV",
      "path": "1"
    },
    "5653": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5655": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        4993
      ],
      "op": "AND",
      "path": "1"
    },
    "5656": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        5011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "5658": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        5011
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5659": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        5011
      ],
      "op": "GT",
      "path": "1"
    },
    "5660": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        5011
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5661": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        5011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1628"
    },
    "5664": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        5011
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5665": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        5011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1628"
    },
    "5668": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        5011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FBB"
    },
    "5671": {
      "fn": "TokenVault.removeReserve",
      "jump": "i",
      "offset": [
        4981,
        5011
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5672": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        5011
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5673": {
      "branch": 165,
      "fn": "TokenVault.removeReserve",
      "offset": [
        4981,
        5011
      ],
      "op": "EQ",
      "path": "1"
    },
    "5674": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1645"
    },
    "5677": {
      "branch": 165,
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5678": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5680": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5681": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5687": {
      "op": "SHL"
    },
    "5688": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5689": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5690": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5692": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "ADD",
      "path": "1"
    },
    "5693": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "5696": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5697": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3180"
    },
    "5700": {
      "fn": "TokenVault.removeReserve",
      "jump": "i",
      "offset": [
        4973,
        5055
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5701": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        4973,
        5055
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5708": {
      "op": "SHL"
    },
    "5709": {
      "op": "SUB"
    },
    "5710": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5711": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "AND",
      "path": "1"
    },
    "5712": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5066,
        5077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5714": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5715": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5716": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5717": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5090
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA3"
    },
    "5719": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5721": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5722": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5724": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5725": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5726": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5727": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5080,
        5097
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5728": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5115,
        5123
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 57
    },
    "5729": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5115,
        5123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5730": {
      "branch": 166,
      "fn": "TokenVault.removeReserve",
      "offset": [
        5115,
        5123
      ],
      "op": "SUB",
      "path": "1"
    },
    "5731": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16A5"
    },
    "5734": {
      "branch": 166,
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5735": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5737": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5738": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5744": {
      "op": "SHL"
    },
    "5745": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5746": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5749": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5751": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5752": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "ADD",
      "path": "1"
    },
    "5753": {
      "op": "MSTORE"
    },
    "5754": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5758": {
      "op": "DUP3"
    },
    "5759": {
      "op": "ADD"
    },
    "5760": {
      "op": "MSTORE"
    },
    "5761": {
      "op": "PUSH20",
      "value": "0x7570646174653A6E6F7420616E20757064617465"
    },
    "5782": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5784": {
      "op": "SHL"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5787": {
      "op": "DUP3"
    },
    "5788": {
      "op": "ADD"
    },
    "5789": {
      "op": "MSTORE"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5792": {
      "op": "ADD"
    },
    "5793": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "5796": {
      "op": "JUMP"
    },
    "5797": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5107,
        5148
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5804": {
      "op": "SHL"
    },
    "5805": {
      "op": "SUB"
    },
    "5806": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "DUP3",
      "path": "16"
    },
    "5807": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "AND",
      "path": "16"
    },
    "5808": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5158,
        5172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5810": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "5811": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5812": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5813": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3798
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x33"
    },
    "5815": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "5817": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5818": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "5820": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "DUP2",
      "path": "16"
    },
    "5821": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "5822": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "5823": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5158,
        5191
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5824": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5158,
        5191
      ],
      "op": "POP",
      "path": "1"
    },
    "5825": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5218,
        5224
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 58
    },
    "5826": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5214
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "5828": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5214
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5830": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5831": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5832": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5833": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D2"
    },
    "5836": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5837": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5838": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "5841": {
      "fn": "TokenVault.removeReserve",
      "jump": "i",
      "offset": [
        5202,
        5224
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5842": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5843": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5844": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5845": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5202,
        5224
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5846": {
      "op": "POP"
    },
    "5847": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5250,
        5262
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 59,
      "value": "0x16E2"
    },
    "5850": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5250,
        5262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5851": {
      "op": "POP"
    },
    "5852": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5259,
        5262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5853": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5250,
        5256
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5854": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5250,
        5262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "5857": {
      "fn": "TokenVault.removeReserve",
      "jump": "i",
      "offset": [
        5250,
        5262
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5858": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5250,
        5262
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5859": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5246
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "5861": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5246
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5863": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5864": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5865": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5866": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16F3"
    },
    "5869": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5870": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5871": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "5874": {
      "fn": "TokenVault.removeReserve",
      "jump": "i",
      "offset": [
        5234,
        5262
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5875": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5876": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5877": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5878": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5234,
        5262
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5879": {
      "op": "POP"
    },
    "5880": {
      "op": "POP"
    },
    "5881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5887": {
      "op": "SHL"
    },
    "5888": {
      "op": "SUB"
    },
    "5889": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 60
    },
    "5890": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "AND",
      "path": "1"
    },
    "5891": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5301,
        5302
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5893": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5894": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5895": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5896": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA3"
    },
    "5898": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5900": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5901": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5902": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5903": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5905": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5906": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5907": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5298
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5908": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5302
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5909": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5302
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5910": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5281,
        5302
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5911": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5318,
        5339
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 61
    },
    "5912": {
      "op": "SWAP2"
    },
    "5913": {
      "op": "DUP3"
    },
    "5914": {
      "op": "MSTORE"
    },
    "5915": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5318,
        5339
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x64E6E7BD72B853C4E62FD6CEACA05A104700C70A4CB567C75C7F2242BA7F037C"
    },
    "5948": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5318,
        5339
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5949": {
      "op": "ADD"
    },
    "5950": {
      "fn": "TokenVault.removeReserve",
      "offset": [
        5318,
        5339
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1528"
    },
    "5953": {
      "op": "JUMP"
    },
    "5954": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6287,
        6631
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5955": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6361,
        6368
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 62,
      "value": "0x9E"
    },
    "5957": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6361,
        6368
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5964": {
      "op": "SHL"
    },
    "5965": {
      "op": "SUB"
    },
    "5966": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6361,
        6368
      ],
      "op": "AND",
      "path": "1"
    },
    "5967": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6347,
        6357
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5968": {
      "branch": 167,
      "fn": "TokenVault.updateFee",
      "offset": [
        6347,
        6368
      ],
      "op": "EQ",
      "path": "1"
    },
    "5969": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x176C"
    },
    "5972": {
      "branch": 167,
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5973": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5975": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5982": {
      "op": "SHL"
    },
    "5983": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5984": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5985": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5987": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "ADD",
      "path": "1"
    },
    "5988": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "5991": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5992": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x306C"
    },
    "5995": {
      "fn": "TokenVault.updateFee",
      "jump": "i",
      "offset": [
        6339,
        6391
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5996": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6339,
        6391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5997": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6416,
        6419
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 63,
      "value": "0x9F"
    },
    "5999": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6416,
        6419
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6000": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6409,
        6413
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6001": {
      "branch": 168,
      "fn": "TokenVault.updateFee",
      "offset": [
        6409,
        6419
      ],
      "op": "LT",
      "path": "1"
    },
    "6002": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B2"
    },
    "6005": {
      "branch": 168,
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6006": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6008": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6009": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6015": {
      "op": "SHL"
    },
    "6016": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6017": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6020": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6022": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6023": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "ADD",
      "path": "1"
    },
    "6024": {
      "op": "MSTORE"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6029": {
      "op": "DUP3"
    },
    "6030": {
      "op": "ADD"
    },
    "6031": {
      "op": "MSTORE"
    },
    "6032": {
      "op": "PUSH18",
      "value": "0x7570646174653A63616E2774207261697365"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6053": {
      "op": "SHL"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6056": {
      "op": "DUP3"
    },
    "6057": {
      "op": "ADD"
    },
    "6058": {
      "op": "MSTORE"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6061": {
      "op": "ADD"
    },
    "6062": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "6065": {
      "op": "JUMP"
    },
    "6066": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6401,
        6442
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6067": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6478,
        6486
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 64,
      "value": "0x0"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6106": {
      "op": "SHL"
    },
    "6107": {
      "op": "SUB"
    },
    "6108": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6501
      ],
      "op": "AND",
      "path": "1"
    },
    "6109": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6501
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8A364BC1"
    },
    "6114": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6116": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6117": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6118": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "6123": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "AND",
      "path": "1"
    },
    "6124": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "6126": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "SHL",
      "path": "1"
    },
    "6127": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6128": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6129": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6131": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "ADD",
      "path": "1"
    },
    "6132": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6134": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6136": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6137": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6138": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6139": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "SUB",
      "path": "1"
    },
    "6140": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6141": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6143": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP8",
      "path": "1"
    },
    "6144": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "GAS",
      "path": "1"
    },
    "6145": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "CALL",
      "path": "1"
    },
    "6146": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6147": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6148": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6149": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1812"
    },
    "6152": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6153": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6154": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6156": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6157": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "6158": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6159": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6161": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "REVERT",
      "path": "1"
    },
    "6162": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6163": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "POP",
      "path": "1"
    },
    "6164": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "POP",
      "path": "1"
    },
    "6165": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "POP",
      "path": "1"
    },
    "6166": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "POP",
      "path": "1"
    },
    "6167": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6169": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6170": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "6171": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6173": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "NOT",
      "path": "1"
    },
    "6174": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "6176": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6177": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "ADD",
      "path": "1"
    },
    "6178": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "AND",
      "path": "1"
    },
    "6179": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6180": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "ADD",
      "path": "1"
    },
    "6181": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6182": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6184": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6185": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "POP",
      "path": "1"
    },
    "6186": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6187": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "ADD",
      "path": "1"
    },
    "6188": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6189": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1836"
    },
    "6192": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6193": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6194": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3098"
    },
    "6197": {
      "fn": "TokenVault.updateFee",
      "jump": "i",
      "offset": [
        6468,
        6503
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6198": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6468,
        6503
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6199": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6460,
        6464
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6200": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6460,
        6503
      ],
      "op": "GT",
      "path": "1"
    },
    "6201": {
      "branch": 169,
      "fn": "TokenVault.updateFee",
      "offset": [
        6460,
        6503
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6202": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1891"
    },
    "6205": {
      "branch": 169,
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6206": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6208": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6215": {
      "op": "SHL"
    },
    "6216": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6217": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6220": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6222": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6223": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "ADD",
      "path": "1"
    },
    "6224": {
      "op": "MSTORE"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6227": {
      "op": "DUP1"
    },
    "6228": {
      "op": "DUP3"
    },
    "6229": {
      "op": "ADD"
    },
    "6230": {
      "op": "MSTORE"
    },
    "6231": {
      "op": "PUSH32",
      "value": "0x7570646174653A63616E6E6F7420696E63726561736520666565207468697320"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6266": {
      "op": "DUP3"
    },
    "6267": {
      "op": "ADD"
    },
    "6268": {
      "op": "MSTORE"
    },
    "6269": {
      "op": "PUSH4",
      "value": "0xD0D2CED"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6276": {
      "op": "SHL"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6279": {
      "op": "DUP3"
    },
    "6280": {
      "op": "ADD"
    },
    "6281": {
      "op": "MSTORE"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6284": {
      "op": "ADD"
    },
    "6285": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "6288": {
      "op": "JUMP"
    },
    "6289": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6452,
        6544
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6290": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6555,
        6567
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 65,
      "value": "0x1899"
    },
    "6293": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6555,
        6565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x258F"
    },
    "6296": {
      "fn": "TokenVault.updateFee",
      "jump": "i",
      "offset": [
        6555,
        6567
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6297": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6555,
        6567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6298": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6578,
        6581
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 66,
      "value": "0x9F"
    },
    "6300": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6578,
        6588
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6301": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6578,
        6588
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6302": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6578,
        6588
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6303": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6603,
        6624
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 67,
      "value": "0x40"
    },
    "6305": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6603,
        6624
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6306": {
      "op": "DUP2"
    },
    "6307": {
      "op": "DUP2"
    },
    "6308": {
      "op": "MSTORE"
    },
    "6309": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6603,
        6624
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x2D1DAE59A9E9EC0BC2AB19D45B7D10C8C55304FA08B40A7998E9F67F03223D04"
    },
    "6342": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6603,
        6624
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6345": {
      "op": "ADD"
    },
    "6346": {
      "fn": "TokenVault.updateFee",
      "offset": [
        6603,
        6624
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE05"
    },
    "6349": {
      "op": "JUMP"
    },
    "6350": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2648,
        2750
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6351": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2704,
        2717
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "6353": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2736,
        2743
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 68,
      "value": "0x37"
    },
    "6355": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2729,
        2743
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6356": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2729,
        2743
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6357": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2729,
        2743
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7A4"
    },
    "6360": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2729,
        2743
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6361": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2729,
        2743
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3032"
    },
    "6364": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2729,
        2743
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6365": {
      "fn": "TokenVault.cash",
      "offset": [
        13992,
        14393
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6366": {
      "fn": "TokenVault.cash",
      "offset": [
        14051,
        14062
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 69,
      "value": "0x2"
    },
    "6368": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14047
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "6370": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14047
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6375": {
      "op": "SHL"
    },
    "6376": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14047
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6377": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14047
      ],
      "op": "DIV",
      "path": "1"
    },
    "6378": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14047
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6380": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14047
      ],
      "op": "AND",
      "path": "1"
    },
    "6381": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "6383": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14062
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6384": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14062
      ],
      "op": "GT",
      "path": "1"
    },
    "6385": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14062
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6386": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18FD"
    },
    "6389": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14062
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6390": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18FD"
    },
    "6393": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FBB"
    },
    "6396": {
      "fn": "TokenVault.cash",
      "jump": "i",
      "offset": [
        14035,
        14062
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6397": {
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6398": {
      "branch": 170,
      "fn": "TokenVault.cash",
      "offset": [
        14035,
        14062
      ],
      "op": "EQ",
      "path": "1"
    },
    "6399": {
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x194A"
    },
    "6402": {
      "branch": 170,
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6403": {
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6405": {
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6412": {
      "op": "SHL"
    },
    "6413": {
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6414": {
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6417": {
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6419": {
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6420": {
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "ADD",
      "path": "1"
    },
    "6421": {
      "op": "MSTORE"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6426": {
      "op": "DUP3"
    },
    "6427": {
      "op": "ADD"
    },
    "6428": {
      "op": "MSTORE"
    },
    "6429": {
      "op": "PUSH32",
      "value": "0x636173683A7661756C74206E6F7420636C6F7365642079657400000000000000"
    },
    "6462": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6464": {
      "op": "DUP3"
    },
    "6465": {
      "op": "ADD"
    },
    "6466": {
      "op": "MSTORE"
    },
    "6467": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6469": {
      "op": "ADD"
    },
    "6470": {
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "6473": {
      "op": "JUMP"
    },
    "6474": {
      "fn": "TokenVault.cash",
      "offset": [
        14027,
        14092
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6475": {
      "fn": "TokenVault.cash",
      "offset": [
        14126,
        14136
      ],
      "op": "CALLER",
      "path": "1"
    },
    "6476": {
      "fn": "TokenVault.cash",
      "offset": [
        14102,
        14113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6478": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6479": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6480": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6481": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3798
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x33"
    },
    "6483": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6485": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6486": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6488": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6489": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6490": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3789,
        3807
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6491": {
      "branch": 171,
      "fn": "TokenVault.cash",
      "offset": [
        14155,
        14162
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 70
    },
    "6492": {
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19A7"
    },
    "6495": {
      "branch": 171,
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6496": {
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6498": {
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6499": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6503": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6505": {
      "op": "SHL"
    },
    "6506": {
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6507": {
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6510": {
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6512": {
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6513": {
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "ADD",
      "path": "1"
    },
    "6514": {
      "op": "MSTORE"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6519": {
      "op": "DUP3"
    },
    "6520": {
      "op": "ADD"
    },
    "6521": {
      "op": "MSTORE"
    },
    "6522": {
      "op": "PUSH32",
      "value": "0x636173683A6E6F20746F6B656E7320746F2063617368206F7574000000000000"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6557": {
      "op": "DUP3"
    },
    "6558": {
      "op": "ADD"
    },
    "6559": {
      "op": "MSTORE"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6562": {
      "op": "ADD"
    },
    "6563": {
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "6566": {
      "op": "JUMP"
    },
    "6567": {
      "fn": "TokenVault.cash",
      "offset": [
        14147,
        14193
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6568": {
      "fn": "TokenVault.cash",
      "offset": [
        14203,
        14216
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6570": {
      "fn": "TokenVault.cash",
      "offset": [
        14249,
        14262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19B2"
    },
    "6573": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x35"
    },
    "6575": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6576": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6577": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6578": {
      "fn": "TokenVault.cash",
      "offset": [
        14249,
        14262
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6579": {
      "fn": "TokenVault.cash",
      "offset": [
        14219,
        14246
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19BC"
    },
    "6582": {
      "fn": "TokenVault.cash",
      "offset": [
        14225,
        14246
      ],
      "op": "SELFBALANCE",
      "path": "1"
    },
    "6583": {
      "fn": "TokenVault.cash",
      "offset": [
        14219,
        14222
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6584": {
      "fn": "TokenVault.cash",
      "offset": [
        14219,
        14246
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "6587": {
      "fn": "TokenVault.cash",
      "jump": "i",
      "offset": [
        14219,
        14246
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6588": {
      "fn": "TokenVault.cash",
      "offset": [
        14219,
        14246
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6589": {
      "fn": "TokenVault.cash",
      "offset": [
        14219,
        14262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19C6"
    },
    "6592": {
      "fn": "TokenVault.cash",
      "offset": [
        14219,
        14262
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6593": {
      "fn": "TokenVault.cash",
      "offset": [
        14219,
        14262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6594": {
      "fn": "TokenVault.cash",
      "offset": [
        14219,
        14262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "6597": {
      "fn": "TokenVault.cash",
      "jump": "i",
      "offset": [
        14219,
        14262
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6598": {
      "fn": "TokenVault.cash",
      "offset": [
        14219,
        14262
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6599": {
      "fn": "TokenVault.cash",
      "offset": [
        14203,
        14262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6600": {
      "fn": "TokenVault.cash",
      "offset": [
        14203,
        14262
      ],
      "op": "POP",
      "path": "1"
    },
    "6601": {
      "fn": "TokenVault.cash",
      "offset": [
        14272,
        14294
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 71,
      "value": "0x19D2"
    },
    "6604": {
      "fn": "TokenVault.cash",
      "offset": [
        14278,
        14288
      ],
      "op": "CALLER",
      "path": "1"
    },
    "6605": {
      "fn": "TokenVault.cash",
      "offset": [
        14290,
        14293
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6606": {
      "fn": "TokenVault.cash",
      "offset": [
        14272,
        14277
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2869"
    },
    "6609": {
      "fn": "TokenVault.cash",
      "jump": "i",
      "offset": [
        14272,
        14294
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6610": {
      "fn": "TokenVault.cash",
      "offset": [
        14272,
        14294
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6611": {
      "fn": "TokenVault.cash",
      "offset": [
        14305,
        14347
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 72,
      "value": "0x19DC"
    },
    "6614": {
      "fn": "TokenVault.cash",
      "offset": [
        14328,
        14338
      ],
      "op": "CALLER",
      "path": "1"
    },
    "6615": {
      "fn": "TokenVault.cash",
      "offset": [
        14341,
        14346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6616": {
      "fn": "TokenVault.cash",
      "offset": [
        14305,
        14319
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20C2"
    },
    "6619": {
      "fn": "TokenVault.cash",
      "jump": "i",
      "offset": [
        14305,
        14347
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6620": {
      "fn": "TokenVault.cash",
      "offset": [
        14305,
        14347
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6621": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 73,
      "value": "0x40"
    },
    "6623": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6624": {
      "op": "DUP2"
    },
    "6625": {
      "op": "DUP2"
    },
    "6626": {
      "op": "MSTORE"
    },
    "6627": {
      "fn": "TokenVault.cash",
      "offset": [
        14368,
        14378
      ],
      "op": "CALLER",
      "path": "1"
    },
    "6628": {
      "fn": "TokenVault.cash",
      "offset": [
        14368,
        14378
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6629": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x730831A1E4AA2D187DDD8E03D7BEEAC760A3927DA5F112D645E0F8DF7494B367"
    },
    "6662": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6665": {
      "op": "ADD"
    },
    "6666": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6668": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6669": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6670": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6671": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "SUB",
      "path": "1"
    },
    "6672": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6673": {
      "fn": "TokenVault.cash",
      "offset": [
        14363,
        14386
      ],
      "op": "LOG2",
      "path": "1"
    },
    "6674": {
      "fn": "TokenVault.cash",
      "offset": [
        14017,
        14393
      ],
      "op": "POP",
      "path": "1"
    },
    "6675": {
      "fn": "TokenVault.cash",
      "offset": [
        14017,
        14393
      ],
      "op": "POP",
      "path": "1"
    },
    "6676": {
      "fn": "TokenVault.cash",
      "jump": "o",
      "offset": [
        13992,
        14393
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6677": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6678": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        901,
        911
      ],
      "op": "CALLER",
      "path": "21"
    },
    "6679": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6832,
        6836
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6681": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6682": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6683": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6684": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6886
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x34"
    },
    "6686": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6688": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6689": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6690": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6691": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6693": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6694": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6695": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6900
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6702": {
      "op": "SHL"
    },
    "6703": {
      "op": "SUB"
    },
    "6704": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6909
      ],
      "op": "DUP7",
      "path": "16"
    },
    "6705": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6909
      ],
      "op": "AND",
      "path": "16"
    },
    "6706": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6909
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6707": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6909
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6708": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6909
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6709": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6909
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6710": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6909
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6711": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6909
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6712": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6909
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6713": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6875,
        6909
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6714": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6927,
        6962
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 74
    },
    "6715": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6927,
        6962
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6716": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6927,
        6962
      ],
      "op": "LT",
      "path": "16"
    },
    "6717": {
      "branch": 188,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6927,
        6962
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6718": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1A97"
    },
    "6721": {
      "branch": 188,
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6722": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6724": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6725": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6729": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6731": {
      "op": "SHL"
    },
    "6732": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6733": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6736": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6738": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6739": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "ADD",
      "path": "16"
    },
    "6740": {
      "op": "MSTORE"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6743": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6745": {
      "op": "DUP3"
    },
    "6746": {
      "op": "ADD"
    },
    "6747": {
      "op": "MSTORE"
    },
    "6748": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "6781": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6783": {
      "op": "DUP3"
    },
    "6784": {
      "op": "ADD"
    },
    "6785": {
      "op": "MSTORE"
    },
    "6786": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "6792": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "6794": {
      "op": "SHL"
    },
    "6795": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6797": {
      "op": "DUP3"
    },
    "6798": {
      "op": "ADD"
    },
    "6799": {
      "op": "MSTORE"
    },
    "6800": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6802": {
      "op": "ADD"
    },
    "6803": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x867"
    },
    "6806": {
      "op": "JUMP"
    },
    "6807": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6919,
        7004
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6808": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7038,
        7105
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 75,
      "value": "0x1AA4"
    },
    "6811": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        901,
        911
      ],
      "op": "CALLER",
      "path": "21"
    },
    "6812": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7061,
        7068
      ],
      "op": "DUP6",
      "path": "16"
    },
    "6813": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7089,
        7104
      ],
      "op": "DUP6",
      "path": "16"
    },
    "6814": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7070,
        7086
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6815": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7070,
        7104
      ],
      "op": "SUB",
      "path": "16"
    },
    "6816": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7038,
        7046
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F9E"
    },
    "6819": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        7038,
        7105
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6820": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7038,
        7105
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6821": {
      "op": "POP"
    },
    "6822": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7133,
        7137
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 76,
      "value": "0x1"
    },
    "6824": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        7133,
        7137
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "6825": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6739,
        7144
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6826": {
      "op": "POP"
    },
    "6827": {
      "op": "POP"
    },
    "6828": {
      "op": "POP"
    },
    "6829": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "o",
      "offset": [
        6739,
        7144
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6830": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4017,
        4189
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6831": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4103,
        4107
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6833": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4119,
        4161
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 77,
      "value": "0x834"
    },
    "6836": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        901,
        911
      ],
      "op": "CALLER",
      "path": "21"
    },
    "6837": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4143,
        4152
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6838": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4154,
        4160
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6839": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4119,
        4128
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21C4"
    },
    "6842": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4119,
        4161
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6843": {
      "fn": "TokenVault.redeem",
      "offset": [
        13540,
        13886
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6844": {
      "fn": "TokenVault.redeem",
      "offset": [
        13601,
        13615
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 78,
      "value": "0x0"
    },
    "6846": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13597
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "6848": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13597
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6853": {
      "op": "SHL"
    },
    "6854": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13597
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6855": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13597
      ],
      "op": "DIV",
      "path": "1"
    },
    "6856": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13597
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "6858": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13597
      ],
      "op": "AND",
      "path": "1"
    },
    "6859": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13615
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "6861": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13615
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6862": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13615
      ],
      "op": "GT",
      "path": "1"
    },
    "6863": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13615
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6864": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13615
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ADB"
    },
    "6867": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13615
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6868": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13615
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ADB"
    },
    "6871": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13615
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FBB"
    },
    "6874": {
      "fn": "TokenVault.redeem",
      "jump": "i",
      "offset": [
        13585,
        13615
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6875": {
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13615
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6876": {
      "branch": 172,
      "fn": "TokenVault.redeem",
      "offset": [
        13585,
        13615
      ],
      "op": "EQ",
      "path": "1"
    },
    "6877": {
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B1E"
    },
    "6880": {
      "branch": 172,
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6881": {
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6883": {
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6890": {
      "op": "SHL"
    },
    "6891": {
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6892": {
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6895": {
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6897": {
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6898": {
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "ADD",
      "path": "1"
    },
    "6899": {
      "op": "MSTORE"
    },
    "6900": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "6902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6904": {
      "op": "DUP3"
    },
    "6905": {
      "op": "ADD"
    },
    "6906": {
      "op": "MSTORE"
    },
    "6907": {
      "op": "PUSH19",
      "value": "0x72656465656D3A6E6F2072656465656D696E67"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "6929": {
      "op": "SHL"
    },
    "6930": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6932": {
      "op": "DUP3"
    },
    "6933": {
      "op": "ADD"
    },
    "6934": {
      "op": "MSTORE"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6937": {
      "op": "ADD"
    },
    "6938": {
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "6941": {
      "op": "JUMP"
    },
    "6942": {
      "fn": "TokenVault.redeem",
      "offset": [
        13577,
        13639
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6943": {
      "fn": "TokenVault.redeem",
      "offset": [
        13649,
        13681
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 79,
      "value": "0x1B30"
    },
    "6946": {
      "fn": "TokenVault.redeem",
      "offset": [
        13655,
        13665
      ],
      "op": "CALLER",
      "path": "1"
    },
    "6947": {
      "fn": "TokenVault.redeem",
      "offset": [
        13667,
        13680
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B2B"
    },
    "6950": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x35"
    },
    "6952": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6953": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6954": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6955": {
      "fn": "TokenVault.redeem",
      "offset": [
        13667,
        13680
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6956": {
      "fn": "TokenVault.redeem",
      "offset": [
        13649,
        13654
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2869"
    },
    "6959": {
      "fn": "TokenVault.redeem",
      "jump": "i",
      "offset": [
        13649,
        13681
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6960": {
      "fn": "TokenVault.redeem",
      "offset": [
        13649,
        13681
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6961": {
      "fn": "TokenVault.redeem",
      "offset": [
        13747,
        13752
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 80,
      "value": "0x97"
    },
    "6963": {
      "fn": "TokenVault.redeem",
      "offset": [
        13747,
        13752
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6964": {
      "fn": "TokenVault.redeem",
      "offset": [
        13794,
        13796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x98"
    },
    "6966": {
      "fn": "TokenVault.redeem",
      "offset": [
        13794,
        13796
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6967": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6969": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6970": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6977": {
      "op": "SHL"
    },
    "6978": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6979": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6980": {
      "fn": "TokenVault.redeem",
      "offset": [
        13775,
        13779
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "6981": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6983": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6984": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "ADD",
      "path": "1"
    },
    "6985": {
      "op": "MSTORE"
    },
    "6986": {
      "fn": "TokenVault.redeem",
      "offset": [
        13782,
        13792
      ],
      "op": "CALLER",
      "path": "1"
    },
    "6987": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6989": {
      "op": "DUP3"
    },
    "6990": {
      "op": "ADD"
    },
    "6991": {
      "op": "MSTORE"
    },
    "6992": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6994": {
      "op": "DUP2"
    },
    "6995": {
      "op": "ADD"
    },
    "6996": {
      "op": "SWAP2"
    },
    "6997": {
      "op": "SWAP1"
    },
    "6998": {
      "op": "SWAP2"
    },
    "6999": {
      "op": "MSTORE"
    },
    "7000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7006": {
      "op": "SHL"
    },
    "7007": {
      "op": "SUB"
    },
    "7008": {
      "fn": "TokenVault.redeem",
      "offset": [
        13747,
        13752
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7009": {
      "fn": "TokenVault.redeem",
      "offset": [
        13747,
        13752
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7010": {
      "fn": "TokenVault.redeem",
      "offset": [
        13747,
        13752
      ],
      "op": "AND",
      "path": "1"
    },
    "7011": {
      "fn": "TokenVault.redeem",
      "offset": [
        13747,
        13752
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7012": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13766
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "7017": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13766
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7020": {
      "op": "ADD"
    },
    "7021": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7023": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7025": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7026": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7027": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7028": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "SUB",
      "path": "1"
    },
    "7029": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7030": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7032": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7033": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7034": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "7035": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7036": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7037": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7038": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B86"
    },
    "7041": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7042": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7044": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7045": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7046": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7047": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "POP",
      "path": "1"
    },
    "7048": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "GAS",
      "path": "1"
    },
    "7049": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "CALL",
      "path": "1"
    },
    "7050": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7051": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7052": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7053": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B9A"
    },
    "7056": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7057": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7058": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7060": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7061": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7062": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7063": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7065": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7066": {
      "fn": "TokenVault.redeem",
      "offset": [
        13739,
        13797
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7067": {
      "op": "POP"
    },
    "7068": {
      "op": "POP"
    },
    "7069": {
      "fn": "TokenVault.redeem",
      "offset": [
        13816,
        13828
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 81,
      "value": "0x9D"
    },
    "7071": {
      "fn": "TokenVault.redeem",
      "offset": [
        13816,
        13845
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7072": {
      "fn": "TokenVault.redeem",
      "offset": [
        13816,
        13845
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7077": {
      "op": "SHL"
    },
    "7078": {
      "op": "NOT"
    },
    "7079": {
      "fn": "TokenVault.redeem",
      "offset": [
        13816,
        13845
      ],
      "op": "AND",
      "path": "1"
    },
    "7080": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7084": {
      "op": "SHL"
    },
    "7085": {
      "fn": "TokenVault.redeem",
      "offset": [
        13816,
        13845
      ],
      "op": "OR",
      "path": "1"
    },
    "7086": {
      "fn": "TokenVault.redeem",
      "offset": [
        13816,
        13845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7087": {
      "fn": "TokenVault.redeem",
      "offset": [
        13816,
        13845
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7088": {
      "op": "POP"
    },
    "7089": {
      "op": "POP"
    },
    "7090": {
      "fn": "TokenVault.redeem",
      "offset": [
        13861,
        13879
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 82,
      "value": "0x40"
    },
    "7092": {
      "fn": "TokenVault.redeem",
      "offset": [
        13861,
        13879
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7093": {
      "fn": "TokenVault.redeem",
      "offset": [
        13868,
        13878
      ],
      "op": "CALLER",
      "path": "1"
    },
    "7094": {
      "fn": "TokenVault.redeem",
      "offset": [
        13868,
        13878
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7095": {
      "fn": "TokenVault.redeem",
      "offset": [
        13861,
        13879
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xD1B5EA7FE0F1C2FA09D49C2AA9B2200664BA57A734F1D95481D95B7F99AF991C"
    },
    "7128": {
      "fn": "TokenVault.redeem",
      "offset": [
        13861,
        13879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7131": {
      "op": "SWAP1"
    },
    "7132": {
      "fn": "TokenVault.redeem",
      "offset": [
        13861,
        13879
      ],
      "op": "LOG2",
      "path": "1"
    },
    "7133": {
      "fn": "TokenVault.redeem",
      "jump": "o",
      "offset": [
        13540,
        13886
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7134": {
      "fn": "TokenVault.start",
      "offset": [
        11680,
        12201
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7135": {
      "fn": "TokenVault.start",
      "offset": [
        11748,
        11762
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 83,
      "value": "0x0"
    },
    "7137": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "7139": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11744
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7144": {
      "op": "SHL"
    },
    "7145": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11744
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7146": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11744
      ],
      "op": "DIV",
      "path": "1"
    },
    "7147": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7149": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11744
      ],
      "op": "AND",
      "path": "1"
    },
    "7150": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11762
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "7152": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11762
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7153": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11762
      ],
      "op": "GT",
      "path": "1"
    },
    "7154": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11762
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7155": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BFE"
    },
    "7158": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11762
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7159": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BFE"
    },
    "7162": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FBB"
    },
    "7165": {
      "fn": "TokenVault.start",
      "jump": "i",
      "offset": [
        11732,
        11762
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7166": {
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11762
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7167": {
      "branch": 173,
      "fn": "TokenVault.start",
      "offset": [
        11732,
        11762
      ],
      "op": "EQ",
      "path": "1"
    },
    "7168": {
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C4B"
    },
    "7171": {
      "branch": 173,
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7172": {
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7174": {
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7181": {
      "op": "SHL"
    },
    "7182": {
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7183": {
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7186": {
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7188": {
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7189": {
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "ADD",
      "path": "1"
    },
    "7190": {
      "op": "MSTORE"
    },
    "7191": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7195": {
      "op": "DUP3"
    },
    "7196": {
      "op": "ADD"
    },
    "7197": {
      "op": "MSTORE"
    },
    "7198": {
      "op": "PUSH32",
      "value": "0x73746172743A6E6F2061756374696F6E20737461727473000000000000000000"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7233": {
      "op": "DUP3"
    },
    "7234": {
      "op": "ADD"
    },
    "7235": {
      "op": "MSTORE"
    },
    "7236": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7238": {
      "op": "ADD"
    },
    "7239": {
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "7242": {
      "op": "JUMP"
    },
    "7243": {
      "fn": "TokenVault.start",
      "offset": [
        11724,
        11790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7244": {
      "fn": "TokenVault.start",
      "offset": [
        11821,
        11835
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 84,
      "value": "0x1C53"
    },
    "7247": {
      "fn": "TokenVault.start",
      "offset": [
        11821,
        11833
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DF7"
    },
    "7250": {
      "fn": "TokenVault.start",
      "jump": "i",
      "offset": [
        11821,
        11835
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7251": {
      "fn": "TokenVault.start",
      "offset": [
        11821,
        11835
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7252": {
      "fn": "TokenVault.start",
      "offset": [
        11808,
        11817
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "7253": {
      "fn": "TokenVault.start",
      "offset": [
        11808,
        11835
      ],
      "op": "LT",
      "path": "1"
    },
    "7254": {
      "branch": 174,
      "fn": "TokenVault.start",
      "offset": [
        11808,
        11835
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7255": {
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C96"
    },
    "7258": {
      "branch": 174,
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7259": {
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7261": {
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7262": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7268": {
      "op": "SHL"
    },
    "7269": {
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7270": {
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7273": {
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7275": {
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7276": {
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "ADD",
      "path": "1"
    },
    "7277": {
      "op": "MSTORE"
    },
    "7278": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7282": {
      "op": "DUP3"
    },
    "7283": {
      "op": "ADD"
    },
    "7284": {
      "op": "MSTORE"
    },
    "7285": {
      "op": "PUSH17",
      "value": "0x1CDD185C9D0E9D1BDBC81B1BDDC8189A59"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "7305": {
      "op": "SHL"
    },
    "7306": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7308": {
      "op": "DUP3"
    },
    "7309": {
      "op": "ADD"
    },
    "7310": {
      "op": "MSTORE"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7313": {
      "op": "ADD"
    },
    "7314": {
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "7317": {
      "op": "JUMP"
    },
    "7318": {
      "fn": "TokenVault.start",
      "offset": [
        11800,
        11857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7319": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x35"
    },
    "7321": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "7322": {
      "fn": "TokenVault.start",
      "offset": [
        11908,
        11916
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 85,
      "value": "0x0"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7361": {
      "op": "SHL"
    },
    "7362": {
      "op": "SUB"
    },
    "7363": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11935
      ],
      "op": "AND",
      "path": "1"
    },
    "7364": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11935
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x32977C73"
    },
    "7369": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7371": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7372": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7373": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "7378": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "AND",
      "path": "1"
    },
    "7379": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "7381": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "SHL",
      "path": "1"
    },
    "7382": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7383": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7384": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7386": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "ADD",
      "path": "1"
    },
    "7387": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7389": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7391": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7392": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7393": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7394": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "SUB",
      "path": "1"
    },
    "7395": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7396": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7398": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7399": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "GAS",
      "path": "1"
    },
    "7400": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "CALL",
      "path": "1"
    },
    "7401": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7402": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7403": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7404": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CF9"
    },
    "7407": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7408": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7409": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7411": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7412": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7413": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7414": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7416": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7417": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7418": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "POP",
      "path": "1"
    },
    "7419": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "POP",
      "path": "1"
    },
    "7420": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "POP",
      "path": "1"
    },
    "7421": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "POP",
      "path": "1"
    },
    "7422": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7424": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7425": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7426": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7428": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "NOT",
      "path": "1"
    },
    "7429": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7431": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7432": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "ADD",
      "path": "1"
    },
    "7433": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "AND",
      "path": "1"
    },
    "7434": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7435": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "ADD",
      "path": "1"
    },
    "7436": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7437": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7439": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7440": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "POP",
      "path": "1"
    },
    "7441": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7442": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "ADD",
      "path": "1"
    },
    "7443": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7444": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D1D"
    },
    "7447": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7448": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7449": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3098"
    },
    "7452": {
      "fn": "TokenVault.start",
      "jump": "i",
      "offset": [
        11898,
        11937
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7453": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11937
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7454": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11953
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D27"
    },
    "7457": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11953
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7458": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11953
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7459": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11953
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "7462": {
      "fn": "TokenVault.start",
      "jump": "i",
      "offset": [
        11898,
        11953
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7463": {
      "fn": "TokenVault.start",
      "offset": [
        11898,
        11953
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7464": {
      "fn": "TokenVault.start",
      "offset": [
        11875,
        11887
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "7466": {
      "fn": "TokenVault.start",
      "offset": [
        11875,
        11887
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7467": {
      "fn": "TokenVault.start",
      "offset": [
        11875,
        11894
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D36"
    },
    "7470": {
      "fn": "TokenVault.start",
      "offset": [
        11875,
        11894
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7471": {
      "fn": "TokenVault.start",
      "offset": [
        11890,
        11894
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "7474": {
      "fn": "TokenVault.start",
      "offset": [
        11875,
        11894
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "7477": {
      "fn": "TokenVault.start",
      "jump": "i",
      "offset": [
        11875,
        11894
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7478": {
      "fn": "TokenVault.start",
      "offset": [
        11875,
        11894
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7479": {
      "fn": "TokenVault.start",
      "offset": [
        11875,
        11953
      ],
      "op": "LT",
      "path": "1"
    },
    "7480": {
      "branch": 175,
      "fn": "TokenVault.start",
      "offset": [
        11875,
        11953
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7481": {
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D84"
    },
    "7484": {
      "branch": 175,
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7485": {
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7487": {
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7488": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7494": {
      "op": "SHL"
    },
    "7495": {
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7496": {
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7499": {
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7501": {
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7502": {
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "ADD",
      "path": "1"
    },
    "7503": {
      "op": "MSTORE"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7508": {
      "op": "DUP3"
    },
    "7509": {
      "op": "ADD"
    },
    "7510": {
      "op": "MSTORE"
    },
    "7511": {
      "op": "PUSH32",
      "value": "0x73746172743A6E6F7420656E6F75676820766F74657273000000000000000000"
    },
    "7544": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7546": {
      "op": "DUP3"
    },
    "7547": {
      "op": "ADD"
    },
    "7548": {
      "op": "MSTORE"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7551": {
      "op": "ADD"
    },
    "7552": {
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "7555": {
      "op": "JUMP"
    },
    "7556": {
      "fn": "TokenVault.start",
      "offset": [
        11867,
        11981
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7557": {
      "fn": "TokenVault.start",
      "offset": [
        12031,
        12044
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 86,
      "value": "0x9A"
    },
    "7559": {
      "fn": "TokenVault.start",
      "offset": [
        12031,
        12044
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7560": {
      "fn": "TokenVault.start",
      "offset": [
        12013,
        12044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D91"
    },
    "7563": {
      "fn": "TokenVault.start",
      "offset": [
        12013,
        12044
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7564": {
      "fn": "TokenVault.start",
      "offset": [
        12013,
        12028
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "7565": {
      "fn": "TokenVault.start",
      "offset": [
        12013,
        12044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C7"
    },
    "7568": {
      "fn": "TokenVault.start",
      "jump": "i",
      "offset": [
        12013,
        12044
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7569": {
      "fn": "TokenVault.start",
      "offset": [
        12013,
        12044
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7570": {
      "fn": "TokenVault.start",
      "offset": [
        12000,
        12010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x99"
    },
    "7572": {
      "fn": "TokenVault.start",
      "offset": [
        12000,
        12044
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7573": {
      "fn": "TokenVault.start",
      "offset": [
        12054,
        12066
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 87,
      "value": "0x9D"
    },
    "7575": {
      "fn": "TokenVault.start",
      "offset": [
        12054,
        12079
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7576": {
      "fn": "TokenVault.start",
      "offset": [
        12054,
        12079
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7577": {
      "fn": "TokenVault.start",
      "offset": [
        12102,
        12111
      ],
      "op": "CALLVALUE",
      "path": "1",
      "statement": 88
    },
    "7578": {
      "fn": "TokenVault.start",
      "offset": [
        12090,
        12099
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9C"
    },
    "7580": {
      "fn": "TokenVault.start",
      "offset": [
        12090,
        12111
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7581": {
      "fn": "TokenVault.start",
      "offset": [
        12090,
        12111
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7582": {
      "fn": "TokenVault.start",
      "offset": [
        12090,
        12111
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7589": {
      "op": "SHL"
    },
    "7590": {
      "op": "SUB"
    },
    "7591": {
      "op": "NOT"
    },
    "7592": {
      "fn": "TokenVault.start",
      "offset": [
        12121,
        12150
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 89
    },
    "7593": {
      "fn": "TokenVault.start",
      "offset": [
        12121,
        12150
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7594": {
      "fn": "TokenVault.start",
      "offset": [
        12121,
        12150
      ],
      "op": "AND",
      "path": "1"
    },
    "7595": {
      "fn": "TokenVault.start",
      "offset": [
        12139,
        12149
      ],
      "op": "CALLER",
      "path": "1"
    },
    "7596": {
      "fn": "TokenVault.start",
      "offset": [
        12121,
        12150
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7597": {
      "fn": "TokenVault.start",
      "offset": [
        12121,
        12150
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7598": {
      "fn": "TokenVault.start",
      "offset": [
        12121,
        12150
      ],
      "op": "OR",
      "path": "1"
    },
    "7599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7603": {
      "op": "SHL"
    },
    "7604": {
      "fn": "TokenVault.start",
      "offset": [
        12121,
        12150
      ],
      "op": "OR",
      "path": "1"
    },
    "7605": {
      "fn": "TokenVault.start",
      "offset": [
        12121,
        12150
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7606": {
      "fn": "TokenVault.start",
      "offset": [
        12121,
        12150
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7607": {
      "fn": "TokenVault.start",
      "offset": [
        12121,
        12150
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7608": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 90,
      "value": "0x40"
    },
    "7610": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7611": {
      "op": "SWAP1"
    },
    "7612": {
      "op": "DUP2"
    },
    "7613": {
      "op": "MSTORE"
    },
    "7614": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xCFB9C5312B25EC7B809D61E638DF25F749EAE5D5C25399E1C93D1D319BFD5821"
    },
    "7647": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7650": {
      "op": "ADD"
    },
    "7651": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7652": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7654": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7655": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7656": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7657": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "SUB",
      "path": "1"
    },
    "7658": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7659": {
      "fn": "TokenVault.start",
      "offset": [
        12166,
        12194
      ],
      "op": "LOG2",
      "path": "1"
    },
    "7660": {
      "fn": "TokenVault.start",
      "jump": "o",
      "offset": [
        11680,
        12201
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7661": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6716,
        6775
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7662": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6756,
        6768
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 91,
      "value": "0x1DF5"
    },
    "7665": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6756,
        6766
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x258F"
    },
    "7668": {
      "fn": "TokenVault.claimFees",
      "jump": "i",
      "offset": [
        6756,
        6768
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7669": {
      "fn": "TokenVault.claimFees",
      "offset": [
        6756,
        6768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7670": {
      "fn": "TokenVault.claimFees",
      "jump": "o",
      "offset": [
        6716,
        6775
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7671": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7672": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4302,
        4309
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7674": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4328,
        4340
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 92,
      "value": "0xA2"
    },
    "7676": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4328,
        4340
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7677": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4344,
        4345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7679": {
      "branch": 176,
      "fn": "TokenVault.reservePrice",
      "offset": [
        4328,
        4345
      ],
      "op": "EQ",
      "path": "1"
    },
    "7680": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4328,
        4379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E18"
    },
    "7683": {
      "branch": 176,
      "fn": "TokenVault.reservePrice",
      "offset": [
        4328,
        4379
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7684": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4367,
        4379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "7686": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4367,
        4379
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7687": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4352,
        4364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "7689": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4352,
        4364
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7690": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4352,
        4379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E13"
    },
    "7693": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7694": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4352,
        4379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7695": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4352,
        4379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "7698": {
      "fn": "TokenVault.reservePrice",
      "jump": "i",
      "offset": [
        4352,
        4379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7699": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4352,
        4379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7700": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4321,
        4379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7701": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4321,
        4379
      ],
      "op": "POP",
      "path": "1"
    },
    "7702": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4258,
        4386
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7703": {
      "fn": "TokenVault.reservePrice",
      "jump": "o",
      "offset": [
        4258,
        4386
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7704": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4328,
        4379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7705": {
      "op": "POP"
    },
    "7706": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4348,
        4349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7708": {
      "fn": "TokenVault.reservePrice",
      "offset": [
        4348,
        4349
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7709": {
      "fn": "TokenVault.reservePrice",
      "jump": "o",
      "offset": [
        4258,
        4386
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7710": {
      "fn": "TokenVault.end",
      "offset": [
        13066,
        13444
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7711": {
      "fn": "TokenVault.end",
      "offset": [
        13124,
        13134
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 93,
      "value": "0x1"
    },
    "7713": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13120
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "7715": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13120
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7720": {
      "op": "SHL"
    },
    "7721": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13120
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7722": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13120
      ],
      "op": "DIV",
      "path": "1"
    },
    "7723": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13120
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "7725": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13120
      ],
      "op": "AND",
      "path": "1"
    },
    "7726": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "7728": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13134
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7729": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13134
      ],
      "op": "GT",
      "path": "1"
    },
    "7730": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13134
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7731": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E3E"
    },
    "7734": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13134
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7735": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E3E"
    },
    "7738": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13134
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FBB"
    },
    "7741": {
      "fn": "TokenVault.end",
      "jump": "i",
      "offset": [
        13108,
        13134
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7742": {
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13134
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7743": {
      "branch": 177,
      "fn": "TokenVault.end",
      "offset": [
        13108,
        13134
      ],
      "op": "EQ",
      "path": "1"
    },
    "7744": {
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E8B"
    },
    "7747": {
      "branch": 177,
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7748": {
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7750": {
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7757": {
      "op": "SHL"
    },
    "7758": {
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7759": {
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7762": {
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7764": {
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7765": {
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "ADD",
      "path": "1"
    },
    "7766": {
      "op": "MSTORE"
    },
    "7767": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7771": {
      "op": "DUP3"
    },
    "7772": {
      "op": "ADD"
    },
    "7773": {
      "op": "MSTORE"
    },
    "7774": {
      "op": "PUSH32",
      "value": "0x656E643A7661756C742068617320616C726561647920636C6F73656400000000"
    },
    "7807": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7809": {
      "op": "DUP3"
    },
    "7810": {
      "op": "ADD"
    },
    "7811": {
      "op": "MSTORE"
    },
    "7812": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7814": {
      "op": "ADD"
    },
    "7815": {
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "7818": {
      "op": "JUMP"
    },
    "7819": {
      "fn": "TokenVault.end",
      "offset": [
        13100,
        13167
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7820": {
      "fn": "TokenVault.end",
      "offset": [
        13204,
        13214
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 94,
      "value": "0x99"
    },
    "7822": {
      "fn": "TokenVault.end",
      "offset": [
        13204,
        13214
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7823": {
      "fn": "TokenVault.end",
      "offset": [
        13185,
        13200
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "7824": {
      "fn": "TokenVault.end",
      "offset": [
        13185,
        13214
      ],
      "op": "LT",
      "path": "1"
    },
    "7825": {
      "branch": 178,
      "fn": "TokenVault.end",
      "offset": [
        13185,
        13214
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7826": {
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ED0"
    },
    "7829": {
      "branch": 178,
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7830": {
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7832": {
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7839": {
      "op": "SHL"
    },
    "7840": {
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7841": {
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7844": {
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7846": {
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7847": {
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "ADD",
      "path": "1"
    },
    "7848": {
      "op": "MSTORE"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "7851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7853": {
      "op": "DUP3"
    },
    "7854": {
      "op": "ADD"
    },
    "7855": {
      "op": "MSTORE"
    },
    "7856": {
      "op": "PUSH16",
      "value": "0x656E643A61756374696F6E206C697665"
    },
    "7873": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7875": {
      "op": "SHL"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7878": {
      "op": "DUP3"
    },
    "7879": {
      "op": "ADD"
    },
    "7880": {
      "op": "MSTORE"
    },
    "7881": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7883": {
      "op": "ADD"
    },
    "7884": {
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "7887": {
      "op": "JUMP"
    },
    "7888": {
      "fn": "TokenVault.end",
      "offset": [
        13177,
        13235
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7889": {
      "fn": "TokenVault.end",
      "offset": [
        13246,
        13258
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 95,
      "value": "0x1ED8"
    },
    "7892": {
      "fn": "TokenVault.end",
      "offset": [
        13246,
        13256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x258F"
    },
    "7895": {
      "fn": "TokenVault.end",
      "jump": "i",
      "offset": [
        13246,
        13258
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7896": {
      "fn": "TokenVault.end",
      "offset": [
        13246,
        13258
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7897": {
      "fn": "TokenVault.end",
      "offset": [
        13314,
        13319
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 96,
      "value": "0x97"
    },
    "7899": {
      "fn": "TokenVault.end",
      "offset": [
        13314,
        13319
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7900": {
      "fn": "TokenVault.end",
      "offset": [
        13349,
        13356
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "7902": {
      "fn": "TokenVault.end",
      "offset": [
        13349,
        13356
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7903": {
      "fn": "TokenVault.end",
      "offset": [
        13358,
        13360
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x98"
    },
    "7905": {
      "fn": "TokenVault.end",
      "offset": [
        13358,
        13360
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7906": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7908": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7909": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7916": {
      "op": "SHL"
    },
    "7917": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7918": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7919": {
      "fn": "TokenVault.end",
      "offset": [
        13342,
        13346
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "7920": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7922": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7923": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "ADD",
      "path": "1"
    },
    "7924": {
      "op": "MSTORE"
    },
    "7925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7931": {
      "op": "SHL"
    },
    "7932": {
      "op": "SUB"
    },
    "7933": {
      "fn": "TokenVault.end",
      "offset": [
        13349,
        13356
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7934": {
      "fn": "TokenVault.end",
      "offset": [
        13349,
        13356
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7935": {
      "fn": "TokenVault.end",
      "offset": [
        13349,
        13356
      ],
      "op": "AND",
      "path": "1"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7938": {
      "op": "DUP3"
    },
    "7939": {
      "op": "ADD"
    },
    "7940": {
      "op": "MSTORE"
    },
    "7941": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7943": {
      "op": "DUP2"
    },
    "7944": {
      "op": "ADD"
    },
    "7945": {
      "op": "SWAP2"
    },
    "7946": {
      "op": "SWAP1"
    },
    "7947": {
      "op": "SWAP2"
    },
    "7948": {
      "op": "MSTORE"
    },
    "7949": {
      "fn": "TokenVault.end",
      "offset": [
        13314,
        13319
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7950": {
      "fn": "TokenVault.end",
      "offset": [
        13314,
        13319
      ],
      "op": "AND",
      "path": "1"
    },
    "7951": {
      "fn": "TokenVault.end",
      "offset": [
        13314,
        13319
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7952": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13333
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "7957": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13333
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7958": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7960": {
      "op": "ADD"
    },
    "7961": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7963": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7965": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7966": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7967": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7968": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "SUB",
      "path": "1"
    },
    "7969": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7970": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7972": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7973": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7974": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "7975": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7976": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7977": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7978": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F32"
    },
    "7981": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7982": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7984": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7985": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7986": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7987": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "POP",
      "path": "1"
    },
    "7988": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "GAS",
      "path": "1"
    },
    "7989": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "CALL",
      "path": "1"
    },
    "7990": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7991": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7992": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7993": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F46"
    },
    "7996": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7997": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7998": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8000": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8001": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "8002": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8003": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8005": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8006": {
      "fn": "TokenVault.end",
      "offset": [
        13306,
        13361
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8007": {
      "op": "POP"
    },
    "8008": {
      "op": "POP"
    },
    "8009": {
      "fn": "TokenVault.end",
      "offset": [
        13372,
        13384
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 97,
      "value": "0x9D"
    },
    "8011": {
      "fn": "TokenVault.end",
      "offset": [
        13372,
        13398
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8012": {
      "fn": "TokenVault.end",
      "offset": [
        13372,
        13398
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8015": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "8017": {
      "op": "SHL"
    },
    "8018": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8022": {
      "op": "SHL"
    },
    "8023": {
      "op": "NOT"
    },
    "8024": {
      "fn": "TokenVault.end",
      "offset": [
        13372,
        13398
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8025": {
      "fn": "TokenVault.end",
      "offset": [
        13372,
        13398
      ],
      "op": "AND",
      "path": "1"
    },
    "8026": {
      "fn": "TokenVault.end",
      "offset": [
        13372,
        13398
      ],
      "op": "OR",
      "path": "1"
    },
    "8027": {
      "fn": "TokenVault.end",
      "offset": [
        13372,
        13398
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8028": {
      "fn": "TokenVault.end",
      "offset": [
        13372,
        13398
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8029": {
      "fn": "TokenVault.end",
      "offset": [
        13372,
        13398
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "8030": {
      "fn": "TokenVault.end",
      "offset": [
        13427,
        13436
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 98,
      "value": "0x9C"
    },
    "8032": {
      "fn": "TokenVault.end",
      "offset": [
        13427,
        13436
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8033": {
      "fn": "TokenVault.end",
      "offset": [
        13414,
        13437
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8035": {
      "fn": "TokenVault.end",
      "offset": [
        13414,
        13437
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8036": {
      "op": "SWAP1"
    },
    "8037": {
      "op": "DUP2"
    },
    "8038": {
      "op": "MSTORE"
    },
    "8039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8045": {
      "op": "SHL"
    },
    "8046": {
      "op": "SUB"
    },
    "8047": {
      "fn": "TokenVault.end",
      "offset": [
        13418,
        13425
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8048": {
      "fn": "TokenVault.end",
      "offset": [
        13418,
        13425
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8049": {
      "fn": "TokenVault.end",
      "offset": [
        13418,
        13425
      ],
      "op": "AND",
      "path": "1"
    },
    "8050": {
      "fn": "TokenVault.end",
      "offset": [
        13418,
        13425
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8051": {
      "op": "POP"
    },
    "8052": {
      "fn": "TokenVault.end",
      "offset": [
        13414,
        13437
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8B01F9DD0400D6A1E84369A5FB8F6033934856FFA8EBADD707DCA302AB551695"
    },
    "8085": {
      "fn": "TokenVault.end",
      "offset": [
        13414,
        13437
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8086": {
      "op": "POP"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8089": {
      "op": "ADD"
    },
    "8090": {
      "fn": "TokenVault.end",
      "offset": [
        13414,
        13437
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DE3"
    },
    "8093": {
      "op": "JUMP"
    },
    "8094": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10315,
        10685
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8101": {
      "op": "SHL"
    },
    "8102": {
      "op": "SUB"
    },
    "8103": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10446,
        10465
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 99
    },
    "8104": {
      "branch": 189,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10446,
        10465
      ],
      "op": "AND",
      "path": "16"
    },
    "8105": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2000"
    },
    "8108": {
      "branch": 189,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8109": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8111": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8112": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8116": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8118": {
      "op": "SHL"
    },
    "8119": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8120": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8123": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8125": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8126": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "ADD",
      "path": "16"
    },
    "8127": {
      "op": "MSTORE"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8130": {
      "op": "DUP1"
    },
    "8131": {
      "op": "DUP3"
    },
    "8132": {
      "op": "ADD"
    },
    "8133": {
      "op": "MSTORE"
    },
    "8134": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "8167": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8169": {
      "op": "DUP3"
    },
    "8170": {
      "op": "ADD"
    },
    "8171": {
      "op": "MSTORE"
    },
    "8172": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "8177": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8179": {
      "op": "SHL"
    },
    "8180": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8182": {
      "op": "DUP3"
    },
    "8183": {
      "op": "ADD"
    },
    "8184": {
      "op": "MSTORE"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8187": {
      "op": "ADD"
    },
    "8188": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x867"
    },
    "8191": {
      "op": "JUMP"
    },
    "8192": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10438,
        10506
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8199": {
      "op": "SHL"
    },
    "8200": {
      "op": "SUB"
    },
    "8201": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10524,
        10545
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 100
    },
    "8202": {
      "branch": 190,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10524,
        10545
      ],
      "op": "AND",
      "path": "16"
    },
    "8203": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2061"
    },
    "8206": {
      "branch": 190,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8207": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8209": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8216": {
      "op": "SHL"
    },
    "8217": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8218": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8221": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8223": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8224": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "ADD",
      "path": "16"
    },
    "8225": {
      "op": "MSTORE"
    },
    "8226": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8230": {
      "op": "DUP3"
    },
    "8231": {
      "op": "ADD"
    },
    "8232": {
      "op": "MSTORE"
    },
    "8233": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "8266": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8268": {
      "op": "DUP3"
    },
    "8269": {
      "op": "ADD"
    },
    "8270": {
      "op": "MSTORE"
    },
    "8271": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "8276": {
      "op": "SHL"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8279": {
      "op": "DUP3"
    },
    "8280": {
      "op": "ADD"
    },
    "8281": {
      "op": "MSTORE"
    },
    "8282": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8284": {
      "op": "ADD"
    },
    "8285": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x867"
    },
    "8288": {
      "op": "JUMP"
    },
    "8289": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10516,
        10584
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8294": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8296": {
      "op": "SHL"
    },
    "8297": {
      "op": "SUB"
    },
    "8298": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 101
    },
    "8299": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8300": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "AND",
      "path": "16"
    },
    "8301": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8303": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8304": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8305": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8306": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10606
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x34"
    },
    "8308": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8310": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8311": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8312": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8313": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8315": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8316": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8317": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10613
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "8318": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "8319": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "DUP8",
      "path": "16"
    },
    "8320": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "AND",
      "path": "16"
    },
    "8321": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8322": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "DUP5",
      "path": "16"
    },
    "8323": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8324": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "SWAP5",
      "path": "16"
    },
    "8325": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8326": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8327": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8328": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8329": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8330": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10622
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "8331": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10631
      ],
      "op": "DUP6",
      "path": "16"
    },
    "8332": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10631
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8333": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10595,
        10631
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "8334": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "SWAP1",
      "path": "16",
      "statement": 102
    },
    "8335": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8336": {
      "op": "DUP5"
    },
    "8337": {
      "op": "DUP2"
    },
    "8338": {
      "op": "MSTORE"
    },
    "8339": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8372": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8373": {
      "op": "ADD"
    },
    "8374": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8376": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8377": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8378": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "8379": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "SUB",
      "path": "16"
    },
    "8380": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8381": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10646,
        10678
      ],
      "op": "LOG3",
      "path": "16"
    },
    "8382": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10315,
        10685
      ],
      "op": "POP",
      "path": "16"
    },
    "8383": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10315,
        10685
      ],
      "op": "POP",
      "path": "16"
    },
    "8384": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10315,
        10685
      ],
      "op": "POP",
      "path": "16"
    },
    "8385": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        10315,
        10685
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8386": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14480,
        15021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8387": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14610,
        14640
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20CC"
    },
    "8390": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14630,
        14632
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8391": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14634,
        14639
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8392": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14610,
        14629
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29CA"
    },
    "8395": {
      "fn": "TokenVault._sendETHOrWETH",
      "jump": "i",
      "offset": [
        14610,
        14640
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8396": {
      "branch": 179,
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14610,
        14640
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8397": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14605,
        15015
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21C0"
    },
    "8400": {
      "branch": 179,
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14605,
        15015
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8401": {
      "offset": [
        618,
        660
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "8422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8428": {
      "op": "SHL"
    },
    "8429": {
      "op": "SUB"
    },
    "8430": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14882
      ],
      "op": "AND",
      "path": "1",
      "statement": 103
    },
    "8431": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14882
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD0E30DB0"
    },
    "8436": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14890,
        14895
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8437": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8439": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8440": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8441": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "8446": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "AND",
      "path": "1"
    },
    "8447": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "8449": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "SHL",
      "path": "1"
    },
    "8450": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8451": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8452": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8454": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "ADD",
      "path": "1"
    },
    "8455": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8457": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8459": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8460": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8461": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8462": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "SUB",
      "path": "1"
    },
    "8463": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8464": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP6",
      "path": "1"
    },
    "8465": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP9",
      "path": "1"
    },
    "8466": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8467": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "8468": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8469": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8470": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8471": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x211F"
    },
    "8474": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8475": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8477": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8478": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8479": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8480": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "POP",
      "path": "1"
    },
    "8481": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "GAS",
      "path": "1"
    },
    "8482": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "CALL",
      "path": "1"
    },
    "8483": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8484": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8485": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8486": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2133"
    },
    "8489": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8490": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8491": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8493": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8494": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "8495": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8496": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8498": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8499": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14863,
        14898
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8500": {
      "op": "POP"
    },
    "8501": {
      "op": "POP"
    },
    "8502": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 104,
      "value": "0x40"
    },
    "8504": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8505": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8510": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8512": {
      "op": "SHL"
    },
    "8513": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8514": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8521": {
      "op": "SHL"
    },
    "8522": {
      "op": "SUB"
    },
    "8523": {
      "op": "DUP7"
    },
    "8524": {
      "op": "AND"
    },
    "8525": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8527": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8528": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "ADD",
      "path": "1"
    },
    "8529": {
      "op": "MSTORE"
    },
    "8530": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8532": {
      "op": "DUP2"
    },
    "8533": {
      "op": "ADD"
    },
    "8534": {
      "op": "DUP6"
    },
    "8535": {
      "op": "SWAP1"
    },
    "8536": {
      "op": "MSTORE"
    },
    "8537": {
      "offset": [
        618,
        660
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
    },
    "8558": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        618,
        660
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "8559": {
      "op": "POP"
    },
    "8560": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14932
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "8565": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14932
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8566": {
      "op": "POP"
    },
    "8567": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8569": {
      "op": "ADD"
    },
    "8570": {
      "op": "SWAP1"
    },
    "8571": {
      "op": "POP"
    },
    "8572": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8574": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8576": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8577": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8578": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP4",
      "path": "1"
    },
    "8579": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "SUB",
      "path": "1"
    },
    "8580": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8581": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8583": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP8",
      "path": "1"
    },
    "8584": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "GAS",
      "path": "1"
    },
    "8585": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "CALL",
      "path": "1"
    },
    "8586": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8587": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8588": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8589": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x219A"
    },
    "8592": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8593": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8594": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8596": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8597": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "8598": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8599": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8601": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8602": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8603": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "POP",
      "path": "1"
    },
    "8604": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "POP",
      "path": "1"
    },
    "8605": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "POP",
      "path": "1"
    },
    "8606": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "POP",
      "path": "1"
    },
    "8607": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8609": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8610": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "8611": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8613": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "NOT",
      "path": "1"
    },
    "8614": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "8616": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8617": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "ADD",
      "path": "1"
    },
    "8618": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "AND",
      "path": "1"
    },
    "8619": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8620": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "ADD",
      "path": "1"
    },
    "8621": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8622": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8624": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8625": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "POP",
      "path": "1"
    },
    "8626": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8627": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "ADD",
      "path": "1"
    },
    "8628": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8629": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21BE"
    },
    "8632": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "8633": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8634": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31E9"
    },
    "8637": {
      "fn": "TokenVault._sendETHOrWETH",
      "jump": "i",
      "offset": [
        14912,
        14943
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8638": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8639": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14912,
        14943
      ],
      "op": "POP",
      "path": "1"
    },
    "8640": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14605,
        15015
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8641": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14480,
        15021
      ],
      "op": "POP",
      "path": "1"
    },
    "8642": {
      "fn": "TokenVault._sendETHOrWETH",
      "offset": [
        14480,
        15021
      ],
      "op": "POP",
      "path": "1"
    },
    "8643": {
      "fn": "TokenVault._sendETHOrWETH",
      "jump": "o",
      "offset": [
        14480,
        15021
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8644": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7618,
        8331
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8651": {
      "op": "SHL"
    },
    "8652": {
      "op": "SUB"
    },
    "8653": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7753,
        7773
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 105
    },
    "8654": {
      "branch": 191,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7753,
        7773
      ],
      "op": "AND",
      "path": "16"
    },
    "8655": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2228"
    },
    "8658": {
      "branch": 191,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8659": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8661": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8668": {
      "op": "SHL"
    },
    "8669": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8670": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8673": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8675": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8676": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "ADD",
      "path": "16"
    },
    "8677": {
      "op": "MSTORE"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8682": {
      "op": "DUP3"
    },
    "8683": {
      "op": "ADD"
    },
    "8684": {
      "op": "MSTORE"
    },
    "8685": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "8718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8720": {
      "op": "DUP3"
    },
    "8721": {
      "op": "ADD"
    },
    "8722": {
      "op": "MSTORE"
    },
    "8723": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "8729": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "8731": {
      "op": "SHL"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8734": {
      "op": "DUP3"
    },
    "8735": {
      "op": "ADD"
    },
    "8736": {
      "op": "MSTORE"
    },
    "8737": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8739": {
      "op": "ADD"
    },
    "8740": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x867"
    },
    "8743": {
      "op": "JUMP"
    },
    "8744": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7745,
        7815
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8751": {
      "op": "SHL"
    },
    "8752": {
      "op": "SUB"
    },
    "8753": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7833,
        7856
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 106
    },
    "8754": {
      "branch": 192,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7833,
        7856
      ],
      "op": "AND",
      "path": "16"
    },
    "8755": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x228A"
    },
    "8758": {
      "branch": 192,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8759": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8761": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8762": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8768": {
      "op": "SHL"
    },
    "8769": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8770": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8773": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8775": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8776": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "ADD",
      "path": "16"
    },
    "8777": {
      "op": "MSTORE"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8782": {
      "op": "DUP3"
    },
    "8783": {
      "op": "ADD"
    },
    "8784": {
      "op": "MSTORE"
    },
    "8785": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "8818": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8820": {
      "op": "DUP3"
    },
    "8821": {
      "op": "ADD"
    },
    "8822": {
      "op": "MSTORE"
    },
    "8823": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "8827": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "8829": {
      "op": "SHL"
    },
    "8830": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8832": {
      "op": "DUP3"
    },
    "8833": {
      "op": "ADD"
    },
    "8834": {
      "op": "MSTORE"
    },
    "8835": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8837": {
      "op": "ADD"
    },
    "8838": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x867"
    },
    "8841": {
      "op": "JUMP"
    },
    "8842": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7825,
        7896
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8843": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7907,
        7954
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 107,
      "value": "0x2295"
    },
    "8846": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7928,
        7934
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8847": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7936,
        7945
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8848": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7947,
        7953
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8849": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7907,
        7927
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A2D"
    },
    "8852": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        7907,
        7954
      ],
      "op": "JUMP",
      "path": "16"
    },
    "8853": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7907,
        7954
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8860": {
      "op": "SHL"
    },
    "8861": {
      "op": "SUB"
    },
    "8862": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "DUP4",
      "path": "16"
    },
    "8863": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "AND",
      "path": "16"
    },
    "8864": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7965,
        7986
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8866": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8867": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8868": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8869": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        7998
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x33"
    },
    "8871": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8873": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8874": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8876": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8877": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "8878": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7989,
        8006
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "8879": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8024,
        8047
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 108
    },
    "8880": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8024,
        8047
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8881": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8024,
        8047
      ],
      "op": "LT",
      "path": "16"
    },
    "8882": {
      "branch": 193,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8024,
        8047
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8883": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x230D"
    },
    "8886": {
      "branch": 193,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "8887": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8889": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "8890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8896": {
      "op": "SHL"
    },
    "8897": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8898": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8901": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "8903": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8904": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "ADD",
      "path": "16"
    },
    "8905": {
      "op": "MSTORE"
    },
    "8906": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8908": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8910": {
      "op": "DUP3"
    },
    "8911": {
      "op": "ADD"
    },
    "8912": {
      "op": "MSTORE"
    },
    "8913": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "8946": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8948": {
      "op": "DUP3"
    },
    "8949": {
      "op": "ADD"
    },
    "8950": {
      "op": "MSTORE"
    },
    "8951": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "8958": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8960": {
      "op": "SHL"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8963": {
      "op": "DUP3"
    },
    "8964": {
      "op": "ADD"
    },
    "8965": {
      "op": "MSTORE"
    },
    "8966": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8968": {
      "op": "ADD"
    },
    "8969": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x867"
    },
    "8972": {
      "op": "JUMP"
    },
    "8973": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8016,
        8090
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "8974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8980": {
      "op": "SHL"
    },
    "8981": {
      "op": "SUB"
    },
    "8982": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 109
    },
    "8983": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "DUP6",
      "path": "16"
    },
    "8984": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "AND",
      "path": "16"
    },
    "8985": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "8987": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "8988": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "DUP2",
      "path": "16"
    },
    "8989": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8990": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8133
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x33"
    },
    "8992": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "8994": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "8995": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "8997": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "DUP1",
      "path": "16"
    },
    "8998": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "DUP3",
      "path": "16"
    },
    "8999": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "9000": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8144,
        8166
      ],
      "op": "DUP6",
      "path": "16"
    },
    "9001": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8144,
        8166
      ],
      "op": "DUP6",
      "path": "16"
    },
    "9002": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8144,
        8166
      ],
      "op": "SUB",
      "path": "16"
    },
    "9003": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8166
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9004": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8166
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9005": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8206
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 110
    },
    "9006": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8206
      ],
      "op": "DUP6",
      "path": "16"
    },
    "9007": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8206
      ],
      "op": "AND",
      "path": "16"
    },
    "9008": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8206
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9009": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8206
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9010": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8206
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9011": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8206
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9012": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8206
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "9013": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9014": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9015": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8160,
        8166
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9016": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8160,
        8166
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "9017": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8124,
        8141
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9018": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2344"
    },
    "9021": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9022": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8160,
        8166
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9023": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8160,
        8166
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9024": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30C7"
    },
    "9027": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8186,
        8216
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9028": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9029": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "9030": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "POP",
      "path": "16"
    },
    "9031": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "POP",
      "path": "16"
    },
    "9032": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9033": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9034": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9035": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8186,
        8216
      ],
      "op": "POP",
      "path": "16"
    },
    "9036": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8249,
        8258
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 111
    },
    "9037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9043": {
      "op": "SHL"
    },
    "9044": {
      "op": "SUB"
    },
    "9045": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "AND",
      "path": "16"
    },
    "9046": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8241,
        8247
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9053": {
      "op": "SHL"
    },
    "9054": {
      "op": "SUB"
    },
    "9055": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "AND",
      "path": "16"
    },
    "9056": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9089": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8260,
        8266
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9090": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9092": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9093": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2390"
    },
    "9096": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9097": {
      "op": "DUP2"
    },
    "9098": {
      "op": "MSTORE"
    },
    "9099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9101": {
      "op": "ADD"
    },
    "9102": {
      "op": "SWAP1"
    },
    "9103": {
      "op": "JUMP"
    },
    "9104": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9105": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9107": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9108": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9109": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9110": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "SUB",
      "path": "16"
    },
    "9111": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9112": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8232,
        8267
      ],
      "op": "LOG3",
      "path": "16"
    },
    "9113": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8278,
        8324
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 112,
      "value": "0x23A3"
    },
    "9116": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8298,
        8304
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9117": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8306,
        8315
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9118": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8317,
        8323
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9119": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8278,
        8297
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21BE"
    },
    "9122": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        8278,
        8324
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9123": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        8278,
        8324
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9124": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7735,
        8331
      ],
      "op": "POP",
      "path": "16"
    },
    "9125": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7618,
        8331
      ],
      "op": "POP",
      "path": "16"
    },
    "9126": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7618,
        8331
      ],
      "op": "POP",
      "path": "16"
    },
    "9127": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7618,
        8331
      ],
      "op": "POP",
      "path": "16"
    },
    "9128": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "o",
      "offset": [
        7618,
        8331
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9129": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2034,
        2212
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9130": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9132": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9133": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9136": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9137": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "15"
    },
    "9138": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9140": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "15"
    },
    "9141": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9142": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23C2"
    },
    "9145": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9146": {
      "op": "POP"
    },
    "9147": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9149": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9150": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9152": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "15"
    },
    "9153": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9154": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9155": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x23DE"
    },
    "9158": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9159": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9161": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9168": {
      "op": "SHL"
    },
    "9169": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9170": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9171": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9173": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "15"
    },
    "9174": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x867"
    },
    "9177": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9178": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3132"
    },
    "9181": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9182": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9183": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9185": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9186": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9189": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9190": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "15"
    },
    "9191": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9193": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "15"
    },
    "9194": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9195": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9196": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9197": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2400"
    },
    "9200": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9201": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9203": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9204": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9205": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9208": {
      "op": "NOT"
    },
    "9209": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "15"
    },
    "9210": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x101"
    },
    "9213": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "15"
    },
    "9214": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9215": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9216": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9217": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2131,
        2157
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 113,
      "value": "0x2408"
    },
    "9220": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2131,
        2155
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B33"
    },
    "9223": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2131,
        2157
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9224": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2131,
        2157
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9225": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2167,
        2205
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 114,
      "value": "0x2412"
    },
    "9228": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2190,
        2195
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9229": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2197,
        2204
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9230": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2167,
        2189
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B9D"
    },
    "9233": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "i",
      "offset": [
        2167,
        2205
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9234": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2167,
        2205
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9235": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9236": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9237": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21BE"
    },
    "9240": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9241": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9243": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9244": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9245": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "9248": {
      "op": "NOT"
    },
    "9249": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "15"
    },
    "9250": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9251": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9252": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "15"
    },
    "9253": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2034,
        2212
      ],
      "op": "POP",
      "path": "16"
    },
    "9254": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "offset": [
        2034,
        2212
      ],
      "op": "POP",
      "path": "16"
    },
    "9255": {
      "fn": "ERC20Upgradeable.__ERC20_init",
      "jump": "o",
      "offset": [
        2034,
        2212
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9256": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        472,
        572
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9257": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9259": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9260": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9263": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9264": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "15"
    },
    "9265": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9267": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "15"
    },
    "9268": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9269": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2441"
    },
    "9272": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9273": {
      "op": "POP"
    },
    "9274": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9276": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9277": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9279": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "15"
    },
    "9280": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9281": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9282": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x245D"
    },
    "9285": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9286": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "9288": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "9289": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9295": {
      "op": "SHL"
    },
    "9296": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "15"
    },
    "9297": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "9298": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "9300": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "15"
    },
    "9301": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x867"
    },
    "9304": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9305": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3132"
    },
    "9308": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "15"
    },
    "9309": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9310": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9312": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9313": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "9316": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9317": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "15"
    },
    "9318": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "9320": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "15"
    },
    "9321": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9322": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9323": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9324": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x247F"
    },
    "9327": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9328": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9330": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9331": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9332": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9335": {
      "op": "NOT"
    },
    "9336": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "15"
    },
    "9337": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x101"
    },
    "9340": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "15"
    },
    "9341": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9342": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9343": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9344": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        534,
        565
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 115,
      "value": "0x2487"
    },
    "9347": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        534,
        563
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B33"
    },
    "9350": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "jump": "i",
      "offset": [
        534,
        565
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9351": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        534,
        565
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9352": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9353": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "9354": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2499"
    },
    "9357": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "9358": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "9360": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "15"
    },
    "9361": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "9362": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "9365": {
      "op": "NOT"
    },
    "9366": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "15"
    },
    "9367": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "9368": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "9369": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "9370": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "15"
    },
    "9371": {
      "fn": "ERC721HolderUpgradeable.__ERC721Holder_init",
      "jump": "o",
      "offset": [
        472,
        572
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9372": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8607,
        8996
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9379": {
      "op": "SHL"
    },
    "9380": {
      "op": "SUB"
    },
    "9381": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8690,
        8711
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 116
    },
    "9382": {
      "branch": 194,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8690,
        8711
      ],
      "op": "AND",
      "path": "16"
    },
    "9383": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24F2"
    },
    "9386": {
      "branch": 194,
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "9387": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9389": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9390": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9396": {
      "op": "SHL"
    },
    "9397": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9398": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9401": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "9403": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9404": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "ADD",
      "path": "16"
    },
    "9405": {
      "op": "MSTORE"
    },
    "9406": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9408": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9410": {
      "op": "DUP3"
    },
    "9411": {
      "op": "ADD"
    },
    "9412": {
      "op": "MSTORE"
    },
    "9413": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "9446": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9448": {
      "op": "DUP3"
    },
    "9449": {
      "op": "ADD"
    },
    "9450": {
      "op": "MSTORE"
    },
    "9451": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9453": {
      "op": "ADD"
    },
    "9454": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x867"
    },
    "9457": {
      "op": "JUMP"
    },
    "9458": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8682,
        8747
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9459": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8758,
        8807
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 117,
      "value": "0x24FE"
    },
    "9462": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8787,
        8788
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9464": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8791,
        8798
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9465": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8800,
        8806
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9466": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8758,
        8778
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A2D"
    },
    "9469": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8758,
        8807
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9470": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8758,
        8807
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9471": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8834,
        8840
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 118
    },
    "9472": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8830
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x35"
    },
    "9474": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8830
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9476": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9477": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "DUP3",
      "path": "16"
    },
    "9478": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9479": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2510"
    },
    "9482": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9483": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9484": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30C7"
    },
    "9487": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8818,
        8840
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9488": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9489": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9490": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9491": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8818,
        8840
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9492": {
      "op": "POP"
    },
    "9493": {
      "op": "POP"
    },
    "9494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9500": {
      "op": "SHL"
    },
    "9501": {
      "op": "SUB"
    },
    "9502": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 119
    },
    "9503": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "AND",
      "path": "16"
    },
    "9504": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9506": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9507": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9508": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9509": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8859
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x33"
    },
    "9511": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "9513": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "9514": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9516": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "DUP2",
      "path": "16"
    },
    "9517": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "9518": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8878
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9519": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8878
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9520": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8872,
        8878
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9521": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8872,
        8878
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "9522": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8868
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9523": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8878
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x253D"
    },
    "9526": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8878
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9527": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8872,
        8878
      ],
      "op": "DUP5",
      "path": "16"
    },
    "9528": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8872,
        8878
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9529": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8878
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30C7"
    },
    "9532": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8850,
        8878
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9533": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8878
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "9534": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8878
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9535": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8878
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9536": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8850,
        8878
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "9537": {
      "op": "POP"
    },
    "9538": {
      "op": "POP"
    },
    "9539": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 120,
      "value": "0x40"
    },
    "9541": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9542": {
      "op": "DUP2"
    },
    "9543": {
      "op": "DUP2"
    },
    "9544": {
      "op": "MSTORE"
    },
    "9545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9551": {
      "op": "SHL"
    },
    "9552": {
      "op": "SUB"
    },
    "9553": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9554": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "AND",
      "path": "16"
    },
    "9555": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9556": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8910,
        8911
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9558": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8910,
        8911
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9559": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9592": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9595": {
      "op": "ADD"
    },
    "9596": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "9598": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "9599": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "DUP1",
      "path": "16"
    },
    "9600": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "9601": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "SUB",
      "path": "16"
    },
    "9602": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9603": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8893,
        8930
      ],
      "op": "LOG3",
      "path": "16"
    },
    "9604": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8941,
        8989
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 121,
      "value": "0x21C0"
    },
    "9607": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8969,
        8970
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "9609": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8973,
        8980
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9610": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8982,
        8988
      ],
      "op": "DUP4",
      "path": "16"
    },
    "9611": {
      "fn": "ERC20Upgradeable._mint",
      "offset": [
        8941,
        8960
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21BE"
    },
    "9614": {
      "fn": "ERC20Upgradeable._mint",
      "jump": "i",
      "offset": [
        8941,
        8989
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9615": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6837,
        8065
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9616": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6902,
        6913
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 122,
      "value": "0x2"
    },
    "9618": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "9620": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6898
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9625": {
      "op": "SHL"
    },
    "9626": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6898
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9627": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6898
      ],
      "op": "DIV",
      "path": "1"
    },
    "9628": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "9630": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6898
      ],
      "op": "AND",
      "path": "1"
    },
    "9631": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6913
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "9633": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6913
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9634": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6913
      ],
      "op": "GT",
      "path": "1"
    },
    "9635": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6913
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9636": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6913
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25AF"
    },
    "9639": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6913
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9640": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6913
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25AF"
    },
    "9643": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6913
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FBB"
    },
    "9646": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        6886,
        6913
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9647": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6913
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9648": {
      "branch": 180,
      "fn": "TokenVault._claimFees",
      "offset": [
        6886,
        6913
      ],
      "op": "SUB",
      "path": "1"
    },
    "9649": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260A"
    },
    "9652": {
      "branch": 180,
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9653": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9655": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9656": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9660": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9662": {
      "op": "SHL"
    },
    "9663": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9664": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9667": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9669": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9670": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "ADD",
      "path": "1"
    },
    "9671": {
      "op": "MSTORE"
    },
    "9672": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9676": {
      "op": "DUP3"
    },
    "9677": {
      "op": "ADD"
    },
    "9678": {
      "op": "MSTORE"
    },
    "9679": {
      "op": "PUSH32",
      "value": "0x636C61696D3A63616E6E6F7420636C61696D2061667465722061756374696F6E"
    },
    "9712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9714": {
      "op": "DUP3"
    },
    "9715": {
      "op": "ADD"
    },
    "9716": {
      "op": "MSTORE"
    },
    "9717": {
      "op": "PUSH5",
      "value": "0x20656E6473"
    },
    "9723": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "9725": {
      "op": "SHL"
    },
    "9726": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9728": {
      "op": "DUP3"
    },
    "9729": {
      "op": "ADD"
    },
    "9730": {
      "op": "MSTORE"
    },
    "9731": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9733": {
      "op": "ADD"
    },
    "9734": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x867"
    },
    "9737": {
      "op": "JUMP"
    },
    "9738": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6878,
        6955
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9739": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7031,
        7055
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9741": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7080,
        7084
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "9744": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7064,
        7077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2618"
    },
    "9747": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x35"
    },
    "9749": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "9750": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "9751": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "JUMP",
      "path": "16"
    },
    "9752": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7064,
        7077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9753": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7061
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9F"
    },
    "9755": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7061
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9756": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2625"
    },
    "9759": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7077
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9760": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7077
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9761": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7077
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "9764": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7058,
        7077
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9765": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9766": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7084
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x262F"
    },
    "9769": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7084
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9770": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9771": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7084
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "9774": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7058,
        7084
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9775": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7058,
        7084
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9776": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7031,
        7084
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9777": {
      "op": "POP"
    },
    "9778": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7139,
        7159
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9780": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7162,
        7189
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2641"
    },
    "9783": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7181,
        7189
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1E13380"
    },
    "9788": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7031,
        7084
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9789": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7162,
        7189
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "9792": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7162,
        7189
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9793": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7162,
        7189
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9794": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7139,
        7189
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9795": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7139,
        7189
      ],
      "op": "POP",
      "path": "1"
    },
    "9796": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7258,
        7280
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9798": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7301,
        7312
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "9800": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7301,
        7312
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9801": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7283,
        7298
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "9802": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7283,
        7312
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2653"
    },
    "9805": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7283,
        7312
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9806": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7283,
        7312
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9807": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7283,
        7312
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "9810": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7283,
        7312
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9811": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7283,
        7312
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9812": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7258,
        7312
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9813": {
      "op": "POP"
    },
    "9814": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7366,
        7385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9816": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7388,
        7417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2661"
    },
    "9819": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7405,
        7417
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9820": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7258,
        7312
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9821": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7388,
        7417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "9824": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7388,
        7417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9825": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7388,
        7417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9826": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7366,
        7417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9827": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7366,
        7417
      ],
      "op": "POP",
      "path": "1"
    },
    "9828": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7475,
        7493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9830": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7506,
        7514
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "9863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9869": {
      "op": "SHL"
    },
    "9870": {
      "op": "SUB"
    },
    "9871": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7527
      ],
      "op": "AND",
      "path": "1"
    },
    "9872": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7527
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB3F00674"
    },
    "9877": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9879": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9880": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9881": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "9886": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "AND",
      "path": "1"
    },
    "9887": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "9889": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "SHL",
      "path": "1"
    },
    "9890": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9891": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9892": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9894": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "ADD",
      "path": "1"
    },
    "9895": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9897": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9899": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9900": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9901": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9902": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "SUB",
      "path": "1"
    },
    "9903": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9904": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9906": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP8",
      "path": "1"
    },
    "9907": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "GAS",
      "path": "1"
    },
    "9908": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "CALL",
      "path": "1"
    },
    "9909": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9910": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9911": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9912": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26C5"
    },
    "9915": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9916": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9917": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9919": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9920": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "9921": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9922": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9924": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9925": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9926": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "POP",
      "path": "1"
    },
    "9927": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "POP",
      "path": "1"
    },
    "9928": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "POP",
      "path": "1"
    },
    "9929": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "POP",
      "path": "1"
    },
    "9930": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9932": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9933": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "9934": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9936": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "NOT",
      "path": "1"
    },
    "9937": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9939": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9940": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "ADD",
      "path": "1"
    },
    "9941": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "AND",
      "path": "1"
    },
    "9942": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9943": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "ADD",
      "path": "1"
    },
    "9944": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9945": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9947": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9948": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "POP",
      "path": "1"
    },
    "9949": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9950": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "ADD",
      "path": "1"
    },
    "9951": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9952": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26E9"
    },
    "9955": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9956": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9957": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3115"
    },
    "9960": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7496,
        7529
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9961": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7496,
        7529
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9962": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7475,
        7529
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9963": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7475,
        7529
      ],
      "op": "POP",
      "path": "1"
    },
    "9964": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7539,
        7553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9966": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7566,
        7574
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "9999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10005": {
      "op": "SHL"
    },
    "10006": {
      "op": "SUB"
    },
    "10007": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7589
      ],
      "op": "AND",
      "path": "1"
    },
    "10008": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7589
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEA90A12"
    },
    "10013": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10015": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10016": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10017": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "10022": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "AND",
      "path": "1"
    },
    "10023": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "10025": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "SHL",
      "path": "1"
    },
    "10026": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10027": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10028": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10030": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "ADD",
      "path": "1"
    },
    "10031": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10033": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10035": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10036": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10037": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10038": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "SUB",
      "path": "1"
    },
    "10039": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10040": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10042": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP8",
      "path": "1"
    },
    "10043": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "GAS",
      "path": "1"
    },
    "10044": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "CALL",
      "path": "1"
    },
    "10045": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10046": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10047": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10048": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x274D"
    },
    "10051": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10052": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10053": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10055": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10056": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "10057": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10058": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10060": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "REVERT",
      "path": "1"
    },
    "10061": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10062": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "POP",
      "path": "1"
    },
    "10063": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "POP",
      "path": "1"
    },
    "10064": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "POP",
      "path": "1"
    },
    "10065": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "POP",
      "path": "1"
    },
    "10066": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10068": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10069": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10070": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10072": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "NOT",
      "path": "1"
    },
    "10073": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10075": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10076": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "ADD",
      "path": "1"
    },
    "10077": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "AND",
      "path": "1"
    },
    "10078": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10079": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "ADD",
      "path": "1"
    },
    "10080": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10081": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10083": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10084": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "POP",
      "path": "1"
    },
    "10085": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10086": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "ADD",
      "path": "1"
    },
    "10087": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10088": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2771"
    },
    "10091": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10092": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10093": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3098"
    },
    "10096": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7556,
        7591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10097": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7556,
        7591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10098": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7539,
        7591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10099": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7539,
        7591
      ],
      "op": "POP",
      "path": "1"
    },
    "10100": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7645,
        7649
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 123,
      "value": "0x3E8"
    },
    "10103": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7629,
        7642
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x277F"
    },
    "10106": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x35"
    },
    "10108": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "10109": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3612,
        3624
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10110": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3525,
        3631
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10111": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7629,
        7642
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10112": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7620,
        7642
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2789"
    },
    "10115": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7620,
        7642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10116": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7620,
        7626
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10117": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7620,
        7642
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "10120": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7620,
        7642
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10121": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7620,
        7642
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10122": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7620,
        7649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2793"
    },
    "10125": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7620,
        7649
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10126": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7620,
        7649
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10127": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7620,
        7649
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "10130": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7620,
        7649
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10131": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7620,
        7649
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10132": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7601,
        7649
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "10133": {
      "op": "POP"
    },
    "10134": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7675,
        7702
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 124,
      "value": "0x27A3"
    },
    "10137": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7694,
        7702
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1E13380"
    },
    "10142": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7601,
        7649
      ],
      "op": "DUP8",
      "path": "1"
    },
    "10143": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7675,
        7702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31C7"
    },
    "10146": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7675,
        7702
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10147": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7675,
        7702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10148": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7660,
        7702
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "10149": {
      "op": "POP"
    },
    "10150": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7712,
        7727
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10152": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7730,
        7759
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27B1"
    },
    "10155": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7660,
        7702
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10156": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7730,
        7744
      ],
      "op": "DUP7",
      "path": "1"
    },
    "10157": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7730,
        7759
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "10160": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7730,
        7759
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10161": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7730,
        7759
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10162": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7784,
        7799
      ],
      "op": "TIMESTAMP",
      "path": "1",
      "statement": 125
    },
    "10163": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7770,
        7781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "10165": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7770,
        7799
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10166": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7814,
        7821
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9E"
    },
    "10168": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7814,
        7821
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10169": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7712,
        7759
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10170": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7712,
        7759
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10171": {
      "op": "POP"
    },
    "10172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10178": {
      "op": "SHL"
    },
    "10179": {
      "op": "SUB"
    },
    "10180": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7814,
        7821
      ],
      "op": "AND",
      "path": "1"
    },
    "10181": {
      "branch": 181,
      "fn": "TokenVault._claimFees",
      "offset": [
        7814,
        7835
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10182": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7810,
        7931
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2813"
    },
    "10185": {
      "branch": 181,
      "fn": "TokenVault._claimFees",
      "offset": [
        7810,
        7931
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10186": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7857,
        7864
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 126,
      "value": "0x9E"
    },
    "10188": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7857,
        7864
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10189": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7851,
        7878
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27DF"
    },
    "10192": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7851,
        7878
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10199": {
      "op": "SHL"
    },
    "10200": {
      "op": "SUB"
    },
    "10201": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7857,
        7864
      ],
      "op": "AND",
      "path": "1"
    },
    "10202": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7866,
        7877
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10203": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7851,
        7856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x249C"
    },
    "10206": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7851,
        7878
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10207": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7851,
        7878
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10208": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 127,
      "value": "0x40"
    },
    "10210": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10211": {
      "op": "DUP5"
    },
    "10212": {
      "op": "DUP2"
    },
    "10213": {
      "op": "MSTORE"
    },
    "10214": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x62B10E3FF3D45B5FF546E740B893897FACB1680285F989A64AE932D62C5388E1"
    },
    "10247": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10250": {
      "op": "ADD"
    },
    "10251": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10253": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10254": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10255": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10256": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "SUB",
      "path": "1"
    },
    "10257": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10258": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7897,
        7920
      ],
      "op": "LOG1",
      "path": "1"
    },
    "10259": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7810,
        7931
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10266": {
      "op": "SHL"
    },
    "10267": {
      "op": "SUB"
    },
    "10268": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7944,
        7968
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10269": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7944,
        7968
      ],
      "op": "AND",
      "path": "1"
    },
    "10270": {
      "branch": 182,
      "fn": "TokenVault._claimFees",
      "offset": [
        7944,
        7968
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10271": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7940,
        8059
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2860"
    },
    "10274": {
      "branch": 182,
      "fn": "TokenVault._claimFees",
      "offset": [
        7940,
        8059
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10275": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7984,
        8010
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 128,
      "value": "0x282C"
    },
    "10278": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7990,
        8000
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10279": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8002,
        8009
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10280": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7984,
        7989
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x249C"
    },
    "10283": {
      "fn": "TokenVault._claimFees",
      "jump": "i",
      "offset": [
        7984,
        8010
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10284": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7984,
        8010
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10285": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 129,
      "value": "0x40"
    },
    "10287": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10288": {
      "op": "DUP2"
    },
    "10289": {
      "op": "DUP2"
    },
    "10290": {
      "op": "MSTORE"
    },
    "10291": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x62B10E3FF3D45B5FF546E740B893897FACB1680285F989A64AE932D62C5388E1"
    },
    "10324": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10327": {
      "op": "ADD"
    },
    "10328": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10330": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10331": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10332": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10333": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "SUB",
      "path": "1"
    },
    "10334": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10335": {
      "fn": "TokenVault._claimFees",
      "offset": [
        8029,
        8048
      ],
      "op": "LOG1",
      "path": "1"
    },
    "10336": {
      "fn": "TokenVault._claimFees",
      "offset": [
        7940,
        8059
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10337": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6868,
        8065
      ],
      "op": "POP",
      "path": "1"
    },
    "10338": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6868,
        8065
      ],
      "op": "POP",
      "path": "1"
    },
    "10339": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6868,
        8065
      ],
      "op": "POP",
      "path": "1"
    },
    "10340": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6868,
        8065
      ],
      "op": "POP",
      "path": "1"
    },
    "10341": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6868,
        8065
      ],
      "op": "POP",
      "path": "1"
    },
    "10342": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6868,
        8065
      ],
      "op": "POP",
      "path": "1"
    },
    "10343": {
      "fn": "TokenVault._claimFees",
      "offset": [
        6868,
        8065
      ],
      "op": "POP",
      "path": "1"
    },
    "10344": {
      "fn": "TokenVault._claimFees",
      "jump": "o",
      "offset": [
        6837,
        8065
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10345": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9316,
        9892
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10352": {
      "op": "SHL"
    },
    "10353": {
      "op": "SUB"
    },
    "10354": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9399,
        9420
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 130
    },
    "10355": {
      "branch": 195,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9399,
        9420
      ],
      "op": "AND",
      "path": "16"
    },
    "10356": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x28C9"
    },
    "10359": {
      "branch": 195,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "10360": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "10362": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "10363": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10367": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10369": {
      "op": "SHL"
    },
    "10370": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "DUP2",
      "path": "16"
    },
    "10371": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10374": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "10376": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "DUP3",
      "path": "16"
    },
    "10377": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "ADD",
      "path": "16"
    },
    "10378": {
      "op": "MSTORE"
    },
    "10379": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "10381": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10383": {
      "op": "DUP3"
    },
    "10384": {
      "op": "ADD"
    },
    "10385": {
      "op": "MSTORE"
    },
    "10386": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "10419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10421": {
      "op": "DUP3"
    },
    "10422": {
      "op": "ADD"
    },
    "10423": {
      "op": "MSTORE"
    },
    "10424": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "10426": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "10428": {
      "op": "SHL"
    },
    "10429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10431": {
      "op": "DUP3"
    },
    "10432": {
      "op": "ADD"
    },
    "10433": {
      "op": "MSTORE"
    },
    "10434": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10436": {
      "op": "ADD"
    },
    "10437": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x867"
    },
    "10440": {
      "op": "JUMP"
    },
    "10441": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9391,
        9458
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10442": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9469,
        9518
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 131,
      "value": "0x28D5"
    },
    "10445": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9490,
        9497
      ],
      "op": "DUP3",
      "path": "16"
    },
    "10446": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9507,
        9508
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "10448": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9511,
        9517
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10449": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9469,
        9489
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A2D"
    },
    "10452": {
      "fn": "ERC20Upgradeable._burn",
      "jump": "i",
      "offset": [
        9469,
        9518
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10453": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9469,
        9518
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10460": {
      "op": "SHL"
    },
    "10461": {
      "op": "SUB"
    },
    "10462": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "DUP3",
      "path": "16"
    },
    "10463": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "AND",
      "path": "16"
    },
    "10464": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9529,
        9551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "10466": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10467": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "DUP2",
      "path": "16"
    },
    "10468": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "10469": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9563
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x33"
    },
    "10471": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "10473": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "10474": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "10476": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10477": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "10478": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9554,
        9572
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "10479": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9590,
        9614
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 132
    },
    "10480": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9590,
        9614
      ],
      "op": "DUP2",
      "path": "16"
    },
    "10481": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9590,
        9614
      ],
      "op": "LT",
      "path": "16"
    },
    "10482": {
      "branch": 196,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9590,
        9614
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "10483": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2949"
    },
    "10486": {
      "branch": 196,
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "10487": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "10489": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "10490": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10494": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10496": {
      "op": "SHL"
    },
    "10497": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "DUP2",
      "path": "16"
    },
    "10498": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "10499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10501": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "10503": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "DUP3",
      "path": "16"
    },
    "10504": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "ADD",
      "path": "16"
    },
    "10505": {
      "op": "MSTORE"
    },
    "10506": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10508": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10510": {
      "op": "DUP3"
    },
    "10511": {
      "op": "ADD"
    },
    "10512": {
      "op": "MSTORE"
    },
    "10513": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10548": {
      "op": "DUP3"
    },
    "10549": {
      "op": "ADD"
    },
    "10550": {
      "op": "MSTORE"
    },
    "10551": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "10554": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "10556": {
      "op": "SHL"
    },
    "10557": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10559": {
      "op": "DUP3"
    },
    "10560": {
      "op": "ADD"
    },
    "10561": {
      "op": "MSTORE"
    },
    "10562": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10564": {
      "op": "ADD"
    },
    "10565": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x867"
    },
    "10568": {
      "op": "JUMP"
    },
    "10569": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9582,
        9653
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10576": {
      "op": "SHL"
    },
    "10577": {
      "op": "SUB"
    },
    "10578": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "DUP4",
      "path": "16",
      "statement": 133
    },
    "10579": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "AND",
      "path": "16"
    },
    "10580": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "10582": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10583": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "DUP2",
      "path": "16"
    },
    "10584": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "10585": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9696
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x33"
    },
    "10587": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "10589": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "10590": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "10592": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "DUP2",
      "path": "16"
    },
    "10593": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "10594": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9708,
        9731
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10595": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9708,
        9731
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10596": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9708,
        9731
      ],
      "op": "SUB",
      "path": "16"
    },
    "10597": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9731
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10598": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9731
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "10599": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9751,
        9763
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 134,
      "value": "0x35"
    },
    "10601": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9751,
        9773
      ],
      "op": "DUP1",
      "path": "16"
    },
    "10602": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9751,
        9773
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "10603": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9725,
        9731
      ],
      "op": "DUP5",
      "path": "16"
    },
    "10604": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9725,
        9731
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "10605": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9687,
        9705
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10606": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9751,
        9773
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2978"
    },
    "10609": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9751,
        9773
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10610": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9725,
        9731
      ],
      "op": "DUP5",
      "path": "16"
    },
    "10611": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9725,
        9731
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10612": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9751,
        9773
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x30FE"
    },
    "10615": {
      "fn": "ERC20Upgradeable._burn",
      "jump": "i",
      "offset": [
        9751,
        9773
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10616": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9751,
        9773
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "10617": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9751,
        9773
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10618": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9751,
        9773
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "10619": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9751,
        9773
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "10620": {
      "op": "POP"
    },
    "10621": {
      "op": "POP"
    },
    "10622": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 135,
      "value": "0x40"
    },
    "10624": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "10625": {
      "op": "DUP3"
    },
    "10626": {
      "op": "DUP2"
    },
    "10627": {
      "op": "MSTORE"
    },
    "10628": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9815,
        9816
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "10630": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9815,
        9816
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10637": {
      "op": "SHL"
    },
    "10638": {
      "op": "SUB"
    },
    "10639": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "DUP6",
      "path": "16"
    },
    "10640": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "AND",
      "path": "16"
    },
    "10641": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10642": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10675": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10678": {
      "op": "ADD"
    },
    "10679": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "10681": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "10682": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "DUP1",
      "path": "16"
    },
    "10683": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "10684": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "SUB",
      "path": "16"
    },
    "10685": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "10686": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9789,
        9826
      ],
      "op": "LOG3",
      "path": "16"
    },
    "10687": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9837,
        9885
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 136,
      "value": "0x21BE"
    },
    "10690": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9857,
        9864
      ],
      "op": "DUP4",
      "path": "16"
    },
    "10691": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9874,
        9875
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "10693": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9878,
        9884
      ],
      "op": "DUP5",
      "path": "16"
    },
    "10694": {
      "fn": "ERC20Upgradeable._burn",
      "offset": [
        9837,
        9856
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21BE"
    },
    "10697": {
      "fn": "ERC20Upgradeable._burn",
      "jump": "i",
      "offset": [
        9837,
        9885
      ],
      "op": "JUMP",
      "path": "16"
    },
    "10698": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15340,
        15752
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10699": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15430,
        15434
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10701": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15666,
        15678
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10702": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15686
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10709": {
      "op": "SHL"
    },
    "10710": {
      "op": "SUB"
    },
    "10711": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15691
      ],
      "op": "AND",
      "path": "1"
    },
    "10712": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15699,
        15704
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10713": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15711,
        15716
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7530"
    },
    "10716": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10717": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10719": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10720": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10722": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10724": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10725": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10726": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP4",
      "path": "1"
    },
    "10727": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "SUB",
      "path": "1"
    },
    "10728": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10729": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10730": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP9",
      "path": "1"
    },
    "10731": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP9",
      "path": "1"
    },
    "10732": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "CALL",
      "path": "1"
    },
    "10733": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "10734": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "POP",
      "path": "1"
    },
    "10735": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "POP",
      "path": "1"
    },
    "10736": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "POP",
      "path": "1"
    },
    "10737": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "POP",
      "path": "1"
    },
    "10738": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10739": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10740": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10742": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10743": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "EQ",
      "path": "1"
    },
    "10744": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A1D"
    },
    "10747": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10748": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10750": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10751": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10752": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "POP",
      "path": "1"
    },
    "10753": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "10755": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "NOT",
      "path": "1"
    },
    "10756": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "10758": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10759": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "ADD",
      "path": "1"
    },
    "10760": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "AND",
      "path": "1"
    },
    "10761": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10762": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "ADD",
      "path": "1"
    },
    "10763": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10765": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10766": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10767": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10768": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10769": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "10770": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10772": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10774": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10775": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "ADD",
      "path": "1"
    },
    "10776": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "10777": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A22"
    },
    "10780": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10781": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10782": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "10784": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10785": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "POP",
      "path": "1"
    },
    "10786": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15684,
        15721
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10787": {
      "op": "POP"
    },
    "10788": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15665,
        15721
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10789": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15665,
        15721
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "10790": {
      "fn": "TokenVault._attemptETHTransfer",
      "offset": [
        15340,
        15752
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "10791": {
      "op": "POP"
    },
    "10792": {
      "op": "POP"
    },
    "10793": {
      "op": "POP"
    },
    "10794": {
      "op": "POP"
    },
    "10795": {
      "op": "POP"
    },
    "10796": {
      "fn": "TokenVault._attemptETHTransfer",
      "jump": "o",
      "offset": [
        15340,
        15752
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10797": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10552,
        11607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10798": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10683,
        10697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10800": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10679
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9D"
    },
    "10802": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10679
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10807": {
      "op": "SHL"
    },
    "10808": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10679
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10809": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10679
      ],
      "op": "DIV",
      "path": "1"
    },
    "10810": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10679
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10812": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10679
      ],
      "op": "AND",
      "path": "1"
    },
    "10813": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10697
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "10815": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10697
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10816": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10697
      ],
      "op": "GT",
      "path": "1"
    },
    "10817": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10697
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10818": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A4D"
    },
    "10821": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10697
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10822": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A4D"
    },
    "10825": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10697
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FBB"
    },
    "10828": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        10667,
        10697
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10829": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10697
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10830": {
      "branch": 183,
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10667,
        10697
      ],
      "op": "SUB",
      "path": "1"
    },
    "10831": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10663,
        11601
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21BE"
    },
    "10834": {
      "branch": 183,
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10663,
        11601
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10841": {
      "op": "SHL"
    },
    "10842": {
      "op": "SUB"
    },
    "10843": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10844": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10845": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "AND",
      "path": "1"
    },
    "10846": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10713,
        10730
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10848": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10849": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10850": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10851": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA3"
    },
    "10853": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10855": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10856": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10858": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10859": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10860": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10861": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10733,
        10750
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10862": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10782,
        10797
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10863": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10782,
        10797
      ],
      "op": "DUP6",
      "path": "1"
    },
    "10864": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10782,
        10797
      ],
      "op": "AND",
      "path": "1"
    },
    "10865": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10782,
        10797
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10866": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10782,
        10797
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10867": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10782,
        10797
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10868": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10782,
        10797
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10869": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10782,
        10797
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10870": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10887,
        10907
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10871": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10887,
        10907
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10872": {
      "branch": 184,
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10887,
        10907
      ],
      "op": "EQ",
      "path": "1"
    },
    "10873": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10883,
        11591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B2C"
    },
    "10876": {
      "branch": 184,
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10883,
        11591
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10877": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10976,
        10983
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10878": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10987,
        10988
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10880": {
      "branch": 185,
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10976,
        10988
      ],
      "op": "SUB",
      "path": "1"
    },
    "10881": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10972,
        11577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AC2"
    },
    "10884": {
      "branch": 185,
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10972,
        11577
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10885": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11109,
        11116
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 137
    },
    "10886": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11105
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "10888": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11105
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10890": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10891": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10892": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10893": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A96"
    },
    "10896": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10897": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10898": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "10901": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11093,
        11116
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10902": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10903": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10904": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10905": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11093,
        11116
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10906": {
      "op": "POP"
    },
    "10907": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11154,
        11173
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 138,
      "value": "0x2AA6"
    },
    "10910": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11154,
        11173
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10911": {
      "op": "POP"
    },
    "10912": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11164,
        11173
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10913": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11154,
        11161
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10914": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11154,
        11173
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "10917": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11154,
        11173
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10918": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11154,
        11173
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10919": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11150
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "10921": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11150
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10923": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10924": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10925": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10926": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AB7"
    },
    "10929": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10930": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10931": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "10934": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11138,
        11173
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10935": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10936": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10937": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10938": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11138,
        11173
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10939": {
      "op": "POP"
    },
    "10940": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10972,
        11577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B2C"
    },
    "10943": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10972,
        11577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10944": {
      "op": "POP"
    },
    "10945": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10972,
        11577
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10946": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10972,
        11577
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10947": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11263,
        11272
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10948": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11276,
        11277
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10950": {
      "branch": 186,
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11263,
        11277
      ],
      "op": "SUB",
      "path": "1"
    },
    "10951": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11259,
        11577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AFD"
    },
    "10954": {
      "branch": 186,
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11259,
        11577
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10955": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11317,
        11324
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 139
    },
    "10956": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "10958": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10960": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10961": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10962": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10963": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2ADC"
    },
    "10966": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10967": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10968": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C7"
    },
    "10971": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11301,
        11324
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10972": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10973": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10974": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10975": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11301,
        11324
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10976": {
      "op": "POP"
    },
    "10977": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11362,
        11379
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 140,
      "value": "0x2AEC"
    },
    "10980": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11362,
        11379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10981": {
      "op": "POP"
    },
    "10982": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11372,
        11379
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10983": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11362,
        11369
      ],
      "op": "DUP5",
      "path": "1"
    },
    "10984": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11362,
        11379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "10987": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11362,
        11379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10988": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11362,
        11379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10989": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11346,
        11358
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "10991": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11346,
        11358
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10993": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11346,
        11379
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10994": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11346,
        11379
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10995": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11346,
        11379
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10996": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11346,
        11379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AB7"
    },
    "10999": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11346,
        11379
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11000": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11346,
        11379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11001": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11346,
        11379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C7"
    },
    "11004": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11346,
        11379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11005": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11259,
        11577
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11006": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11538,
        11557
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 141,
      "value": "0x2B07"
    },
    "11009": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11548,
        11557
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11010": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11538,
        11545
      ],
      "op": "DUP5",
      "path": "1"
    },
    "11011": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11538,
        11557
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "11014": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11538,
        11557
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11015": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11538,
        11557
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11016": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11516,
        11533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B11"
    },
    "11019": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11526,
        11533
      ],
      "op": "DUP3",
      "path": "1"
    },
    "11020": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11516,
        11523
      ],
      "op": "DUP6",
      "path": "1"
    },
    "11021": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11516,
        11533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30DF"
    },
    "11024": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11516,
        11533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11025": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11516,
        11533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11026": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11512
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "11028": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11512
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11029": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11534
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B1E"
    },
    "11032": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11534
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11033": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11534
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11034": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11534
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C7"
    },
    "11037": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11500,
        11534
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11038": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11534
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11039": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11558
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B28"
    },
    "11042": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11558
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "11043": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11558
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11044": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11558
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30FE"
    },
    "11047": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        11500,
        11558
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11048": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11500,
        11558
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11049": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11485,
        11497
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "11051": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11485,
        11558
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "11052": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        11259,
        11577
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "11053": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10699,
        11601
      ],
      "op": "POP",
      "path": "1"
    },
    "11054": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10699,
        11601
      ],
      "op": "POP",
      "path": "1"
    },
    "11055": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10552,
        11607
      ],
      "op": "POP",
      "path": "1"
    },
    "11056": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10552,
        11607
      ],
      "op": "POP",
      "path": "1"
    },
    "11057": {
      "fn": "TokenVault._beforeTokenTransfer",
      "offset": [
        10552,
        11607
      ],
      "op": "POP",
      "path": "1"
    },
    "11058": {
      "fn": "TokenVault._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        10552,
        11607
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11059": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        753,
        817
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "11060": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11062": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11063": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "11066": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11067": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "15"
    },
    "11068": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11070": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "15"
    },
    "11071": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11072": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B4C"
    },
    "11075": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11076": {
      "op": "POP"
    },
    "11077": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11079": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11080": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11082": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "15"
    },
    "11083": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11084": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11085": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2B68"
    },
    "11088": {
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11089": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11091": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11092": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11096": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11098": {
      "op": "SHL"
    },
    "11099": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11100": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11101": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11103": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "15"
    },
    "11104": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x867"
    },
    "11107": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11108": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3132"
    },
    "11111": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11112": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11113": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11115": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11116": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "11119": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11120": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "15"
    },
    "11121": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11123": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "15"
    },
    "11124": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11125": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11126": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11127": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2487"
    },
    "11130": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11131": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11133": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11134": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11135": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11138": {
      "op": "NOT"
    },
    "11139": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "15"
    },
    "11140": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x101"
    },
    "11143": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "15"
    },
    "11144": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11145": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "11146": {
      "offset": [
        1667,
        1733
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11147": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11148": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2499"
    },
    "11151": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11152": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11154": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11155": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11156": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "11159": {
      "op": "NOT"
    },
    "11160": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "15"
    },
    "11161": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11162": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "11163": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "15"
    },
    "11164": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "jump": "o",
      "offset": [
        753,
        817
      ],
      "op": "JUMP",
      "path": "21"
    },
    "11165": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2218,
        2372
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "11166": {
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11168": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11169": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "11172": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11173": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DIV",
      "path": "15"
    },
    "11174": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11176": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "AND",
      "path": "15"
    },
    "11177": {
      "branch": 197,
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11178": {
      "offset": [
        1409,
        1439
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BB6"
    },
    "11181": {
      "branch": 197,
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11182": {
      "op": "POP"
    },
    "11183": {
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11185": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11186": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11188": {
      "branch": 198,
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1427,
        1439
      ],
      "op": "AND",
      "path": "15"
    },
    "11189": {
      "offset": [
        1426,
        1439
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11190": {
      "offset": [
        1409,
        1439
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11191": {
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BD2"
    },
    "11194": {
      "branch": 198,
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11195": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "11197": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "11198": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11202": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11204": {
      "op": "SHL"
    },
    "11205": {
      "offset": [
        1401,
        1490
      ],
      "op": "DUP2",
      "path": "15"
    },
    "11206": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "11207": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "11209": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "ADD",
      "path": "15"
    },
    "11210": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x867"
    },
    "11213": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11214": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x3132"
    },
    "11217": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMP",
      "path": "15"
    },
    "11218": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1401,
        1490
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11219": {
      "offset": [
        1501,
        1520
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11221": {
      "offset": [
        1524,
        1537
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11222": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "11225": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11226": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "DIV",
      "path": "15"
    },
    "11227": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "11229": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1524,
        1537
      ],
      "op": "AND",
      "path": "15"
    },
    "11230": {
      "offset": [
        1523,
        1537
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11231": {
      "offset": [
        1547,
        1645
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11232": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11233": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2BF4"
    },
    "11236": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11237": {
      "offset": [
        1581,
        1594
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11239": {
      "offset": [
        1581,
        1601
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11240": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1581,
        1601
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11241": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11244": {
      "op": "NOT"
    },
    "11245": {
      "offset": [
        1615,
        1634
      ],
      "op": "AND",
      "path": "15"
    },
    "11246": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x101"
    },
    "11249": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "OR",
      "path": "15"
    },
    "11250": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11251": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1615,
        1634
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "11252": {
      "offset": [
        1547,
        1645
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "11253": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2338
      ],
      "op": "DUP3",
      "path": "16",
      "statement": 142
    },
    "11254": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2338
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "11255": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C07"
    },
    "11258": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2338
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "11259": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2330
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x36"
    },
    "11261": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2330
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "11262": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2338
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "11264": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2338
      ],
      "op": "DUP7",
      "path": "16"
    },
    "11265": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2338
      ],
      "op": "ADD",
      "path": "16"
    },
    "11266": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2338
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "11267": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2338
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C32"
    },
    "11270": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2325,
        2338
      ],
      "op": "JUMP",
      "path": "16"
    },
    "11271": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2325,
        2338
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "11272": {
      "op": "POP"
    },
    "11273": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "DUP2",
      "path": "16",
      "statement": 143
    },
    "11274": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "11275": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C1B"
    },
    "11278": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "11279": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2355
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x37"
    },
    "11281": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2355
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "11282": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "11284": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "DUP6",
      "path": "16"
    },
    "11285": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "ADD",
      "path": "16"
    },
    "11286": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "11287": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C32"
    },
    "11290": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "i",
      "offset": [
        2348,
        2365
      ],
      "op": "JUMP",
      "path": "16"
    },
    "11291": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "11292": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2348,
        2365
      ],
      "op": "POP",
      "path": "16"
    },
    "11293": {
      "offset": [
        1671,
        1685
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11294": {
      "offset": [
        1667,
        1733
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "11295": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1667,
        1733
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x21BE"
    },
    "11298": {
      "offset": [
        1667,
        1733
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "11299": {
      "offset": [
        1717,
        1722
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "11301": {
      "offset": [
        1701,
        1722
      ],
      "op": "DUP1",
      "path": "15"
    },
    "11302": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "11303": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "11306": {
      "op": "NOT"
    },
    "11307": {
      "offset": [
        1701,
        1722
      ],
      "op": "AND",
      "path": "15"
    },
    "11308": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "11309": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        1701,
        1722
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "11310": {
      "offset": [
        1391,
        1739
      ],
      "op": "POP",
      "path": "15"
    },
    "11311": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2218,
        2372
      ],
      "op": "POP",
      "path": "16"
    },
    "11312": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "offset": [
        2218,
        2372
      ],
      "op": "POP",
      "path": "16"
    },
    "11313": {
      "fn": "ERC20Upgradeable.__ERC20_init_unchained",
      "jump": "o",
      "offset": [
        2218,
        2372
      ],
      "op": "JUMP",
      "path": "16"
    },
    "11314": {
      "op": "JUMPDEST"
    },
    "11315": {
      "op": "DUP3"
    },
    "11316": {
      "op": "DUP1"
    },
    "11317": {
      "op": "SLOAD"
    },
    "11318": {
      "op": "PUSH2",
      "value": "0x2C3E"
    },
    "11321": {
      "op": "SWAP1"
    },
    "11322": {
      "op": "PUSH2",
      "value": "0x3032"
    },
    "11325": {
      "jump": "i",
      "op": "JUMP"
    },
    "11326": {
      "op": "JUMPDEST"
    },
    "11327": {
      "op": "SWAP1"
    },
    "11328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11330": {
      "op": "MSTORE"
    },
    "11331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11335": {
      "op": "KECCAK256"
    },
    "11336": {
      "op": "SWAP1"
    },
    "11337": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11339": {
      "op": "ADD"
    },
    "11340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11342": {
      "op": "SWAP1"
    },
    "11343": {
      "op": "DIV"
    },
    "11344": {
      "op": "DUP2"
    },
    "11345": {
      "op": "ADD"
    },
    "11346": {
      "op": "SWAP3"
    },
    "11347": {
      "op": "DUP3"
    },
    "11348": {
      "op": "PUSH2",
      "value": "0x2C60"
    },
    "11351": {
      "op": "JUMPI"
    },
    "11352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11354": {
      "op": "DUP6"
    },
    "11355": {
      "op": "SSTORE"
    },
    "11356": {
      "op": "PUSH2",
      "value": "0x2CA6"
    },
    "11359": {
      "op": "JUMP"
    },
    "11360": {
      "op": "JUMPDEST"
    },
    "11361": {
      "op": "DUP3"
    },
    "11362": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11364": {
      "op": "LT"
    },
    "11365": {
      "op": "PUSH2",
      "value": "0x2C79"
    },
    "11368": {
      "op": "JUMPI"
    },
    "11369": {
      "op": "DUP1"
    },
    "11370": {
      "op": "MLOAD"
    },
    "11371": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11373": {
      "op": "NOT"
    },
    "11374": {
      "op": "AND"
    },
    "11375": {
      "op": "DUP4"
    },
    "11376": {
      "op": "DUP1"
    },
    "11377": {
      "op": "ADD"
    },
    "11378": {
      "op": "OR"
    },
    "11379": {
      "op": "DUP6"
    },
    "11380": {
      "op": "SSTORE"
    },
    "11381": {
      "op": "PUSH2",
      "value": "0x2CA6"
    },
    "11384": {
      "op": "JUMP"
    },
    "11385": {
      "op": "JUMPDEST"
    },
    "11386": {
      "op": "DUP3"
    },
    "11387": {
      "op": "DUP1"
    },
    "11388": {
      "op": "ADD"
    },
    "11389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11391": {
      "op": "ADD"
    },
    "11392": {
      "op": "DUP6"
    },
    "11393": {
      "op": "SSTORE"
    },
    "11394": {
      "op": "DUP3"
    },
    "11395": {
      "op": "ISZERO"
    },
    "11396": {
      "op": "PUSH2",
      "value": "0x2CA6"
    },
    "11399": {
      "op": "JUMPI"
    },
    "11400": {
      "op": "SWAP2"
    },
    "11401": {
      "op": "DUP3"
    },
    "11402": {
      "op": "ADD"
    },
    "11403": {
      "op": "JUMPDEST"
    },
    "11404": {
      "op": "DUP3"
    },
    "11405": {
      "op": "DUP2"
    },
    "11406": {
      "op": "GT"
    },
    "11407": {
      "op": "ISZERO"
    },
    "11408": {
      "op": "PUSH2",
      "value": "0x2CA6"
    },
    "11411": {
      "op": "JUMPI"
    },
    "11412": {
      "op": "DUP3"
    },
    "11413": {
      "op": "MLOAD"
    },
    "11414": {
      "op": "DUP3"
    },
    "11415": {
      "op": "SSTORE"
    },
    "11416": {
      "op": "SWAP2"
    },
    "11417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11419": {
      "op": "ADD"
    },
    "11420": {
      "op": "SWAP2"
    },
    "11421": {
      "op": "SWAP1"
    },
    "11422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11424": {
      "op": "ADD"
    },
    "11425": {
      "op": "SWAP1"
    },
    "11426": {
      "op": "PUSH2",
      "value": "0x2C8B"
    },
    "11429": {
      "op": "JUMP"
    },
    "11430": {
      "op": "JUMPDEST"
    },
    "11431": {
      "op": "POP"
    },
    "11432": {
      "op": "PUSH2",
      "value": "0x2CB2"
    },
    "11435": {
      "op": "SWAP3"
    },
    "11436": {
      "op": "SWAP2"
    },
    "11437": {
      "op": "POP"
    },
    "11438": {
      "op": "PUSH2",
      "value": "0x2CB6"
    },
    "11441": {
      "jump": "i",
      "op": "JUMP"
    },
    "11442": {
      "op": "JUMPDEST"
    },
    "11443": {
      "op": "POP"
    },
    "11444": {
      "op": "SWAP1"
    },
    "11445": {
      "jump": "o",
      "op": "JUMP"
    },
    "11446": {
      "op": "JUMPDEST"
    },
    "11447": {
      "op": "JUMPDEST"
    },
    "11448": {
      "op": "DUP1"
    },
    "11449": {
      "op": "DUP3"
    },
    "11450": {
      "op": "GT"
    },
    "11451": {
      "op": "ISZERO"
    },
    "11452": {
      "op": "PUSH2",
      "value": "0x2CB2"
    },
    "11455": {
      "op": "JUMPI"
    },
    "11456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11458": {
      "op": "DUP2"
    },
    "11459": {
      "op": "SSTORE"
    },
    "11460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11462": {
      "op": "ADD"
    },
    "11463": {
      "op": "PUSH2",
      "value": "0x2CB7"
    },
    "11466": {
      "op": "JUMP"
    },
    "11467": {
      "op": "JUMPDEST"
    },
    "11468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11472": {
      "op": "DUP1"
    },
    "11473": {
      "op": "DUP4"
    },
    "11474": {
      "op": "MSTORE"
    },
    "11475": {
      "op": "DUP4"
    },
    "11476": {
      "op": "MLOAD"
    },
    "11477": {
      "op": "DUP1"
    },
    "11478": {
      "op": "DUP3"
    },
    "11479": {
      "op": "DUP6"
    },
    "11480": {
      "op": "ADD"
    },
    "11481": {
      "op": "MSTORE"
    },
    "11482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11484": {
      "op": "JUMPDEST"
    },
    "11485": {
      "op": "DUP2"
    },
    "11486": {
      "op": "DUP2"
    },
    "11487": {
      "op": "LT"
    },
    "11488": {
      "op": "ISZERO"
    },
    "11489": {
      "op": "PUSH2",
      "value": "0x2CF8"
    },
    "11492": {
      "op": "JUMPI"
    },
    "11493": {
      "op": "DUP6"
    },
    "11494": {
      "op": "DUP2"
    },
    "11495": {
      "op": "ADD"
    },
    "11496": {
      "op": "DUP4"
    },
    "11497": {
      "op": "ADD"
    },
    "11498": {
      "op": "MLOAD"
    },
    "11499": {
      "op": "DUP6"
    },
    "11500": {
      "op": "DUP3"
    },
    "11501": {
      "op": "ADD"
    },
    "11502": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11504": {
      "op": "ADD"
    },
    "11505": {
      "op": "MSTORE"
    },
    "11506": {
      "op": "DUP3"
    },
    "11507": {
      "op": "ADD"
    },
    "11508": {
      "op": "PUSH2",
      "value": "0x2CDC"
    },
    "11511": {
      "op": "JUMP"
    },
    "11512": {
      "op": "JUMPDEST"
    },
    "11513": {
      "op": "DUP2"
    },
    "11514": {
      "op": "DUP2"
    },
    "11515": {
      "op": "GT"
    },
    "11516": {
      "op": "ISZERO"
    },
    "11517": {
      "op": "PUSH2",
      "value": "0x2D0A"
    },
    "11520": {
      "op": "JUMPI"
    },
    "11521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11523": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11525": {
      "op": "DUP4"
    },
    "11526": {
      "op": "DUP8"
    },
    "11527": {
      "op": "ADD"
    },
    "11528": {
      "op": "ADD"
    },
    "11529": {
      "op": "MSTORE"
    },
    "11530": {
      "op": "JUMPDEST"
    },
    "11531": {
      "op": "POP"
    },
    "11532": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11534": {
      "op": "ADD"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11537": {
      "op": "NOT"
    },
    "11538": {
      "op": "AND"
    },
    "11539": {
      "op": "SWAP3"
    },
    "11540": {
      "op": "SWAP1"
    },
    "11541": {
      "op": "SWAP3"
    },
    "11542": {
      "op": "ADD"
    },
    "11543": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11545": {
      "op": "ADD"
    },
    "11546": {
      "op": "SWAP4"
    },
    "11547": {
      "op": "SWAP3"
    },
    "11548": {
      "op": "POP"
    },
    "11549": {
      "op": "POP"
    },
    "11550": {
      "op": "POP"
    },
    "11551": {
      "jump": "o",
      "op": "JUMP"
    },
    "11552": {
      "op": "JUMPDEST"
    },
    "11553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11559": {
      "op": "SHL"
    },
    "11560": {
      "op": "SUB"
    },
    "11561": {
      "op": "DUP2"
    },
    "11562": {
      "op": "AND"
    },
    "11563": {
      "op": "DUP2"
    },
    "11564": {
      "op": "EQ"
    },
    "11565": {
      "op": "PUSH2",
      "value": "0x2499"
    },
    "11568": {
      "op": "JUMPI"
    },
    "11569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11571": {
      "op": "DUP1"
    },
    "11572": {
      "op": "REVERT"
    },
    "11573": {
      "op": "JUMPDEST"
    },
    "11574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11576": {
      "op": "DUP1"
    },
    "11577": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11579": {
      "op": "DUP4"
    },
    "11580": {
      "op": "DUP6"
    },
    "11581": {
      "op": "SUB"
    },
    "11582": {
      "op": "SLT"
    },
    "11583": {
      "op": "ISZERO"
    },
    "11584": {
      "op": "PUSH2",
      "value": "0x2D48"
    },
    "11587": {
      "op": "JUMPI"
    },
    "11588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11590": {
      "op": "DUP1"
    },
    "11591": {
      "op": "REVERT"
    },
    "11592": {
      "op": "JUMPDEST"
    },
    "11593": {
      "op": "DUP3"
    },
    "11594": {
      "op": "CALLDATALOAD"
    },
    "11595": {
      "op": "PUSH2",
      "value": "0x2D53"
    },
    "11598": {
      "op": "DUP2"
    },
    "11599": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "11602": {
      "jump": "i",
      "op": "JUMP"
    },
    "11603": {
      "op": "JUMPDEST"
    },
    "11604": {
      "op": "SWAP5"
    },
    "11605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11607": {
      "op": "SWAP4"
    },
    "11608": {
      "op": "SWAP1"
    },
    "11609": {
      "op": "SWAP4"
    },
    "11610": {
      "op": "ADD"
    },
    "11611": {
      "op": "CALLDATALOAD"
    },
    "11612": {
      "op": "SWAP4"
    },
    "11613": {
      "op": "POP"
    },
    "11614": {
      "op": "POP"
    },
    "11615": {
      "op": "POP"
    },
    "11616": {
      "jump": "o",
      "op": "JUMP"
    },
    "11617": {
      "op": "JUMPDEST"
    },
    "11618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11622": {
      "op": "DUP3"
    },
    "11623": {
      "op": "DUP5"
    },
    "11624": {
      "op": "SUB"
    },
    "11625": {
      "op": "SLT"
    },
    "11626": {
      "op": "ISZERO"
    },
    "11627": {
      "op": "PUSH2",
      "value": "0x2D73"
    },
    "11630": {
      "op": "JUMPI"
    },
    "11631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11633": {
      "op": "DUP1"
    },
    "11634": {
      "op": "REVERT"
    },
    "11635": {
      "op": "JUMPDEST"
    },
    "11636": {
      "op": "DUP2"
    },
    "11637": {
      "op": "CALLDATALOAD"
    },
    "11638": {
      "op": "PUSH2",
      "value": "0x2D7E"
    },
    "11641": {
      "op": "DUP2"
    },
    "11642": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "11645": {
      "jump": "i",
      "op": "JUMP"
    },
    "11646": {
      "op": "JUMPDEST"
    },
    "11647": {
      "op": "SWAP4"
    },
    "11648": {
      "op": "SWAP3"
    },
    "11649": {
      "op": "POP"
    },
    "11650": {
      "op": "POP"
    },
    "11651": {
      "op": "POP"
    },
    "11652": {
      "jump": "o",
      "op": "JUMP"
    },
    "11653": {
      "op": "JUMPDEST"
    },
    "11654": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11661": {
      "op": "SHL"
    },
    "11662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11664": {
      "op": "MSTORE"
    },
    "11665": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "11667": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11669": {
      "op": "MSTORE"
    },
    "11670": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11674": {
      "op": "REVERT"
    },
    "11675": {
      "op": "JUMPDEST"
    },
    "11676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11678": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11687": {
      "op": "DUP1"
    },
    "11688": {
      "op": "DUP5"
    },
    "11689": {
      "op": "GT"
    },
    "11690": {
      "op": "ISZERO"
    },
    "11691": {
      "op": "PUSH2",
      "value": "0x2DB6"
    },
    "11694": {
      "op": "JUMPI"
    },
    "11695": {
      "op": "PUSH2",
      "value": "0x2DB6"
    },
    "11698": {
      "op": "PUSH2",
      "value": "0x2D85"
    },
    "11701": {
      "jump": "i",
      "op": "JUMP"
    },
    "11702": {
      "op": "JUMPDEST"
    },
    "11703": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11705": {
      "op": "MLOAD"
    },
    "11706": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11708": {
      "op": "DUP6"
    },
    "11709": {
      "op": "ADD"
    },
    "11710": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11712": {
      "op": "NOT"
    },
    "11713": {
      "op": "SWAP1"
    },
    "11714": {
      "op": "DUP2"
    },
    "11715": {
      "op": "AND"
    },
    "11716": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "11718": {
      "op": "ADD"
    },
    "11719": {
      "op": "AND"
    },
    "11720": {
      "op": "DUP2"
    },
    "11721": {
      "op": "ADD"
    },
    "11722": {
      "op": "SWAP1"
    },
    "11723": {
      "op": "DUP3"
    },
    "11724": {
      "op": "DUP3"
    },
    "11725": {
      "op": "GT"
    },
    "11726": {
      "op": "DUP2"
    },
    "11727": {
      "op": "DUP4"
    },
    "11728": {
      "op": "LT"
    },
    "11729": {
      "op": "OR"
    },
    "11730": {
      "op": "ISZERO"
    },
    "11731": {
      "op": "PUSH2",
      "value": "0x2DDE"
    },
    "11734": {
      "op": "JUMPI"
    },
    "11735": {
      "op": "PUSH2",
      "value": "0x2DDE"
    },
    "11738": {
      "op": "PUSH2",
      "value": "0x2D85"
    },
    "11741": {
      "jump": "i",
      "op": "JUMP"
    },
    "11742": {
      "op": "JUMPDEST"
    },
    "11743": {
      "op": "DUP2"
    },
    "11744": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11746": {
      "op": "MSTORE"
    },
    "11747": {
      "op": "DUP1"
    },
    "11748": {
      "op": "SWAP4"
    },
    "11749": {
      "op": "POP"
    },
    "11750": {
      "op": "DUP6"
    },
    "11751": {
      "op": "DUP2"
    },
    "11752": {
      "op": "MSTORE"
    },
    "11753": {
      "op": "DUP7"
    },
    "11754": {
      "op": "DUP7"
    },
    "11755": {
      "op": "DUP7"
    },
    "11756": {
      "op": "ADD"
    },
    "11757": {
      "op": "GT"
    },
    "11758": {
      "op": "ISZERO"
    },
    "11759": {
      "op": "PUSH2",
      "value": "0x2DF7"
    },
    "11762": {
      "op": "JUMPI"
    },
    "11763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11765": {
      "op": "DUP1"
    },
    "11766": {
      "op": "REVERT"
    },
    "11767": {
      "op": "JUMPDEST"
    },
    "11768": {
      "op": "DUP6"
    },
    "11769": {
      "op": "DUP6"
    },
    "11770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11772": {
      "op": "DUP4"
    },
    "11773": {
      "op": "ADD"
    },
    "11774": {
      "op": "CALLDATACOPY"
    },
    "11775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11779": {
      "op": "DUP8"
    },
    "11780": {
      "op": "DUP4"
    },
    "11781": {
      "op": "ADD"
    },
    "11782": {
      "op": "ADD"
    },
    "11783": {
      "op": "MSTORE"
    },
    "11784": {
      "op": "POP"
    },
    "11785": {
      "op": "POP"
    },
    "11786": {
      "op": "POP"
    },
    "11787": {
      "op": "SWAP4"
    },
    "11788": {
      "op": "SWAP3"
    },
    "11789": {
      "op": "POP"
    },
    "11790": {
      "op": "POP"
    },
    "11791": {
      "op": "POP"
    },
    "11792": {
      "jump": "o",
      "op": "JUMP"
    },
    "11793": {
      "op": "JUMPDEST"
    },
    "11794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11796": {
      "op": "DUP1"
    },
    "11797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11799": {
      "op": "DUP1"
    },
    "11800": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11802": {
      "op": "DUP6"
    },
    "11803": {
      "op": "DUP8"
    },
    "11804": {
      "op": "SUB"
    },
    "11805": {
      "op": "SLT"
    },
    "11806": {
      "op": "ISZERO"
    },
    "11807": {
      "op": "PUSH2",
      "value": "0x2E27"
    },
    "11810": {
      "op": "JUMPI"
    },
    "11811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11813": {
      "op": "DUP1"
    },
    "11814": {
      "op": "REVERT"
    },
    "11815": {
      "op": "JUMPDEST"
    },
    "11816": {
      "op": "DUP5"
    },
    "11817": {
      "op": "CALLDATALOAD"
    },
    "11818": {
      "op": "PUSH2",
      "value": "0x2E32"
    },
    "11821": {
      "op": "DUP2"
    },
    "11822": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "11825": {
      "jump": "i",
      "op": "JUMP"
    },
    "11826": {
      "op": "JUMPDEST"
    },
    "11827": {
      "op": "SWAP4"
    },
    "11828": {
      "op": "POP"
    },
    "11829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11831": {
      "op": "DUP6"
    },
    "11832": {
      "op": "ADD"
    },
    "11833": {
      "op": "CALLDATALOAD"
    },
    "11834": {
      "op": "PUSH2",
      "value": "0x2E42"
    },
    "11837": {
      "op": "DUP2"
    },
    "11838": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "11841": {
      "jump": "i",
      "op": "JUMP"
    },
    "11842": {
      "op": "JUMPDEST"
    },
    "11843": {
      "op": "SWAP3"
    },
    "11844": {
      "op": "POP"
    },
    "11845": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11847": {
      "op": "DUP6"
    },
    "11848": {
      "op": "ADD"
    },
    "11849": {
      "op": "CALLDATALOAD"
    },
    "11850": {
      "op": "SWAP2"
    },
    "11851": {
      "op": "POP"
    },
    "11852": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11854": {
      "op": "DUP6"
    },
    "11855": {
      "op": "ADD"
    },
    "11856": {
      "op": "CALLDATALOAD"
    },
    "11857": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11866": {
      "op": "DUP2"
    },
    "11867": {
      "op": "GT"
    },
    "11868": {
      "op": "ISZERO"
    },
    "11869": {
      "op": "PUSH2",
      "value": "0x2E65"
    },
    "11872": {
      "op": "JUMPI"
    },
    "11873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11875": {
      "op": "DUP1"
    },
    "11876": {
      "op": "REVERT"
    },
    "11877": {
      "op": "JUMPDEST"
    },
    "11878": {
      "op": "DUP6"
    },
    "11879": {
      "op": "ADD"
    },
    "11880": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11882": {
      "op": "DUP2"
    },
    "11883": {
      "op": "ADD"
    },
    "11884": {
      "op": "DUP8"
    },
    "11885": {
      "op": "SGT"
    },
    "11886": {
      "op": "PUSH2",
      "value": "0x2E76"
    },
    "11889": {
      "op": "JUMPI"
    },
    "11890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11892": {
      "op": "DUP1"
    },
    "11893": {
      "op": "REVERT"
    },
    "11894": {
      "op": "JUMPDEST"
    },
    "11895": {
      "op": "PUSH2",
      "value": "0x2E85"
    },
    "11898": {
      "op": "DUP8"
    },
    "11899": {
      "op": "DUP3"
    },
    "11900": {
      "op": "CALLDATALOAD"
    },
    "11901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11903": {
      "op": "DUP5"
    },
    "11904": {
      "op": "ADD"
    },
    "11905": {
      "op": "PUSH2",
      "value": "0x2D9B"
    },
    "11908": {
      "jump": "i",
      "op": "JUMP"
    },
    "11909": {
      "op": "JUMPDEST"
    },
    "11910": {
      "op": "SWAP2"
    },
    "11911": {
      "op": "POP"
    },
    "11912": {
      "op": "POP"
    },
    "11913": {
      "op": "SWAP3"
    },
    "11914": {
      "op": "SWAP6"
    },
    "11915": {
      "op": "SWAP2"
    },
    "11916": {
      "op": "SWAP5"
    },
    "11917": {
      "op": "POP"
    },
    "11918": {
      "op": "SWAP3"
    },
    "11919": {
      "op": "POP"
    },
    "11920": {
      "jump": "o",
      "op": "JUMP"
    },
    "11921": {
      "op": "JUMPDEST"
    },
    "11922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11924": {
      "op": "DUP1"
    },
    "11925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11927": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11929": {
      "op": "DUP5"
    },
    "11930": {
      "op": "DUP7"
    },
    "11931": {
      "op": "SUB"
    },
    "11932": {
      "op": "SLT"
    },
    "11933": {
      "op": "ISZERO"
    },
    "11934": {
      "op": "PUSH2",
      "value": "0x2EA6"
    },
    "11937": {
      "op": "JUMPI"
    },
    "11938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11940": {
      "op": "DUP1"
    },
    "11941": {
      "op": "REVERT"
    },
    "11942": {
      "op": "JUMPDEST"
    },
    "11943": {
      "op": "DUP4"
    },
    "11944": {
      "op": "CALLDATALOAD"
    },
    "11945": {
      "op": "PUSH2",
      "value": "0x2EB1"
    },
    "11948": {
      "op": "DUP2"
    },
    "11949": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "11952": {
      "jump": "i",
      "op": "JUMP"
    },
    "11953": {
      "op": "JUMPDEST"
    },
    "11954": {
      "op": "SWAP3"
    },
    "11955": {
      "op": "POP"
    },
    "11956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11958": {
      "op": "DUP5"
    },
    "11959": {
      "op": "ADD"
    },
    "11960": {
      "op": "CALLDATALOAD"
    },
    "11961": {
      "op": "PUSH2",
      "value": "0x2EC1"
    },
    "11964": {
      "op": "DUP2"
    },
    "11965": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "11968": {
      "jump": "i",
      "op": "JUMP"
    },
    "11969": {
      "op": "JUMPDEST"
    },
    "11970": {
      "op": "SWAP3"
    },
    "11971": {
      "op": "SWAP6"
    },
    "11972": {
      "op": "SWAP3"
    },
    "11973": {
      "op": "SWAP5"
    },
    "11974": {
      "op": "POP"
    },
    "11975": {
      "op": "POP"
    },
    "11976": {
      "op": "POP"
    },
    "11977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11979": {
      "op": "SWAP2"
    },
    "11980": {
      "op": "SWAP1"
    },
    "11981": {
      "op": "SWAP2"
    },
    "11982": {
      "op": "ADD"
    },
    "11983": {
      "op": "CALLDATALOAD"
    },
    "11984": {
      "op": "SWAP1"
    },
    "11985": {
      "jump": "o",
      "op": "JUMP"
    },
    "11986": {
      "op": "JUMPDEST"
    },
    "11987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11991": {
      "op": "DUP3"
    },
    "11992": {
      "op": "DUP5"
    },
    "11993": {
      "op": "SUB"
    },
    "11994": {
      "op": "SLT"
    },
    "11995": {
      "op": "ISZERO"
    },
    "11996": {
      "op": "PUSH2",
      "value": "0x2EE4"
    },
    "11999": {
      "op": "JUMPI"
    },
    "12000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12002": {
      "op": "DUP1"
    },
    "12003": {
      "op": "REVERT"
    },
    "12004": {
      "op": "JUMPDEST"
    },
    "12005": {
      "op": "POP"
    },
    "12006": {
      "op": "CALLDATALOAD"
    },
    "12007": {
      "op": "SWAP2"
    },
    "12008": {
      "op": "SWAP1"
    },
    "12009": {
      "op": "POP"
    },
    "12010": {
      "jump": "o",
      "op": "JUMP"
    },
    "12011": {
      "op": "JUMPDEST"
    },
    "12012": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12014": {
      "op": "DUP3"
    },
    "12015": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12017": {
      "op": "DUP4"
    },
    "12018": {
      "op": "ADD"
    },
    "12019": {
      "op": "SLT"
    },
    "12020": {
      "op": "PUSH2",
      "value": "0x2EFC"
    },
    "12023": {
      "op": "JUMPI"
    },
    "12024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12026": {
      "op": "DUP1"
    },
    "12027": {
      "op": "REVERT"
    },
    "12028": {
      "op": "JUMPDEST"
    },
    "12029": {
      "op": "PUSH2",
      "value": "0x2D7E"
    },
    "12032": {
      "op": "DUP4"
    },
    "12033": {
      "op": "DUP4"
    },
    "12034": {
      "op": "CALLDATALOAD"
    },
    "12035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12037": {
      "op": "DUP6"
    },
    "12038": {
      "op": "ADD"
    },
    "12039": {
      "op": "PUSH2",
      "value": "0x2D9B"
    },
    "12042": {
      "jump": "i",
      "op": "JUMP"
    },
    "12043": {
      "op": "JUMPDEST"
    },
    "12044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12046": {
      "op": "DUP1"
    },
    "12047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12049": {
      "op": "DUP1"
    },
    "12050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12052": {
      "op": "DUP1"
    },
    "12053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12055": {
      "op": "DUP1"
    },
    "12056": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "12059": {
      "op": "DUP10"
    },
    "12060": {
      "op": "DUP12"
    },
    "12061": {
      "op": "SUB"
    },
    "12062": {
      "op": "SLT"
    },
    "12063": {
      "op": "ISZERO"
    },
    "12064": {
      "op": "PUSH2",
      "value": "0x2F28"
    },
    "12067": {
      "op": "JUMPI"
    },
    "12068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12070": {
      "op": "DUP1"
    },
    "12071": {
      "op": "REVERT"
    },
    "12072": {
      "op": "JUMPDEST"
    },
    "12073": {
      "op": "DUP9"
    },
    "12074": {
      "op": "CALLDATALOAD"
    },
    "12075": {
      "op": "PUSH2",
      "value": "0x2F33"
    },
    "12078": {
      "op": "DUP2"
    },
    "12079": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "12082": {
      "jump": "i",
      "op": "JUMP"
    },
    "12083": {
      "op": "JUMPDEST"
    },
    "12084": {
      "op": "SWAP8"
    },
    "12085": {
      "op": "POP"
    },
    "12086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12088": {
      "op": "DUP10"
    },
    "12089": {
      "op": "ADD"
    },
    "12090": {
      "op": "CALLDATALOAD"
    },
    "12091": {
      "op": "PUSH2",
      "value": "0x2F43"
    },
    "12094": {
      "op": "DUP2"
    },
    "12095": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "12098": {
      "jump": "i",
      "op": "JUMP"
    },
    "12099": {
      "op": "JUMPDEST"
    },
    "12100": {
      "op": "SWAP7"
    },
    "12101": {
      "op": "POP"
    },
    "12102": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12104": {
      "op": "DUP10"
    },
    "12105": {
      "op": "ADD"
    },
    "12106": {
      "op": "CALLDATALOAD"
    },
    "12107": {
      "op": "SWAP6"
    },
    "12108": {
      "op": "POP"
    },
    "12109": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12111": {
      "op": "DUP10"
    },
    "12112": {
      "op": "ADD"
    },
    "12113": {
      "op": "CALLDATALOAD"
    },
    "12114": {
      "op": "SWAP5"
    },
    "12115": {
      "op": "POP"
    },
    "12116": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12118": {
      "op": "DUP10"
    },
    "12119": {
      "op": "ADD"
    },
    "12120": {
      "op": "CALLDATALOAD"
    },
    "12121": {
      "op": "SWAP4"
    },
    "12122": {
      "op": "POP"
    },
    "12123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12125": {
      "op": "DUP10"
    },
    "12126": {
      "op": "ADD"
    },
    "12127": {
      "op": "CALLDATALOAD"
    },
    "12128": {
      "op": "SWAP3"
    },
    "12129": {
      "op": "POP"
    },
    "12130": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12132": {
      "op": "DUP10"
    },
    "12133": {
      "op": "ADD"
    },
    "12134": {
      "op": "CALLDATALOAD"
    },
    "12135": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12144": {
      "op": "DUP1"
    },
    "12145": {
      "op": "DUP3"
    },
    "12146": {
      "op": "GT"
    },
    "12147": {
      "op": "ISZERO"
    },
    "12148": {
      "op": "PUSH2",
      "value": "0x2F7C"
    },
    "12151": {
      "op": "JUMPI"
    },
    "12152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12154": {
      "op": "DUP1"
    },
    "12155": {
      "op": "REVERT"
    },
    "12156": {
      "op": "JUMPDEST"
    },
    "12157": {
      "op": "PUSH2",
      "value": "0x2F88"
    },
    "12160": {
      "op": "DUP13"
    },
    "12161": {
      "op": "DUP4"
    },
    "12162": {
      "op": "DUP14"
    },
    "12163": {
      "op": "ADD"
    },
    "12164": {
      "op": "PUSH2",
      "value": "0x2EEB"
    },
    "12167": {
      "jump": "i",
      "op": "JUMP"
    },
    "12168": {
      "op": "JUMPDEST"
    },
    "12169": {
      "op": "SWAP4"
    },
    "12170": {
      "op": "POP"
    },
    "12171": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12173": {
      "op": "DUP12"
    },
    "12174": {
      "op": "ADD"
    },
    "12175": {
      "op": "CALLDATALOAD"
    },
    "12176": {
      "op": "SWAP2"
    },
    "12177": {
      "op": "POP"
    },
    "12178": {
      "op": "DUP1"
    },
    "12179": {
      "op": "DUP3"
    },
    "12180": {
      "op": "GT"
    },
    "12181": {
      "op": "ISZERO"
    },
    "12182": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "12185": {
      "op": "JUMPI"
    },
    "12186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12188": {
      "op": "DUP1"
    },
    "12189": {
      "op": "REVERT"
    },
    "12190": {
      "op": "JUMPDEST"
    },
    "12191": {
      "op": "POP"
    },
    "12192": {
      "op": "PUSH2",
      "value": "0x2FAB"
    },
    "12195": {
      "op": "DUP12"
    },
    "12196": {
      "op": "DUP3"
    },
    "12197": {
      "op": "DUP13"
    },
    "12198": {
      "op": "ADD"
    },
    "12199": {
      "op": "PUSH2",
      "value": "0x2EEB"
    },
    "12202": {
      "jump": "i",
      "op": "JUMP"
    },
    "12203": {
      "op": "JUMPDEST"
    },
    "12204": {
      "op": "SWAP2"
    },
    "12205": {
      "op": "POP"
    },
    "12206": {
      "op": "POP"
    },
    "12207": {
      "op": "SWAP3"
    },
    "12208": {
      "op": "SWAP6"
    },
    "12209": {
      "op": "SWAP9"
    },
    "12210": {
      "op": "POP"
    },
    "12211": {
      "op": "SWAP3"
    },
    "12212": {
      "op": "SWAP6"
    },
    "12213": {
      "op": "SWAP9"
    },
    "12214": {
      "op": "SWAP1"
    },
    "12215": {
      "op": "SWAP4"
    },
    "12216": {
      "op": "SWAP7"
    },
    "12217": {
      "op": "POP"
    },
    "12218": {
      "jump": "o",
      "op": "JUMP"
    },
    "12219": {
      "op": "JUMPDEST"
    },
    "12220": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12225": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12227": {
      "op": "SHL"
    },
    "12228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12230": {
      "op": "MSTORE"
    },
    "12231": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12233": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12235": {
      "op": "MSTORE"
    },
    "12236": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12240": {
      "op": "REVERT"
    },
    "12241": {
      "op": "JUMPDEST"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12244": {
      "op": "DUP2"
    },
    "12245": {
      "op": "ADD"
    },
    "12246": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12248": {
      "op": "DUP4"
    },
    "12249": {
      "op": "LT"
    },
    "12250": {
      "op": "PUSH2",
      "value": "0x2FF3"
    },
    "12253": {
      "op": "JUMPI"
    },
    "12254": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12259": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12261": {
      "op": "SHL"
    },
    "12262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12264": {
      "op": "MSTORE"
    },
    "12265": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "12267": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12269": {
      "op": "MSTORE"
    },
    "12270": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12274": {
      "op": "REVERT"
    },
    "12275": {
      "op": "JUMPDEST"
    },
    "12276": {
      "op": "SWAP2"
    },
    "12277": {
      "op": "SWAP1"
    },
    "12278": {
      "op": "MSTORE"
    },
    "12279": {
      "op": "SWAP1"
    },
    "12280": {
      "jump": "o",
      "op": "JUMP"
    },
    "12281": {
      "op": "JUMPDEST"
    },
    "12282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12284": {
      "op": "DUP1"
    },
    "12285": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12287": {
      "op": "DUP4"
    },
    "12288": {
      "op": "DUP6"
    },
    "12289": {
      "op": "SUB"
    },
    "12290": {
      "op": "SLT"
    },
    "12291": {
      "op": "ISZERO"
    },
    "12292": {
      "op": "PUSH2",
      "value": "0x300C"
    },
    "12295": {
      "op": "JUMPI"
    },
    "12296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12298": {
      "op": "DUP1"
    },
    "12299": {
      "op": "REVERT"
    },
    "12300": {
      "op": "JUMPDEST"
    },
    "12301": {
      "op": "DUP3"
    },
    "12302": {
      "op": "CALLDATALOAD"
    },
    "12303": {
      "op": "PUSH2",
      "value": "0x3017"
    },
    "12306": {
      "op": "DUP2"
    },
    "12307": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "12310": {
      "jump": "i",
      "op": "JUMP"
    },
    "12311": {
      "op": "JUMPDEST"
    },
    "12312": {
      "op": "SWAP2"
    },
    "12313": {
      "op": "POP"
    },
    "12314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12316": {
      "op": "DUP4"
    },
    "12317": {
      "op": "ADD"
    },
    "12318": {
      "op": "CALLDATALOAD"
    },
    "12319": {
      "op": "PUSH2",
      "value": "0x3027"
    },
    "12322": {
      "op": "DUP2"
    },
    "12323": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "12326": {
      "jump": "i",
      "op": "JUMP"
    },
    "12327": {
      "op": "JUMPDEST"
    },
    "12328": {
      "op": "DUP1"
    },
    "12329": {
      "op": "SWAP2"
    },
    "12330": {
      "op": "POP"
    },
    "12331": {
      "op": "POP"
    },
    "12332": {
      "op": "SWAP3"
    },
    "12333": {
      "op": "POP"
    },
    "12334": {
      "op": "SWAP3"
    },
    "12335": {
      "op": "SWAP1"
    },
    "12336": {
      "op": "POP"
    },
    "12337": {
      "jump": "o",
      "op": "JUMP"
    },
    "12338": {
      "op": "JUMPDEST"
    },
    "12339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12341": {
      "op": "DUP2"
    },
    "12342": {
      "op": "DUP2"
    },
    "12343": {
      "op": "SHR"
    },
    "12344": {
      "op": "SWAP1"
    },
    "12345": {
      "op": "DUP3"
    },
    "12346": {
      "op": "AND"
    },
    "12347": {
      "op": "DUP1"
    },
    "12348": {
      "op": "PUSH2",
      "value": "0x3046"
    },
    "12351": {
      "op": "JUMPI"
    },
    "12352": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12354": {
      "op": "DUP3"
    },
    "12355": {
      "op": "AND"
    },
    "12356": {
      "op": "SWAP2"
    },
    "12357": {
      "op": "POP"
    },
    "12358": {
      "op": "JUMPDEST"
    },
    "12359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12361": {
      "op": "DUP3"
    },
    "12362": {
      "op": "LT"
    },
    "12363": {
      "op": "DUP2"
    },
    "12364": {
      "op": "SUB"
    },
    "12365": {
      "op": "PUSH2",
      "value": "0x3066"
    },
    "12368": {
      "op": "JUMPI"
    },
    "12369": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12374": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12376": {
      "op": "SHL"
    },
    "12377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12379": {
      "op": "MSTORE"
    },
    "12380": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12382": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12384": {
      "op": "MSTORE"
    },
    "12385": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12389": {
      "op": "REVERT"
    },
    "12390": {
      "op": "JUMPDEST"
    },
    "12391": {
      "op": "POP"
    },
    "12392": {
      "op": "SWAP2"
    },
    "12393": {
      "op": "SWAP1"
    },
    "12394": {
      "op": "POP"
    },
    "12395": {
      "jump": "o",
      "op": "JUMP"
    },
    "12396": {
      "op": "JUMPDEST"
    },
    "12397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12399": {
      "op": "DUP1"
    },
    "12400": {
      "op": "DUP3"
    },
    "12401": {
      "op": "MSTORE"
    },
    "12402": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "12404": {
      "op": "SWAP1"
    },
    "12405": {
      "op": "DUP3"
    },
    "12406": {
      "op": "ADD"
    },
    "12407": {
      "op": "MSTORE"
    },
    "12408": {
      "op": "PUSH18",
      "value": "0x3AB83230BA329D3737BA1031BAB930BA37B9"
    },
    "12427": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "12429": {
      "op": "SHL"
    },
    "12430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12432": {
      "op": "DUP3"
    },
    "12433": {
      "op": "ADD"
    },
    "12434": {
      "op": "MSTORE"
    },
    "12435": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12437": {
      "op": "ADD"
    },
    "12438": {
      "op": "SWAP1"
    },
    "12439": {
      "jump": "o",
      "op": "JUMP"
    },
    "12440": {
      "op": "JUMPDEST"
    },
    "12441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12445": {
      "op": "DUP3"
    },
    "12446": {
      "op": "DUP5"
    },
    "12447": {
      "op": "SUB"
    },
    "12448": {
      "op": "SLT"
    },
    "12449": {
      "op": "ISZERO"
    },
    "12450": {
      "op": "PUSH2",
      "value": "0x30AA"
    },
    "12453": {
      "op": "JUMPI"
    },
    "12454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12456": {
      "op": "DUP1"
    },
    "12457": {
      "op": "REVERT"
    },
    "12458": {
      "op": "JUMPDEST"
    },
    "12459": {
      "op": "POP"
    },
    "12460": {
      "op": "MLOAD"
    },
    "12461": {
      "op": "SWAP2"
    },
    "12462": {
      "op": "SWAP1"
    },
    "12463": {
      "op": "POP"
    },
    "12464": {
      "jump": "o",
      "op": "JUMP"
    },
    "12465": {
      "op": "JUMPDEST"
    },
    "12466": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12473": {
      "op": "SHL"
    },
    "12474": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12476": {
      "op": "MSTORE"
    },
    "12477": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12479": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12481": {
      "op": "MSTORE"
    },
    "12482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12486": {
      "op": "REVERT"
    },
    "12487": {
      "op": "JUMPDEST"
    },
    "12488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12490": {
      "op": "DUP3"
    },
    "12491": {
      "op": "NOT"
    },
    "12492": {
      "op": "DUP3"
    },
    "12493": {
      "op": "GT"
    },
    "12494": {
      "op": "ISZERO"
    },
    "12495": {
      "op": "PUSH2",
      "value": "0x30DA"
    },
    "12498": {
      "op": "JUMPI"
    },
    "12499": {
      "op": "PUSH2",
      "value": "0x30DA"
    },
    "12502": {
      "op": "PUSH2",
      "value": "0x30B1"
    },
    "12505": {
      "jump": "i",
      "op": "JUMP"
    },
    "12506": {
      "op": "JUMPDEST"
    },
    "12507": {
      "op": "POP"
    },
    "12508": {
      "op": "ADD"
    },
    "12509": {
      "op": "SWAP1"
    },
    "12510": {
      "jump": "o",
      "op": "JUMP"
    },
    "12511": {
      "op": "JUMPDEST"
    },
    "12512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12514": {
      "op": "DUP2"
    },
    "12515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12517": {
      "op": "NOT"
    },
    "12518": {
      "op": "DIV"
    },
    "12519": {
      "op": "DUP4"
    },
    "12520": {
      "op": "GT"
    },
    "12521": {
      "op": "DUP3"
    },
    "12522": {
      "op": "ISZERO"
    },
    "12523": {
      "op": "ISZERO"
    },
    "12524": {
      "op": "AND"
    },
    "12525": {
      "op": "ISZERO"
    },
    "12526": {
      "op": "PUSH2",
      "value": "0x30F9"
    },
    "12529": {
      "op": "JUMPI"
    },
    "12530": {
      "op": "PUSH2",
      "value": "0x30F9"
    },
    "12533": {
      "op": "PUSH2",
      "value": "0x30B1"
    },
    "12536": {
      "jump": "i",
      "op": "JUMP"
    },
    "12537": {
      "op": "JUMPDEST"
    },
    "12538": {
      "op": "POP"
    },
    "12539": {
      "op": "MUL"
    },
    "12540": {
      "op": "SWAP1"
    },
    "12541": {
      "jump": "o",
      "op": "JUMP"
    },
    "12542": {
      "op": "JUMPDEST"
    },
    "12543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12545": {
      "op": "DUP3"
    },
    "12546": {
      "op": "DUP3"
    },
    "12547": {
      "op": "LT"
    },
    "12548": {
      "op": "ISZERO"
    },
    "12549": {
      "op": "PUSH2",
      "value": "0x3110"
    },
    "12552": {
      "op": "JUMPI"
    },
    "12553": {
      "op": "PUSH2",
      "value": "0x3110"
    },
    "12556": {
      "op": "PUSH2",
      "value": "0x30B1"
    },
    "12559": {
      "jump": "i",
      "op": "JUMP"
    },
    "12560": {
      "op": "JUMPDEST"
    },
    "12561": {
      "op": "POP"
    },
    "12562": {
      "op": "SUB"
    },
    "12563": {
      "op": "SWAP1"
    },
    "12564": {
      "jump": "o",
      "op": "JUMP"
    },
    "12565": {
      "op": "JUMPDEST"
    },
    "12566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12570": {
      "op": "DUP3"
    },
    "12571": {
      "op": "DUP5"
    },
    "12572": {
      "op": "SUB"
    },
    "12573": {
      "op": "SLT"
    },
    "12574": {
      "op": "ISZERO"
    },
    "12575": {
      "op": "PUSH2",
      "value": "0x3127"
    },
    "12578": {
      "op": "JUMPI"
    },
    "12579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12581": {
      "op": "DUP1"
    },
    "12582": {
      "op": "REVERT"
    },
    "12583": {
      "op": "JUMPDEST"
    },
    "12584": {
      "op": "DUP2"
    },
    "12585": {
      "op": "MLOAD"
    },
    "12586": {
      "op": "PUSH2",
      "value": "0x2D7E"
    },
    "12589": {
      "op": "DUP2"
    },
    "12590": {
      "op": "PUSH2",
      "value": "0x2D20"
    },
    "12593": {
      "jump": "i",
      "op": "JUMP"
    },
    "12594": {
      "op": "JUMPDEST"
    },
    "12595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12597": {
      "op": "DUP1"
    },
    "12598": {
      "op": "DUP3"
    },
    "12599": {
      "op": "MSTORE"
    },
    "12600": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "12602": {
      "op": "SWAP1"
    },
    "12603": {
      "op": "DUP3"
    },
    "12604": {
      "op": "ADD"
    },
    "12605": {
      "op": "MSTORE"
    },
    "12606": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "12639": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12641": {
      "op": "DUP3"
    },
    "12642": {
      "op": "ADD"
    },
    "12643": {
      "op": "MSTORE"
    },
    "12644": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "12659": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "12661": {
      "op": "SHL"
    },
    "12662": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12664": {
      "op": "DUP3"
    },
    "12665": {
      "op": "ADD"
    },
    "12666": {
      "op": "MSTORE"
    },
    "12667": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12669": {
      "op": "ADD"
    },
    "12670": {
      "op": "SWAP1"
    },
    "12671": {
      "jump": "o",
      "op": "JUMP"
    },
    "12672": {
      "op": "JUMPDEST"
    },
    "12673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12675": {
      "op": "DUP1"
    },
    "12676": {
      "op": "DUP3"
    },
    "12677": {
      "op": "MSTORE"
    },
    "12678": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "12680": {
      "op": "SWAP1"
    },
    "12681": {
      "op": "DUP3"
    },
    "12682": {
      "op": "ADD"
    },
    "12683": {
      "op": "MSTORE"
    },
    "12684": {
      "op": "PUSH32",
      "value": "0x7570646174653A61756374696F6E206C6976652063616E6E6F74207570646174"
    },
    "12717": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12719": {
      "op": "DUP3"
    },
    "12720": {
      "op": "ADD"
    },
    "12721": {
      "op": "MSTORE"
    },
    "12722": {
      "op": "PUSH7",
      "value": "0x65207072696365"
    },
    "12730": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "12732": {
      "op": "SHL"
    },
    "12733": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12735": {
      "op": "DUP3"
    },
    "12736": {
      "op": "ADD"
    },
    "12737": {
      "op": "MSTORE"
    },
    "12738": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12740": {
      "op": "ADD"
    },
    "12741": {
      "op": "SWAP1"
    },
    "12742": {
      "jump": "o",
      "op": "JUMP"
    },
    "12743": {
      "op": "JUMPDEST"
    },
    "12744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12746": {
      "op": "DUP3"
    },
    "12747": {
      "op": "PUSH2",
      "value": "0x31E4"
    },
    "12750": {
      "op": "JUMPI"
    },
    "12751": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12758": {
      "op": "SHL"
    },
    "12759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12761": {
      "op": "MSTORE"
    },
    "12762": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "12764": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12766": {
      "op": "MSTORE"
    },
    "12767": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12771": {
      "op": "REVERT"
    },
    "12772": {
      "op": "JUMPDEST"
    },
    "12773": {
      "op": "POP"
    },
    "12774": {
      "op": "DIV"
    },
    "12775": {
      "op": "SWAP1"
    },
    "12776": {
      "jump": "o",
      "op": "JUMP"
    },
    "12777": {
      "op": "JUMPDEST"
    },
    "12778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12782": {
      "op": "DUP3"
    },
    "12783": {
      "op": "DUP5"
    },
    "12784": {
      "op": "SUB"
    },
    "12785": {
      "op": "SLT"
    },
    "12786": {
      "op": "ISZERO"
    },
    "12787": {
      "op": "PUSH2",
      "value": "0x31FB"
    },
    "12790": {
      "op": "JUMPI"
    },
    "12791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12793": {
      "op": "DUP1"
    },
    "12794": {
      "op": "REVERT"
    },
    "12795": {
      "op": "JUMPDEST"
    },
    "12796": {
      "op": "DUP2"
    },
    "12797": {
      "op": "MLOAD"
    },
    "12798": {
      "op": "DUP1"
    },
    "12799": {
      "op": "ISZERO"
    },
    "12800": {
      "op": "ISZERO"
    },
    "12801": {
      "op": "DUP2"
    },
    "12802": {
      "op": "EQ"
    },
    "12803": {
      "op": "PUSH2",
      "value": "0x2D7E"
    },
    "12806": {
      "op": "JUMPI"
    },
    "12807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12809": {
      "op": "DUP1"
    },
    "12810": {
      "op": "REVERT"
    }
  },
  "sha1": "7871f3238a7774387a1d4e204e7412008806bc97",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Settings.sol\";\nimport \"../Interfaces/IWETH.sol\";\nimport \"../openZeppelin/token/ERC721/ERC721.sol\";\nimport \"../openZeppelin/upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"../openZeppelin/upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol\";\n\ncontract TokenVault is ERC20Upgradeable, ERC721HolderUpgradeable {\n    using Address for address;\n\n    /// -----------------------------------\n    /// -------- BASIC INFORMATION --------\n    /// -----------------------------------\n\n    /// @notice weth address\n    address public constant weth = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n\n    /// -----------------------------------\n    /// -------- TOKEN INFORMATION --------\n    /// -----------------------------------\n\n    /// @notice the ERC721 token address of the vault's token\n    address public token;\n\n    /// @notice the ERC721 token ID of the vault's token\n    uint256 public id;\n\n    /// -------------------------------------\n    /// -------- AUCTION INFORMATION --------\n    /// -------------------------------------\n\n    /// @notice the unix timestamp end time of the token auction\n    uint256 public auctionEnd;\n\n    /// @notice the length of auctions\n    uint256 public auctionLength;\n\n    /// @notice reservePrice * votingTokens\n    uint256 public reserveTotal;\n\n    /// @notice the current price of the token during an auction\n    uint256 public livePrice;\n\n    /// @notice the current user winning the token auction\n    address payable public winning;\n\n    enum State { inactive, live, ended, redeemed }\n\n    State public auctionState;\n\n    /// -----------------------------------\n    /// -------- VAULT INFORMATION --------\n    /// -----------------------------------\n\n    /// @notice the governance contract which gets paid in ETH\n    address public immutable settings;\n\n    /// @notice the address who initially deposited the NFT\n    address public curator;\n\n    /// @notice the AUM fee paid to the curator yearly. 3 decimals. ie. 100 = 10%\n    uint256 public fee;\n\n    /// @notice the last timestamp where fees were claimed\n    uint256 public lastClaimed;\n\n    /// @notice a boolean to indicate if the vault has closed\n    bool public vaultClosed;\n\n    /// @notice the number of ownership tokens voting on the reserve price at any given time\n    uint256 public votingTokens;\n\n    /// @notice a mapping of users to their desired token price\n    mapping(address => uint256) public userPrices;\n\n    /// ------------------------\n    /// -------- EVENTS --------\n    /// ------------------------\n\n    /// @notice An event emitted when a user updates their price\n    event PriceUpdate(address indexed user, uint price);\n\n    /// @notice An event emitted when an auction starts\n    event Start(address indexed buyer, uint price);\n\n    /// @notice An event emitted when a bid is made\n    event Bid(address indexed buyer, uint price);\n\n    /// @notice An event emitted when an auction is won\n    event Won(address indexed buyer, uint price);\n\n    /// @notice An event emitted when someone redeems all tokens for the NFT\n    event Redeem(address indexed redeemer);\n\n    /// @notice An event emitted when someone cashes in ERC20 tokens for ETH from an ERC721 token sale\n    event Cash(address indexed owner, uint256 shares);\n\n    event UpdateAuctionLength(uint256 length);\n\n    event UpdateCuratorFee(uint256 fee);\n\n    event FeeClaimed(uint256 fee);\n\n    constructor(address _settings) {\n        settings = _settings;\n    }\n\n    function initialize(address _curator, address _token, uint256 _id, uint256 _supply, uint256 _listPrice, uint256 _fee, string memory _name, string memory _symbol) external initializer {\n        // initialize inherited contracts\n        __ERC20_init(_name, _symbol);\n        __ERC721Holder_init();\n        // set storage variables\n        token = _token;\n        id = _id;\n        auctionLength = 3 days;\n        curator = _curator;\n        fee = _fee;\n        lastClaimed = block.timestamp;\n        auctionState = State.inactive;\n        userPrices[_curator] = _listPrice;\n\n        _mint(_curator, _supply);\n    }\n\n    /// --------------------------------\n    /// -------- VIEW FUNCTIONS --------\n    /// --------------------------------\n\n    function reservePrice() public view returns(uint256) {\n        return votingTokens == 0 ? 0 : reserveTotal / votingTokens;\n    }\n\n    /// -------------------------------\n    /// -------- GOV FUNCTIONS --------\n    /// -------------------------------\n\n    /// @notice allow governance to boot a bad actor curator\n    /// @param _curator the new curator\n    function kickCurator(address _curator) external {\n        require(msg.sender == Ownable(settings).owner(), \"kick:not gov\");\n\n        curator = _curator;\n    }\n\n    /// @notice allow governance to remove bad reserve prices\n    function removeReserve(address _user) external {\n        require(msg.sender == Ownable(settings).owner(), \"remove:not gov\");\n        require(auctionState == State.inactive, \"update:auction live cannot update price\");\n\n        uint256 old = userPrices[_user];\n        require(0 != old, \"update:not an update\");\n        uint256 weight = balanceOf(_user);\n\n        votingTokens -= weight;\n        reserveTotal -= weight * old;\n        \n        userPrices[_user] = 0;\n\n        emit PriceUpdate(_user, 0);\n    }\n\n    /// -----------------------------------\n    /// -------- CURATOR FUNCTIONS --------\n    /// -----------------------------------\n\n    /// @notice allow curator to update the curator address\n    /// @param _curator the new curator\n    function updateCurator(address _curator) external {\n        require(msg.sender == curator, \"update:not curator\");\n\n        curator = _curator;\n    }\n\n    /// @notice allow curator to update the auction length\n    /// @param _length the new base price\n    function updateAuctionLength(uint256 _length) external {\n        require(msg.sender == curator, \"update:not curator\");\n        require(_length >= ISettings(settings).minAuctionLength() && _length <= ISettings(settings).maxAuctionLength(), \"update:invalid auction length\");\n\n        auctionLength = _length;\n        emit UpdateAuctionLength(_length);\n    }\n\n    /// @notice allow the curator to change their fee\n    /// @param _fee the new fee\n    function updateFee(uint256 _fee) external {\n        require(msg.sender == curator, \"update:not curator\");\n        require(_fee < fee, \"update:can't raise\");\n        require(_fee <= ISettings(settings).maxCuratorFee(), \"update:cannot increase fee this high\");\n\n        _claimFees();\n\n        fee = _fee;\n        emit UpdateCuratorFee(fee);\n    }\n\n    /// @notice external function to claim fees for the curator and governance\n    function claimFees() external {\n        _claimFees();\n    }\n\n    /// @dev interal fuction to calculate and mint fees\n    function _claimFees() internal {\n        require(auctionState != State.ended, \"claim:cannot claim after auction ends\");\n\n        // get how much in fees the curator would make in a year\n        uint256 currentAnnualFee = fee * totalSupply() / 1000; \n        // get how much that is per second;\n        uint256 feePerSecond = currentAnnualFee / 31536000;\n        // get how many seconds they are eligible to claim\n        uint256 sinceLastClaim = block.timestamp - lastClaimed;\n        // get the amount of tokens to mint\n        uint256 curatorMint = sinceLastClaim * feePerSecond;\n\n        // now lets do the same for governance\n        address govAddress = ISettings(settings).feeReceiver();\n        uint256 govFee = ISettings(settings).governanceFee();\n        currentAnnualFee = govFee * totalSupply() / 1000; \n        feePerSecond = currentAnnualFee / 31536000;\n        uint256 govMint = sinceLastClaim * feePerSecond;\n\n        lastClaimed = block.timestamp;\n\n        if (curator != address(0)) {\n            _mint(curator, curatorMint);\n            emit FeeClaimed(curatorMint);\n        }\n        if (govAddress != address(0)) {\n            _mint(govAddress, govMint);\n            emit FeeClaimed(govMint);\n        }\n    }\n\n    /// --------------------------------\n    /// -------- CORE FUNCTIONS --------\n    /// --------------------------------\n\n    /// @notice a function for an end user to update their desired sale price\n    /// @param _new the desired price in ETH\n    function updateUserPrice(uint256 _new) external {\n        require(auctionState == State.inactive, \"update:auction live cannot update price\");\n        uint256 old = userPrices[msg.sender];\n        require(_new != old, \"update:not an update\");\n        uint256 weight = balanceOf(msg.sender);\n\n        if (votingTokens == 0) {\n            votingTokens = weight;\n            reserveTotal = weight * _new;\n        }\n        // they are the only one voting\n        else if (weight == votingTokens && old != 0) {\n            reserveTotal = weight * _new;\n        }\n        // previously they were not voting\n        else if (old == 0) {\n            uint256 averageReserve = reserveTotal / votingTokens;\n\n            uint256 reservePriceMin = averageReserve * ISettings(settings).minReserveFactor() / 1000;\n            require(_new >= reservePriceMin, \"update:reserve price too low\");\n            uint256 reservePriceMax = averageReserve * ISettings(settings).maxReserveFactor() / 1000;\n            require(_new <= reservePriceMax, \"update:reserve price too high\");\n\n            votingTokens += weight;\n            reserveTotal += weight * _new;\n        } \n        // they no longer want to vote\n        else if (_new == 0) {\n            votingTokens -= weight;\n            reserveTotal -= weight * old;\n        } \n        // they are updating their vote\n        else {\n            uint256 averageReserve = (reserveTotal - (old * weight)) / (votingTokens - weight);\n\n            uint256 reservePriceMin = averageReserve * ISettings(settings).minReserveFactor() / 1000;\n            require(_new >= reservePriceMin, \"update:reserve price too low\");\n            uint256 reservePriceMax = averageReserve * ISettings(settings).maxReserveFactor() / 1000;\n            require(_new <= reservePriceMax, \"update:reserve price too high\");\n\n            reserveTotal = reserveTotal + (weight * _new) - (weight * old);\n        }\n\n        userPrices[msg.sender] = _new;\n\n        emit PriceUpdate(msg.sender, _new);\n    }\n\n    /// @notice an internal function used to update sender and receivers price on token transfer\n    /// @param _from the ERC20 token sender\n    /// @param _to the ERC20 token receiver\n    /// @param _amount the ERC20 token amount\n    function _beforeTokenTransfer(address _from, address _to, uint256 _amount) internal virtual override {\n        if (auctionState == State.inactive) {\n            uint256 fromPrice = userPrices[_from];\n            uint256 toPrice = userPrices[_to];\n\n            // only do something if users have different reserve price\n            if (toPrice != fromPrice) {\n                // new holder is not a voter\n                if (toPrice == 0) {\n                    // get the average reserve price ignoring the senders amount\n                    votingTokens -= _amount;\n                    reserveTotal -= _amount * fromPrice;\n                }\n                // old holder is not a voter\n                else if (fromPrice == 0) {\n                    votingTokens += _amount;\n                    reserveTotal += _amount * toPrice;\n                }\n                // both holders are voters\n                else {\n                    reserveTotal = reserveTotal + (_amount * toPrice) - (_amount * fromPrice);\n                }\n            }\n        }\n    }\n\n    /// @notice kick off an auction. Must send reservePrice in ETH\n    function start() external payable {\n        require(auctionState == State.inactive, \"start:no auction starts\");\n        require(msg.value >= reservePrice(), \"start:too low bid\");\n        require(votingTokens * 1000 >= ISettings(settings).minVotePercentage() * totalSupply(), \"start:not enough voters\");\n        \n        auctionEnd = block.timestamp + auctionLength;\n        auctionState = State.live;\n\n        livePrice = msg.value;\n        winning = payable(msg.sender);\n\n        emit Start(msg.sender, msg.value);\n    }\n\n    /// @notice an external function to bid on purchasing the vaults NFT. The msg.value is the bid amount\n    function bid() external payable {\n        require(auctionState == State.live, \"bid:auction is not live\");\n        uint256 increase = ISettings(settings).minBidIncrease() + 1000;\n        require(msg.value * 1000 >= livePrice * increase, \"bid:too low bid\");\n        require(block.timestamp < auctionEnd, \"bid:auction ended\");\n\n        // If bid is within 15 minutes of auction end, extend auction\n        if (auctionEnd - block.timestamp <= 15 minutes) {\n            auctionEnd += 15 minutes;\n        }\n\n        _sendETHOrWETH(winning, livePrice);\n\n        livePrice = msg.value;\n        winning = payable(msg.sender);\n\n        emit Bid(msg.sender, msg.value);\n    }\n\n    /// @notice an external function to end an auction after the timer has run out\n    function end() external {\n        require(auctionState == State.live, \"end:vault has already closed\");\n        require(block.timestamp >= auctionEnd, \"end:auction live\");\n\n        _claimFees();\n\n        // transfer erc721 to winner\n        IERC721(token).transferFrom(address(this), winning, id);\n\n        auctionState = State.ended;\n\n        emit Won(winning, livePrice);\n    }\n\n    /// @notice an external function to burn all ERC20 tokens to receive the ERC721 token\n    function redeem() external {\n        require(auctionState == State.inactive, \"redeem:no redeeming\");\n        _burn(msg.sender, totalSupply());\n        \n        // transfer erc721 to redeemer\n        IERC721(token).transferFrom(address(this), msg.sender, id);\n        \n        auctionState = State.redeemed;\n\n        emit Redeem(msg.sender);\n    }\n\n    /// @notice an external function to burn ERC20 tokens to receive ETH from ERC721 token purchase\n    function cash() external {\n        require(auctionState == State.ended, \"cash:vault not closed yet\");\n        uint256 bal = balanceOf(msg.sender);\n        require(bal > 0, \"cash:no tokens to cash out\");\n        uint256 share = bal * address(this).balance / totalSupply();\n        _burn(msg.sender, bal);\n\n        _sendETHOrWETH(payable(msg.sender), share);\n\n        emit Cash(msg.sender, share);\n    }\n\n    // Will attempt to transfer ETH, but will transfer WETH instead if it fails.\n    function _sendETHOrWETH(address to, uint256 value) internal {\n        // Try to transfer ETH to the given recipient.\n        if (!_attemptETHTransfer(to, value)) {\n            // If the transfer fails, wrap and send as WETH, so that\n            // the auction is not impeded and the recipient still\n            // can claim ETH via the WETH contract (similar to escrow).\n            IWETH(weth).deposit{value: value}();\n            IWETH(weth).transfer(to, value);\n            // At this point, the recipient can unwrap WETH.\n        }\n    }\n\n    // Sending ETH is not guaranteed complete, and the method used here will return false if\n    // it fails. For example, a contract can block ETH transfer, or might use\n    // an excessive amount of gas, thereby griefing a new bidder.\n    // We should limit the gas used in transfers, and handle failure cases.\n    function _attemptETHTransfer(address to, uint256 value)\n        internal\n        returns (bool)\n    {\n        // Here increase the gas limit a reasonable amount above the default, and try\n        // to send ETH to the recipient.\n        // NOTE: This might allow the recipient to attempt a limited reentrancy attack.\n        (bool success, ) = to.call{value: value, gas: 30000}(\"\");\n        return success;\n    }\n\n}",
  "sourceMap": "322:15433:1:-:0;;;3442:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3483:20:1;;;322:15433;;14:290:28;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:28;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:28:o;:::-;322:15433:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/ERC721TokenVault.sol",
  "type": "contract"
}